{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js\";\nimport React, { Component } from 'react';\nimport 'firebase/database';\nimport * as firebase from 'firebase/app';\nimport { objectExpression } from '@babel/types';\nimport \"./analysis.css\";\nimport CanvasJSReact from '../assets/canvasjs.react';\nimport { Link } from 'react-router-dom';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst beaconlist = {\n  \"c2af522362be\": \"Client A\",\n  \"e20200bc8540\": \"Client B\"\n};\n\nclass Analysis extends React.Component {\n  constructor(props) {\n    super(props);\n    const beaconlist = {\n      \"c2af522362be\": \"Client A\",\n      \"e20200bc8540\": \"Client B\"\n    };\n    var self = this;\n    this.state = {\n      beaconlist: [{\n        id: \"c2af522362be\",\n        name: \"Client A\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\",\n        numberOfLeftDuringOperatingHours: 0\n      }, {\n        id: \"e20200bc8540\",\n        name: \"Client B\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\",\n        numberOfLeftDuringOperatingHours: 0\n      }],\n      data: '',\n      periodTracker: {\n        morning: 0,\n        noon: 0,\n        afternoon: 0,\n        nonOperatingHour: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    var recentPostsRef = firebase.database().ref('/deployment');\n    recentPostsRef.once('value').then(snapshot => {\n      // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n      this.setState({\n        data: snapshot.val()\n      }, () => {\n        this.generateClientData();\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.data != '') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.renderTables());\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Fetching data.... Please wait.  \"), React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n  generateClientDataPoints(dataList) {\n    var result = new Array();\n\n    for (let i = 0; i < dataList.length; i++) {\n      var client = dataList[i];\n      var clientObj = {\n        label: '',\n        y: ''\n      };\n      clientObj.label = client.name;\n      clientObj.y = client.numberOfLeftDuringOperatingHours;\n      result.push(clientObj);\n    }\n\n    return result;\n  }\n\n  renderClientTableChart() {\n    var dataList = this.state.beaconlist;\n    var dataPoints = this.generateClientDataPoints(dataList);\n    const options = {\n      // title: { text: \"Period Tracker\" },\n      animationEnabled: true,\n      data: [{\n        click: function (e) {\n          window.alert(e.dataSeries.type + \", dataPoint { x:\" + e.dataPoint.x + \", y: \" + e.dataPoint.y + \" }\");\n          console.log(\"hey\");\n          console.log(e);\n        },\n        type: \"column\",\n        dataPoints: dataPoints\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n  renderPeriodTableChart() {\n    var data = this.state.periodTracker;\n    const options = {\n      // title: { text: \"Period Tracker\" },\n      animationEnabled: true,\n      data: [{\n        type: \"column\",\n        dataPoints: [{\n          label: \"Morning (7.00 AM to 11.59 AM) \",\n          y: data.morning\n        }, {\n          label: \"Noon (12.00 PM to 2.59 PM)\",\n          y: data.noon\n        }, {\n          label: \"Afternoon (3.00 PM to 5.59 PM)\",\n          y: data.afternoon\n        }]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }));\n  }\n\n  renderTables() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"800px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Client List\"), React.createElement(\"table\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"No. of Times Left\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Category\")), this.renderTableData())), this.renderClientTableChart()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Number of Times Clients Left During:\"), React.createElement(\"table\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Morning\"), \" (7.00 AM to 11.59 AM) \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Noon\"), \" (12.00 PM to 2.59 PM)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Afternoon\"), \" (3.00 PM to 5.59 PM)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Non-Operating Hours\"), \" (6.00 PM Onwards)\")), this.renderTablePeriodData())), this.renderPeriodTableChart()));\n  }\n\n  renderTableData() {\n    return this.state.beaconlist.map((value, index) => {\n      const id = value.id,\n            category = value.category,\n            name = value.name,\n            numberOfLeft = value.numberOfLeft,\n            numberOfLeftDuringOperatingHours = value.numberOfLeftDuringOperatingHours,\n            timeLeftHistory = value.timeLeftHistory; //destructuring\n      // var d = JSON.parse(lastSeen)\n      // var x = new Date(d);\n      // console.log(x);\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, numberOfLeftDuringOperatingHours), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, category));\n    });\n  }\n\n  renderTablePeriodData() {\n    var periodTrackerObj = this.state.periodTracker;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, periodTrackerObj.morning), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, periodTrackerObj.noon), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, periodTrackerObj.afternoon), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, periodTrackerObj.nonOperatingHour));\n  }\n\n  generateClientData() {\n    console.log(this.state.beaconlist);\n    var data = this.state.data;\n    var beaconlist = this.state.beaconlist;\n    var entries = Object.entries(data); // console.log(entries)\n    // var updateBeaconList = new Array();\n\n    for (let i = 0; i < entries.length; i++) {\n      // console.log(data[i]);\n      var data = entries[i][1]; // to geth the object of beacons and its value\n\n      console.log(data);\n\n      for (let j = 0; j < beaconlist.length; j++) {\n        console.log(data); //value of current beaconin the beaconlist\n\n        var beacon = beaconlist[j];\n        var currObj = {\n          id: beacon.id,\n          name: beacon.name,\n          timeLeftHistory: beacon.timeLeftHistory,\n          numberOfLeft: beacon.numberOfLeft,\n          category: beacon.category,\n          numberOfLeftDuringOperatingHours: beacon.numberOfLeftDuringOperatingHours\n        };\n        var beaconid = beacon.id;\n        console.log(beaconid);\n        var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n        var noOfLeft = beacon.numberOfLeft; // var t = \"e20200bc8540\";\n        //value of beacon from data in firebase\n\n        var beaconData = data[beaconid];\n        console.log(beaconData);\n        var lastSeenData = beaconData.lastSeen;\n        var statusMsgData = beaconData.statusMsg;\n\n        if (!timeLeftHistory.includes(lastSeenData)) {\n          if (statusMsgData == \"left\") {\n            noOfLeft += 1;\n            timeLeftHistory.push(lastSeenData);\n            console.log(noOfLeft);\n            console.log(\"yes\");\n          }\n        }\n\n        currObj.timeLeftHistory = timeLeftHistory;\n        currObj.numberOfLeft = noOfLeft;\n        currObj.numberOfLeftDuringOperatingHours = noOfLeft;\n        console.log(currObj.numberOfLeft);\n        beaconlist[j] = currObj;\n      }\n    }\n\n    this.setState({\n      beaconlist: beaconlist\n    }, () => {\n      this.generatePeriodTrackerData();\n    });\n  }\n\n  generatePeriodTrackerData() {\n    var beaconlist = this.state.beaconlist;\n    var periodTracker = this.state.periodTracker;\n\n    for (let i = 0; i < beaconlist.length; i++) {\n      var beacon = beaconlist[i];\n      var timeLeftHistory = beacon.timeLeftHistory; // var numberOfLeftDuringOperatingHours = beacon.numberOfLeftDuringOperatingHours;\n\n      var numberOfLeftDuringNonOperatinghours = 0;\n\n      for (let j = 0; j < timeLeftHistory.length; j++) {\n        var datetimestr = JSON.parse(timeLeftHistory[j]);\n        var datetime = new Date(datetimestr);\n        var time = datetime.toLocaleTimeString();\n        console.log(time); //set opening and closing time\n\n        var closing = \"18:00:00\";\n        var closingDate = Date.parse(\"01/01/2011 \" + closing);\n        var opening = \"07:00:00\";\n        var openingDate = Date.parse(\"01/01/2011 \" + opening);\n        var noon = \"12:00:00\";\n        var noonDate = Date.parse('01/01/2011 ' + noon);\n        var afternoon = \"15:00:00\";\n        var afternoonDate = Date.parse(\"01/01/2011 \" + afternoon);\n        var timeDate = Date.parse(\"01/01/2011 \" + time);\n\n        if (timeDate >= openingDate && timeDate < closingDate) {\n          if (timeDate < noonDate) {\n            periodTracker.morning += 1;\n          } else if (timeDate < afternoonDate) {\n            periodTracker.noon += 1;\n          } else {\n            periodTracker.afternoon += 1;\n          }\n        } else {\n          periodTracker.nonOperatingHour += 1;\n          numberOfLeftDuringNonOperatinghours += 1;\n        }\n      }\n\n      beacon.numberOfLeftDuringOperatingHours -= numberOfLeftDuringNonOperatinghours; //update their cateogry\n\n      if (beacon.numberOfLeftDuringOperatingHours < 1) {\n        beacon.category = \"Low Risk\";\n      } else if (beacon.numberOfLeftDuringOperatingHours < 2) {\n        beacon.category = \"Medium Risk\";\n      } else {\n        beacon.category = \"High Risk\";\n      }\n\n      beaconlist[i] = beacon;\n    }\n\n    this.setState({\n      periodTracker: periodTracker,\n      beaconlist: beaconlist\n    });\n  }\n\n}\n\nexport default Analysis;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js"],"names":["React","Component","firebase","objectExpression","CanvasJSReact","Link","CanvasJSChart","beaconlist","Analysis","constructor","props","self","state","id","name","timeLeftHistory","numberOfLeft","category","numberOfLeftDuringOperatingHours","data","periodTracker","morning","noon","afternoon","nonOperatingHour","componentDidMount","recentPostsRef","database","ref","once","then","snapshot","setState","val","generateClientData","render","console","log","renderTables","generateClientDataPoints","dataList","result","Array","i","length","client","clientObj","label","y","push","renderClientTableChart","dataPoints","options","animationEnabled","click","e","window","alert","dataSeries","type","dataPoint","x","renderPeriodTableChart","width","marginLeft","marginRight","renderTableData","renderTablePeriodData","map","value","index","periodTrackerObj","entries","Object","j","beacon","currObj","beaconid","noOfLeft","beaconData","lastSeenData","lastSeen","statusMsgData","statusMsg","includes","generatePeriodTrackerData","numberOfLeftDuringNonOperatinghours","datetimestr","JSON","parse","datetime","Date","time","toLocaleTimeString","closing","closingDate","opening","openingDate","noonDate","afternoonDate","timeDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'firebase/database';\nimport * as firebase from 'firebase/app'\nimport { objectExpression } from '@babel/types';\nimport \"./analysis.css\"\nimport CanvasJSReact from '../assets/canvasjs.react';\nimport { Link } from 'react-router-dom';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart\n\nconst beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\nclass Analysis extends React.Component {\n    constructor(props) {\n        super(props)\n        const beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\n        var self = this;\n\n        this.state = {\n            beaconlist: [\n                {\n                    id: \"c2af522362be\",\n                    name: \"Client A\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\",\n                    numberOfLeftDuringOperatingHours: 0,\n                },\n                {\n                    id: \"e20200bc8540\",\n                    name: \"Client B\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\",\n                    numberOfLeftDuringOperatingHours: 0,\n                }\n            ],\n            data: '',\n            periodTracker: {\n                morning: 0,\n                noon: 0,\n                afternoon: 0,\n                nonOperatingHour: 0,\n\n            }\n        }\n\n\n\n    }\n    componentDidMount() {\n        var recentPostsRef = firebase.database().ref('/deployment');\n        recentPostsRef.once('value').then(snapshot => {\n            // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n            this.setState({\n                data: snapshot.val()\n            }, () => {\n\n                this.generateClientData();\n            })\n        });\n\n    }\n\n    render() {\n\n        console.log(this.state)\n\n        if (this.state.data != '') {\n            return (\n                <div>\n                    {this.renderTables()}\n                </div>\n            )\n        }\n\n        return (\n\n            <div>\n                <h1>Fetching data.... Please wait.  </h1>\n                <div className=\"loader\"></div>\n            </div>\n\n        )\n\n    }\n\n\n\n    generateClientDataPoints(dataList) {\n        var result = new Array();\n        for (let i = 0; i < dataList.length; i++) {\n            var client = dataList[i];\n            var clientObj = { label: '', y: '' };\n            clientObj.label = client.name;\n            clientObj.y = client.numberOfLeftDuringOperatingHours;\n            result.push(clientObj);\n        }\n\n        return result;\n\n    }\n    renderClientTableChart() {\n        var dataList = this.state.beaconlist\n        var dataPoints = this.generateClientDataPoints(dataList);\n        const options = {\n            // title: { text: \"Period Tracker\" },\n            animationEnabled: true,\n            data: [\n                {\n                    click: function (e) {\n                        window.alert(e.dataSeries.type + \", dataPoint { x:\" + e.dataPoint.x + \", y: \" + e.dataPoint.y + \" }\");\n                        console.log(\"hey\")\n                        console.log(e)\n                    },\n                    type: \"column\",\n                    dataPoints: dataPoints,\n                }\n            ]\n        }\n\n        return (\n            <div>\n                {/* <h1>React Column Chart</h1> */}\n                <CanvasJSChart options={options}\n                /* onRef={ref => this.chart = ref} */\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div>\n\n        )\n    }\n\n    renderPeriodTableChart() {\n        var data = this.state.periodTracker\n        const options = {\n            // title: { text: \"Period Tracker\" },\n            animationEnabled: true,\n            data: [\n                {\n                    type: \"column\",\n                    dataPoints: [\n                        { label: \"Morning (7.00 AM to 11.59 AM) \", y: data.morning },\n                        { label: \"Noon (12.00 PM to 2.59 PM)\", y: data.noon },\n                        { label: \"Afternoon (3.00 PM to 5.59 PM)\", y: data.afternoon },\n                    ]\n                }\n            ]\n        }\n\n        return (\n            <div>\n                {/* <h1>React Column Chart</h1> */}\n                <CanvasJSChart options={options}\n                /* onRef={ref => this.chart = ref} */\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div>\n\n        )\n    }\n\n    renderTables() {\n\n        return (\n\n            <div>\n\n                <div style={{ width: \"800px\", marginLeft: \"auto\", marginRight: \"auto\", }}>\n                    <h1>Client List</h1>\n                    <table style={{ marginLeft: \"auto\", marginRight: \"auto\", width: \"100%\" }}>\n                        <tbody>\n                            {/* <tr>{this.renderTableHeader()}</tr> */}\n                            <tr>\n                                <th>Name</th>\n                                <th>ID</th>\n                                <th>No. of Times Left</th>\n                                <th>Category</th>\n                            </tr>\n                            {this.renderTableData()}\n                        </tbody>\n                    </table>\n                    {this.renderClientTableChart()}\n                </div>\n                <br></br>\n                <div style={{ marginLeft: \"auto\", marginRight: \"auto\", }}>\n                    <h1>Number of Times Clients Left During:</h1>\n                    <table style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n                        <tbody>\n                            {/* <tr>{this.renderTableHeader()}</tr> */}\n                            <tr>\n                                <th><div>Morning</div> (7.00 AM to 11.59 AM) </th>\n                                <th><div>Noon</div> (12.00 PM to 2.59 PM)</th>\n                                <th><div>Afternoon</div> (3.00 PM to 5.59 PM)</th>\n                                <th><div>Non-Operating Hours</div> (6.00 PM Onwards)</th>\n                            </tr>\n                            {this.renderTablePeriodData()}\n                        </tbody>\n                    </table>\n                    {this.renderPeriodTableChart()}\n                </div>\n\n\n            </div>\n\n        )\n\n    }\n\n    renderTableData() {\n\n        return this.state.beaconlist.map((value, index) => {\n            const { id, category, name, numberOfLeft, numberOfLeftDuringOperatingHours, timeLeftHistory } = value //destructuring\n            // var d = JSON.parse(lastSeen)\n            // var x = new Date(d);\n            // console.log(x);\n\n            return (\n                <tr key={id}>\n                    <td>{name}</td>\n                    <td>{id}</td>\n                    <td>{numberOfLeftDuringOperatingHours}</td>\n                    <td>{category}</td>\n                </tr>\n            )\n        })\n    }\n\n\n    renderTablePeriodData() {\n\n        var periodTrackerObj = this.state.periodTracker;\n\n\n        return (\n            <tr>\n                <td>{periodTrackerObj.morning}</td>\n                <td>{periodTrackerObj.noon}</td>\n                <td>{periodTrackerObj.afternoon}</td>\n                <td>{periodTrackerObj.nonOperatingHour}</td>\n            </tr>\n        )\n\n    }\n\n\n    generateClientData() {\n        console.log(this.state.beaconlist);\n        var data = this.state.data;\n\n        var beaconlist = this.state.beaconlist;\n\n        var entries = Object.entries(data)\n\n\n\n\n        // console.log(entries)\n\n        // var updateBeaconList = new Array();\n\n        for (let i = 0; i < entries.length; i++) {\n            // console.log(data[i]);\n\n            var data = entries[i][1] // to geth the object of beacons and its value\n            console.log(data);\n\n\n            for (let j = 0; j < beaconlist.length; j++) {\n                console.log(data)\n\n                //value of current beaconin the beaconlist\n                var beacon = beaconlist[j];\n\n                var currObj = {\n                    id: beacon.id,\n                    name: beacon.name,\n                    timeLeftHistory: beacon.timeLeftHistory,\n                    numberOfLeft: beacon.numberOfLeft,\n                    category: beacon.category,\n                    numberOfLeftDuringOperatingHours: beacon.numberOfLeftDuringOperatingHours,\n                }\n\n                var beaconid = beacon.id;\n                console.log(beaconid)\n                var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n                var noOfLeft = beacon.numberOfLeft;\n\n                // var t = \"e20200bc8540\";\n\n                //value of beacon from data in firebase\n                var beaconData = data[beaconid];\n                console.log(beaconData)\n                var lastSeenData = beaconData.lastSeen;\n                var statusMsgData = beaconData.statusMsg;\n\n                if (!(timeLeftHistory.includes(lastSeenData))) {\n                    if (statusMsgData == \"left\") {\n                        noOfLeft += 1;\n                        timeLeftHistory.push(lastSeenData);\n                        console.log(noOfLeft);\n                        console.log(\"yes\")\n                    }\n                }\n\n\n\n                currObj.timeLeftHistory = timeLeftHistory;\n                currObj.numberOfLeft = noOfLeft;\n                currObj.numberOfLeftDuringOperatingHours = noOfLeft;\n\n\n                console.log(currObj.numberOfLeft)\n\n                beaconlist[j] = currObj\n\n            }\n\n        }\n\n        this.setState({\n            beaconlist: beaconlist,\n        }, () => {\n            this.generatePeriodTrackerData();\n        })\n    }\n\n\n    generatePeriodTrackerData() {\n        var beaconlist = this.state.beaconlist;\n        var periodTracker = this.state.periodTracker;\n\n\n\n        for (let i = 0; i < beaconlist.length; i++) {\n            var beacon = beaconlist[i];\n            var timeLeftHistory = beacon.timeLeftHistory;\n            // var numberOfLeftDuringOperatingHours = beacon.numberOfLeftDuringOperatingHours;\n            var numberOfLeftDuringNonOperatinghours = 0;\n\n            for (let j = 0; j < timeLeftHistory.length; j++) {\n                var datetimestr = JSON.parse(timeLeftHistory[j]);\n                var datetime = new Date(datetimestr);\n                var time = datetime.toLocaleTimeString();\n                console.log(time)\n\n\n                //set opening and closing time\n                var closing = \"18:00:00\";\n                var closingDate = Date.parse(\"01/01/2011 \" + closing);\n                var opening = \"07:00:00\";\n                var openingDate = Date.parse(\"01/01/2011 \" + opening);\n\n                var noon = \"12:00:00\";\n                var noonDate = Date.parse('01/01/2011 ' + noon)\n                var afternoon = \"15:00:00\";\n                var afternoonDate = Date.parse(\"01/01/2011 \" + afternoon);\n\n                var timeDate = Date.parse(\"01/01/2011 \" + time);\n\n                if (timeDate >= openingDate && timeDate < closingDate) {\n                    if (timeDate < noonDate) {\n                        periodTracker.morning += 1;\n                    } else if (timeDate < afternoonDate) {\n                        periodTracker.noon += 1;\n                    } else {\n                        periodTracker.afternoon += 1;\n                    }\n\n                } else {\n                    periodTracker.nonOperatingHour += 1;\n                    numberOfLeftDuringNonOperatinghours += 1\n\n                }\n            }\n\n\n            beacon.numberOfLeftDuringOperatingHours -= numberOfLeftDuringNonOperatinghours;\n\n            //update their cateogry\n            if (beacon.numberOfLeftDuringOperatingHours < 1) {\n                beacon.category = \"Low Risk\"\n            } else if (beacon.numberOfLeftDuringOperatingHours < 2) {\n                beacon.category = \"Medium Risk\"\n            } else {\n                beacon.category = \"High Risk\"\n            }\n\n            beaconlist[i] = beacon;\n\n        }\n\n        this.setState({\n            periodTracker: periodTracker,\n            beaconlist: beaconlist,\n        })\n    }\n\n}\n\nexport default Analysis"]},"metadata":{},"sourceType":"module"}