{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js\";\nimport React, { Component } from 'react';\nimport 'firebase/database';\nimport * as firebase from 'firebase/app';\nimport { objectExpression } from '@babel/types';\nconst beaconlist = {\n  \"c2af522362be\": \"Client A\",\n  \"e20200bc8540\": \"Client B\"\n};\n\nclass Analysis extends React.Component {\n  constructor(props) {\n    super(props);\n    const beaconlist = {\n      \"c2af522362be\": \"Client A\",\n      \"e20200bc8540\": \"Client B\"\n    };\n    var self = this;\n    this.state = {\n      beaconlist: [{\n        id: \"c2af522362be\",\n        name: \"Client A\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\"\n      }, {\n        id: \"e20200bc8540\",\n        name: \"Client A\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\"\n      }],\n      thresholdCategory: [{\n        threshold: 0,\n        valueMsg: \"Low Risk\"\n      }, {\n        threshold: 1,\n        valueMsg: \"Medium Risk\"\n      }, {\n        threshold: 2,\n        valueMsg: \"High Risk\"\n      }],\n      data: ''\n    };\n    var recentPostsRef = firebase.database().ref('/deployment');\n    recentPostsRef.once('value').then(snapshot => {\n      // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n      this.setState({\n        data: snapshot.val()\n      }, () => {\n        this.generateData();\n      });\n    }); // const rootRef = firebase.database().ref();\n    // const beaconRef = rootRef.child('deployment');\n    // const tableval = beaconRef.limitToLast(100).on('child_added',function(snapshot){\n    //     var data = snapshot.val();\n    //     console.log(data);\n    //     console.log(beaconlist[0]);\n    //     var beacon_1 = data[Object.keys(beaconlist)[0]];\n    //     var beacon_2 = data[Object.keys(beaconlist)[1]];\n    //     console.log(beacon_1);\n    //     self.setState({\n    //         beaconArray:[\n    //           { id: beacon_1.id,\n    //              lastSeen: beacon_1.lastSeen, \n    //              rssi_da1: beacon_1.rssi_da1, \n    //              lastSeen_da1: beacon_1.lastSeen_da1,\n    //              rssi_ma1: beacon_1.rssi_ma1,\n    //              last_seen_ma1: beacon_1.last_seen_ma1,\n    //              rssi_r1: beacon_1.rssi_r1,\n    //              last_seen_r1: beacon_1.last_seen_r1, \n    //              statusMsg: beacon_1.statusMsg },\n    //              { id: beacon_2.id,\n    //                 lastSeen: beacon_2.lastSeen, \n    //                 rssi_da1: beacon_2.rssi_da1, \n    //                 lastSeen_da1: beacon_2.lastSeen_da1,\n    //                 rssi_ma1: beacon_2.rssi_ma1,\n    //                 last_seen_ma1: beacon_2.last_seen_ma1,\n    //                 rssi_r1: beacon_2.rssi_r1,\n    //                 last_seen_r1: beacon_2.last_seen_r1, \n    //                 statusMsg: beacon_2.statusMsg }\n    //          ]\n    //     })\n    // }); \n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n  } // renderTableHeader() {\n  //     let header = Object.keys(this.state.beaconArray)\n  //     return header.map((key, index) => {\n  //         return <th key={index}>{key.toUpperCase()}</th>\n  //     })\n  // }\n  // renderTableData() {\n  //     return this.state.beaconArray.map((beaconArray, index) => {\n  //         const { id, lastSeen, rssi_da1, lastSeen_da1, rssi_da2, lastSeen_da2, statusMsg } = beaconArray //destructuring\n  //         var d = JSON.parse(lastSeen)\n  //         var x = new Date(d);\n  //         console.log(x);\n  //         return (\n  //             <tr key={id}>\n  //                 <td>{beaconlist[id]}</td>\n  //                 <td>{id}</td>\n  //                 <td>{x.toString()}</td>\n  //                 <td>{statusMsg}</td>\n  //             </tr>\n  //         )\n  //     })\n  // }\n  // render() {\n  //     return (\n  //         <div>\n  //             <h1 id='title'>Client Monitoring Dashboard</h1>\n  //             <table id='beacon'>\n  //                 <tbody>\n  //                     {/* <tr>{this.renderTableHeader()}</tr> */}\n  //                     <tr>\n  //                         <th>Name</th>\n  //                         <th>ID</th>\n  //                         <th>Last Seen</th>\n  //                         <th>Status Message</th>\n  //                     </tr>\n  //                     {this.renderTableData()}\n  //                 </tbody>\n  //             </table>\n  //         </div>\n  //     )\n  // }\n\n\n  generateData() {\n    console.log(this.state.beaconlist);\n    var data = this.state.data;\n    var beaconlist = this.state.beaconlist;\n    var entries = Object.entries(data); // console.log(entries)\n\n    for (let i = 0; i < entries.length; i++) {\n      // console.log(data[i]);\n      var data = entries[i][1]; // to geth the object of beacons and its value\n\n      console.log(data); // const { id, lastSeen, rssi_da1,lastSeen_da1, rssi_da2, lastSeen_da2, statusMsg} = beaconArray //destructuring\n      // var d = JSON.parse(lastSeen)\n      // var x = new Date(d);\n\n      var updateBeaconList = new Array();\n\n      for (let j = 0; j < beaconlist.length; j++) {\n        console.log(data); //value of current beaconin the beaconlist\n\n        var beacon = beaconlist[j];\n        var currObj = {\n          id: beacon.id,\n          name: beacon.name,\n          timeLeftHistory: beacon.timeLeftHistory,\n          numberOfLeft: beacon.numberOfLeft,\n          category: beacon.category\n        };\n        var beaconid = beacon.id;\n        console.log(beaconid);\n        var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n        var noOfLeft = beacon.numberOfLeft; // var t = \"e20200bc8540\";\n        //value of beacon from data in firebase\n\n        var beaconData = data[beaconid];\n        console.log(beaconData);\n        var lastSeenData = beaconData.lastSeen;\n        var statusMsgData = beaconData.statusMsg;\n\n        if (!timeLeftHistory.includes(lastSeenData)) {\n          if (statusMsgData == \"left\") {\n            noOfLeft += 1;\n            timeLeftHistory.push(lastSeenData);\n          }\n        }\n\n        currObj.timeLeftHistory = timeLeftHistory;\n        currObj.numberOfLeft = noOfLeft;\n        updateBeaconList[j] = currObj;\n      }\n\n      this.setState({\n        beaconlist: updateBeaconList\n      });\n    }\n  }\n\n}\n\nexport default Analysis;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js"],"names":["React","Component","firebase","objectExpression","beaconlist","Analysis","constructor","props","self","state","id","name","timeLeftHistory","numberOfLeft","category","thresholdCategory","threshold","valueMsg","data","recentPostsRef","database","ref","once","then","snapshot","setState","val","generateData","render","console","log","entries","Object","i","length","updateBeaconList","Array","j","beacon","currObj","beaconid","noOfLeft","beaconData","lastSeenData","lastSeen","statusMsgData","statusMsg","includes","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'firebase/database';\nimport * as firebase from 'firebase/app'\nimport { objectExpression } from '@babel/types';\nconst beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\nclass Analysis extends React.Component {\n    constructor(props) {\n        super(props)\n        const beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\n        var self = this;\n\n        this.state = {\n            beaconlist: [\n                {\n                    id: \"c2af522362be\",\n                    name: \"Client A\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\"\n                },\n                {\n                    id: \"e20200bc8540\",\n                    name: \"Client A\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\"\n                }\n            ],\n\n            thresholdCategory: [\n                {\n                    threshold: 0,\n                    valueMsg: \"Low Risk\"\n                },\n                {\n                    threshold: 1,\n                    valueMsg: \"Medium Risk\"\n                },\n                {\n                    threshold: 2,\n                    valueMsg: \"High Risk\"\n                }\n            ],\n            data: ''\n        }\n\n        var recentPostsRef = firebase.database().ref('/deployment');\n        recentPostsRef.once('value').then(snapshot => {\n            // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n            this.setState({\n                data: snapshot.val()\n            }, () => {\n\n                this.generateData();\n            })\n        });\n        // const rootRef = firebase.database().ref();\n        // const beaconRef = rootRef.child('deployment');\n        // const tableval = beaconRef.limitToLast(100).on('child_added',function(snapshot){\n        //     var data = snapshot.val();\n\n        //     console.log(data);\n        //     console.log(beaconlist[0]);\n        //     var beacon_1 = data[Object.keys(beaconlist)[0]];\n        //     var beacon_2 = data[Object.keys(beaconlist)[1]];\n        //     console.log(beacon_1);\n\n        //     self.setState({\n        //         beaconArray:[\n        //           { id: beacon_1.id,\n        //              lastSeen: beacon_1.lastSeen, \n        //              rssi_da1: beacon_1.rssi_da1, \n        //              lastSeen_da1: beacon_1.lastSeen_da1,\n        //              rssi_ma1: beacon_1.rssi_ma1,\n        //              last_seen_ma1: beacon_1.last_seen_ma1,\n        //              rssi_r1: beacon_1.rssi_r1,\n        //              last_seen_r1: beacon_1.last_seen_r1, \n        //              statusMsg: beacon_1.statusMsg },\n\n        //              { id: beacon_2.id,\n        //                 lastSeen: beacon_2.lastSeen, \n        //                 rssi_da1: beacon_2.rssi_da1, \n        //                 lastSeen_da1: beacon_2.lastSeen_da1,\n        //                 rssi_ma1: beacon_2.rssi_ma1,\n        //                 last_seen_ma1: beacon_2.last_seen_ma1,\n        //                 rssi_r1: beacon_2.rssi_r1,\n        //                 last_seen_r1: beacon_2.last_seen_r1, \n        //                 statusMsg: beacon_2.statusMsg }\n\n        //          ]\n\n        //     })\n\n        // }); \n\n\n    }\n\n    render() {\n\n        console.log(this.state)\n\n        return (\n\n            <div></div>\n\n        )\n\n    }\n    // renderTableHeader() {\n\n    //     let header = Object.keys(this.state.beaconArray)\n    //     return header.map((key, index) => {\n    //         return <th key={index}>{key.toUpperCase()}</th>\n    //     })\n    // }\n\n    // renderTableData() {\n\n    //     return this.state.beaconArray.map((beaconArray, index) => {\n    //         const { id, lastSeen, rssi_da1, lastSeen_da1, rssi_da2, lastSeen_da2, statusMsg } = beaconArray //destructuring\n    //         var d = JSON.parse(lastSeen)\n    //         var x = new Date(d);\n    //         console.log(x);\n\n    //         return (\n    //             <tr key={id}>\n    //                 <td>{beaconlist[id]}</td>\n    //                 <td>{id}</td>\n    //                 <td>{x.toString()}</td>\n    //                 <td>{statusMsg}</td>\n    //             </tr>\n    //         )\n    //     })\n    // }\n\n    // render() {\n    //     return (\n    //         <div>\n    //             <h1 id='title'>Client Monitoring Dashboard</h1>\n    //             <table id='beacon'>\n    //                 <tbody>\n    //                     {/* <tr>{this.renderTableHeader()}</tr> */}\n    //                     <tr>\n    //                         <th>Name</th>\n    //                         <th>ID</th>\n    //                         <th>Last Seen</th>\n    //                         <th>Status Message</th>\n    //                     </tr>\n    //                     {this.renderTableData()}\n    //                 </tbody>\n    //             </table>\n    //         </div>\n    //     )\n    // }\n\n    generateData() {\n        console.log(this.state.beaconlist);\n        var data = this.state.data;\n\n        var beaconlist = this.state.beaconlist;\n\n        var entries = Object.entries(data)\n\n\n\n\n        // console.log(entries)\n\n        for (let i = 0; i < entries.length; i++) {\n            // console.log(data[i]);\n\n            var data = entries[i][1] // to geth the object of beacons and its value\n            console.log(data);\n\n            // const { id, lastSeen, rssi_da1,lastSeen_da1, rssi_da2, lastSeen_da2, statusMsg} = beaconArray //destructuring\n\n            // var d = JSON.parse(lastSeen)\n            // var x = new Date(d);\n            var updateBeaconList = new Array();\n\n            for (let j = 0; j < beaconlist.length; j++) {\n                console.log(data)\n            \n                //value of current beaconin the beaconlist\n                var beacon = beaconlist[j];\n\n                var currObj = {\n                    id: beacon.id,\n                    name: beacon.name,\n                    timeLeftHistory: beacon.timeLeftHistory,\n                    numberOfLeft: beacon.numberOfLeft,\n                    category: beacon.category\n                }\n\n                var beaconid = beacon.id;\n                console.log(beaconid)\n                var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n                var noOfLeft = beacon.numberOfLeft;\n\n                // var t = \"e20200bc8540\";\n\n                //value of beacon from data in firebase\n                var beaconData = data[beaconid];\n                console.log(beaconData)\n                var lastSeenData = beaconData.lastSeen;\n                var statusMsgData = beaconData.statusMsg;\n\n                if (!(timeLeftHistory.includes(lastSeenData))) {\n                    if (statusMsgData == \"left\") {\n                        noOfLeft += 1;\n                        timeLeftHistory.push(lastSeenData);\n                    }\n                }\n\n                currObj.timeLeftHistory = timeLeftHistory;\n                currObj.numberOfLeft = noOfLeft;\n\n                updateBeaconList[j] = currObj\n\n\n            }\n\n            this.setState({\n                beaconlist: updateBeaconList,\n            })\n\n\n        }\n    }\n\n}\n\nexport default Analysis"]},"metadata":{},"sourceType":"module"}