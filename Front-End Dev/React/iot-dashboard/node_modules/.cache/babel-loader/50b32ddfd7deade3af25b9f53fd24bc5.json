{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js\";\nimport React, { Component } from 'react';\nimport 'firebase/database';\nimport * as firebase from 'firebase/app';\nimport { objectExpression } from '@babel/types';\nimport \"./analysis.css\";\nconst beaconlist = {\n  \"c2af522362be\": \"Client A\",\n  \"e20200bc8540\": \"Client B\"\n};\n\nclass Analysis extends React.Component {\n  constructor(props) {\n    super(props);\n    const beaconlist = {\n      \"c2af522362be\": \"Client A\",\n      \"e20200bc8540\": \"Client B\"\n    };\n    var self = this;\n    this.state = {\n      beaconlist: [{\n        id: \"c2af522362be\",\n        name: \"Client A\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\",\n        numberOfLeftDuringOperatingHours: 0\n      }, {\n        id: \"e20200bc8540\",\n        name: \"Client B\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\",\n        numberOfLeftDuringOperatingHours: 0\n      }],\n      data: '',\n      periodTracker: {\n        morning: 0,\n        noon: 0,\n        afternoon: 0,\n        nonOperatingHour: 0\n      }\n    }; // const rootRef = firebase.database().ref();\n    // const beaconRef = rootRef.child('deployment');\n    // const tableval = beaconRef.limitToLast(100).on('child_added',function(snapshot){\n    //     var data = snapshot.val();\n    //     console.log(data);\n    //     console.log(beaconlist[0]);\n    //     var beacon_1 = data[Object.keys(beaconlist)[0]];\n    //     var beacon_2 = data[Object.keys(beaconlist)[1]];\n    //     console.log(beacon_1);\n    //     self.setState({\n    //         beaconArray:[\n    //           { id: beacon_1.id,\n    //              lastSeen: beacon_1.lastSeen, \n    //              rssi_da1: beacon_1.rssi_da1, \n    //              lastSeen_da1: beacon_1.lastSeen_da1,\n    //              rssi_ma1: beacon_1.rssi_ma1,\n    //              last_seen_ma1: beacon_1.last_seen_ma1,\n    //              rssi_r1: beacon_1.rssi_r1,\n    //              last_seen_r1: beacon_1.last_seen_r1, \n    //              statusMsg: beacon_1.statusMsg },\n    //              { id: beacon_2.id,\n    //                 lastSeen: beacon_2.lastSeen, \n    //                 rssi_da1: beacon_2.rssi_da1, \n    //                 lastSeen_da1: beacon_2.lastSeen_da1,\n    //                 rssi_ma1: beacon_2.rssi_ma1,\n    //                 last_seen_ma1: beacon_2.last_seen_ma1,\n    //                 rssi_r1: beacon_2.rssi_r1,\n    //                 last_seen_r1: beacon_2.last_seen_r1, \n    //                 statusMsg: beacon_2.statusMsg }\n    //          ]\n    //     })\n    // }); \n  }\n\n  componentDidMount() {\n    var recentPostsRef = firebase.database().ref('/deployment');\n    recentPostsRef.once('value').then(snapshot => {\n      // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n      this.setState({\n        data: snapshot.val()\n      }, () => {\n        this.generateClientData();\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.data != '') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.renderTables());\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Fetching data.... Please wait.  \"), React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  } // renderTableHeader() {\n  //     let header = Object.keys(this.state.beaconArray)\n  //     return header.map((key, index) => {\n  //         return <th key={index}>{key.toUpperCase()}</th>\n  //     })\n  // }\n\n\n  renderTables() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Client List\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Number Of Left\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Category\")), this.renderTableData())), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Number of Times Left During:\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Morning (7.00 AM to 11.59 AM)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Noon (12.00 PM to 2.59 PM)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Afternoon (3.00 PM to 5.59 PM)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Non-Operating Hours (6.00 PM Onwards)\")), this.renderPeriodTableData(), this.renderTablePeriodData())));\n  }\n\n  renderTableData() {\n    return this.state.beaconlist.map((value, index) => {\n      const id = value.id,\n            category = value.category,\n            name = value.name,\n            numberOfLeft = value.numberOfLeft,\n            numberOfLeftDuringOperatingHours = value.numberOfLeftDuringOperatingHours,\n            timeLeftHistory = value.timeLeftHistory; //destructuring\n      // var d = JSON.parse(lastSeen)\n      // var x = new Date(d);\n      // console.log(x);\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, numberOfLeftDuringOperatingHours), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, category));\n    });\n  }\n\n  renderTablePeriodData() {\n    var periodTrackerObj = this.state.periodTracker;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, periodTrackerObj.morning), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, periodTrackerObj.noon), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, periodTrackerObj.afternoon), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, periodTrackerObj.nonOperatingHour));\n  } // render() {\n  //     return (\n  //         <div>\n  //             <h1 id='title'>Client Monitoring Dashboard</h1>\n  //             <table id='beacon'>\n  //                 <tbody>\n  //                     {/* <tr>{this.renderTableHeader()}</tr> */}\n  //                     <tr>\n  //                         <th>Name</th>\n  //                         <th>ID</th>\n  //                         <th>Last Seen</th>\n  //                         <th>Status Message</th>\n  //                     </tr>\n  //                     {this.renderTableData()}\n  //                 </tbody>\n  //             </table>\n  //         </div>\n  //     )\n  // }\n\n\n  generateClientData() {\n    console.log(this.state.beaconlist);\n    var data = this.state.data;\n    var beaconlist = this.state.beaconlist;\n    var entries = Object.entries(data); // console.log(entries)\n    // var updateBeaconList = new Array();\n\n    for (let i = 0; i < entries.length; i++) {\n      // console.log(data[i]);\n      var data = entries[i][1]; // to geth the object of beacons and its value\n\n      console.log(data);\n\n      for (let j = 0; j < beaconlist.length; j++) {\n        console.log(data); //value of current beaconin the beaconlist\n\n        var beacon = beaconlist[j];\n        var currObj = {\n          id: beacon.id,\n          name: beacon.name,\n          timeLeftHistory: beacon.timeLeftHistory,\n          numberOfLeft: beacon.numberOfLeft,\n          category: beacon.category,\n          numberOfLeftDuringOperatingHours: beacon.numberOfLeftDuringOperatingHours\n        };\n        var beaconid = beacon.id;\n        console.log(beaconid);\n        var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n        var noOfLeft = beacon.numberOfLeft; // var t = \"e20200bc8540\";\n        //value of beacon from data in firebase\n\n        var beaconData = data[beaconid];\n        console.log(beaconData);\n        var lastSeenData = beaconData.lastSeen;\n        var statusMsgData = beaconData.statusMsg;\n\n        if (!timeLeftHistory.includes(lastSeenData)) {\n          if (statusMsgData == \"left\") {\n            noOfLeft += 1;\n            timeLeftHistory.push(lastSeenData);\n            console.log(noOfLeft);\n            console.log(\"yes\");\n          }\n        }\n\n        currObj.timeLeftHistory = timeLeftHistory;\n        currObj.numberOfLeft = noOfLeft;\n        currObj.numberOfLeftDuringOperatingHours = noOfLeft;\n        console.log(currObj.numberOfLeft);\n        beaconlist[j] = currObj;\n      }\n    }\n\n    this.setState({\n      beaconlist: beaconlist\n    }, () => {\n      this.generatePeriodTrackerData();\n    });\n  }\n\n  generatePeriodTrackerData() {\n    var beaconlist = this.state.beaconlist;\n    var periodTracker = this.state.periodTracker;\n\n    for (let i = 0; i < beaconlist.length; i++) {\n      var beacon = beaconlist[i];\n      var timeLeftHistory = beacon.timeLeftHistory; // var numberOfLeftDuringOperatingHours = beacon.numberOfLeftDuringOperatingHours;\n\n      var numberOfLeftDuringNonOperatinghours = 0;\n\n      for (let j = 0; j < timeLeftHistory.length; j++) {\n        var datetimestr = JSON.parse(timeLeftHistory[j]);\n        var datetime = new Date(datetimestr);\n        var time = datetime.toLocaleTimeString();\n        console.log(time); //set opening and closing time\n\n        var closing = \"18:00:00\";\n        var closingDate = Date.parse(\"01/01/2011 \" + closing);\n        var opening = \"07:00:00\";\n        var openingDate = Date.parse(\"01/01/2011 \" + opening);\n        var noon = \"12:00:00\";\n        var noonDate = Date.parse('01/01/2011 ' + noon);\n        var afternoon = \"15:00:00\";\n        var afternoonDate = Date.parse(\"01/01/2011 \" + afternoon);\n        var timeDate = Date.parse(\"01/01/2011 \" + time);\n\n        if (timeDate >= openingDate && timeDate < closingDate) {\n          if (timeDate < noonDate) {\n            periodTracker.morning += 1;\n          } else if (timeDate < afternoonDate) {\n            periodTracker.noon += 1;\n          } else {\n            periodTracker.afternoon += 1;\n          }\n        } else {\n          periodTracker.nonOperatingHour += 1;\n          numberOfLeftDuringNonOperatinghours += 1;\n        }\n      }\n\n      beacon.numberOfLeftDuringOperatingHours -= numberOfLeftDuringNonOperatinghours; //update their cateogry\n\n      if (beacon.numberOfLeftDuringOperatingHours < 1) {\n        beacon.category = \"Low Risk\";\n      } else if (beacon.numberOfLeftDuringOperatingHours < 2) {\n        beacon.category = \"Medium Risk\";\n      } else {\n        beacon.category = \"High Risk\";\n      }\n\n      beaconlist[i] = beacon;\n    }\n\n    this.setState({\n      periodTracker: periodTracker,\n      beaconlist: beaconlist\n    });\n  }\n\n}\n\nexport default Analysis;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js"],"names":["React","Component","firebase","objectExpression","beaconlist","Analysis","constructor","props","self","state","id","name","timeLeftHistory","numberOfLeft","category","numberOfLeftDuringOperatingHours","data","periodTracker","morning","noon","afternoon","nonOperatingHour","componentDidMount","recentPostsRef","database","ref","once","then","snapshot","setState","val","generateClientData","render","console","log","renderTables","renderTableData","renderPeriodTableData","renderTablePeriodData","map","value","index","periodTrackerObj","entries","Object","i","length","j","beacon","currObj","beaconid","noOfLeft","beaconData","lastSeenData","lastSeen","statusMsgData","statusMsg","includes","push","generatePeriodTrackerData","numberOfLeftDuringNonOperatinghours","datetimestr","JSON","parse","datetime","Date","time","toLocaleTimeString","closing","closingDate","opening","openingDate","noonDate","afternoonDate","timeDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'firebase/database';\nimport * as firebase from 'firebase/app'\nimport { objectExpression } from '@babel/types';\nimport \"./analysis.css\"\n\nconst beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\nclass Analysis extends React.Component {\n    constructor(props) {\n        super(props)\n        const beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\n        var self = this;\n\n        this.state = {\n            beaconlist: [\n                {\n                    id: \"c2af522362be\",\n                    name: \"Client A\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\",\n                    numberOfLeftDuringOperatingHours: 0,\n                },\n                {\n                    id: \"e20200bc8540\",\n                    name: \"Client B\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\",\n                    numberOfLeftDuringOperatingHours: 0,\n                }\n            ],\n            data: '',\n            periodTracker: {\n                morning: 0,\n                noon: 0,\n                afternoon: 0,\n                nonOperatingHour: 0,\n\n            }\n        }\n\n\n\n\n        // const rootRef = firebase.database().ref();\n        // const beaconRef = rootRef.child('deployment');\n        // const tableval = beaconRef.limitToLast(100).on('child_added',function(snapshot){\n        //     var data = snapshot.val();\n\n        //     console.log(data);\n        //     console.log(beaconlist[0]);\n        //     var beacon_1 = data[Object.keys(beaconlist)[0]];\n        //     var beacon_2 = data[Object.keys(beaconlist)[1]];\n        //     console.log(beacon_1);\n\n        //     self.setState({\n        //         beaconArray:[\n        //           { id: beacon_1.id,\n        //              lastSeen: beacon_1.lastSeen, \n        //              rssi_da1: beacon_1.rssi_da1, \n        //              lastSeen_da1: beacon_1.lastSeen_da1,\n        //              rssi_ma1: beacon_1.rssi_ma1,\n        //              last_seen_ma1: beacon_1.last_seen_ma1,\n        //              rssi_r1: beacon_1.rssi_r1,\n        //              last_seen_r1: beacon_1.last_seen_r1, \n        //              statusMsg: beacon_1.statusMsg },\n\n        //              { id: beacon_2.id,\n        //                 lastSeen: beacon_2.lastSeen, \n        //                 rssi_da1: beacon_2.rssi_da1, \n        //                 lastSeen_da1: beacon_2.lastSeen_da1,\n        //                 rssi_ma1: beacon_2.rssi_ma1,\n        //                 last_seen_ma1: beacon_2.last_seen_ma1,\n        //                 rssi_r1: beacon_2.rssi_r1,\n        //                 last_seen_r1: beacon_2.last_seen_r1, \n        //                 statusMsg: beacon_2.statusMsg }\n\n        //          ]\n\n        //     })\n\n        // }); \n\n\n    }\n    componentDidMount() {\n        var recentPostsRef = firebase.database().ref('/deployment');\n        recentPostsRef.once('value').then(snapshot => {\n            // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n            this.setState({\n                data: snapshot.val()\n            }, () => {\n\n                this.generateClientData();\n            })\n        });\n\n    }\n\n    render() {\n\n        console.log(this.state)\n\n        if (this.state.data != '') {\n            return (\n                <div>\n                    {this.renderTables()}\n                </div>\n            )\n        }\n\n        return (\n\n            <div>\n                <h1>Fetching data.... Please wait.  </h1>\n                <div className=\"loader\"></div>\n            </div>\n\n        )\n\n    }\n    // renderTableHeader() {\n\n    //     let header = Object.keys(this.state.beaconArray)\n    //     return header.map((key, index) => {\n    //         return <th key={index}>{key.toUpperCase()}</th>\n    //     })\n    // }\n\n    renderTables() {\n\n        return (\n\n            <div>\n                <h1>Client List</h1>\n                <table>\n                    <tbody>\n                        {/* <tr>{this.renderTableHeader()}</tr> */}\n                        <tr>\n                            <th>Name</th>\n                            <th>ID</th>\n                            <th>Number Of Left</th>\n                            <th>Category</th>\n                        </tr>\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n\n\n                <h1>Number of Times Left During:</h1>\n                <table>\n                    <tbody>\n                        {/* <tr>{this.renderTableHeader()}</tr> */}\n                        <tr>\n                            <th>Morning (7.00 AM to 11.59 AM)</th>\n                            <th>Noon (12.00 PM to 2.59 PM)</th>\n                            <th>Afternoon (3.00 PM to 5.59 PM)</th>\n                            <th>Non-Operating Hours (6.00 PM Onwards)</th>\n                        </tr>\n                        {this.renderPeriodTableData()}\n                        {this.renderTablePeriodData()}\n                    </tbody>\n                </table>\n\n\n            </div>\n\n        )\n\n    }\n\n    renderTableData() {\n\n        return this.state.beaconlist.map((value, index) => {\n            const { id, category, name, numberOfLeft, numberOfLeftDuringOperatingHours, timeLeftHistory } = value //destructuring\n            // var d = JSON.parse(lastSeen)\n            // var x = new Date(d);\n            // console.log(x);\n\n            return (\n                <tr key={id}>\n                    <td>{name}</td>\n                    <td>{id}</td>\n                    <td>{numberOfLeftDuringOperatingHours}</td>\n                    <td>{category}</td>\n                </tr>\n            )\n        })\n    }\n\n\n    renderTablePeriodData() {\n\n        var periodTrackerObj = this.state.periodTracker;\n\n\n        return (\n            <tr>\n                <td>{periodTrackerObj.morning}</td>\n                <td>{periodTrackerObj.noon}</td>\n                <td>{periodTrackerObj.afternoon}</td>\n                <td>{periodTrackerObj.nonOperatingHour}</td>\n            </tr>\n        )\n\n    }\n\n    // render() {\n    //     return (\n    //         <div>\n    //             <h1 id='title'>Client Monitoring Dashboard</h1>\n    //             <table id='beacon'>\n    //                 <tbody>\n    //                     {/* <tr>{this.renderTableHeader()}</tr> */}\n    //                     <tr>\n    //                         <th>Name</th>\n    //                         <th>ID</th>\n    //                         <th>Last Seen</th>\n    //                         <th>Status Message</th>\n    //                     </tr>\n    //                     {this.renderTableData()}\n    //                 </tbody>\n    //             </table>\n    //         </div>\n    //     )\n    // }\n\n    generateClientData() {\n        console.log(this.state.beaconlist);\n        var data = this.state.data;\n\n        var beaconlist = this.state.beaconlist;\n\n        var entries = Object.entries(data)\n\n\n\n\n        // console.log(entries)\n\n        // var updateBeaconList = new Array();\n\n        for (let i = 0; i < entries.length; i++) {\n            // console.log(data[i]);\n\n            var data = entries[i][1] // to geth the object of beacons and its value\n            console.log(data);\n\n\n            for (let j = 0; j < beaconlist.length; j++) {\n                console.log(data)\n\n                //value of current beaconin the beaconlist\n                var beacon = beaconlist[j];\n\n                var currObj = {\n                    id: beacon.id,\n                    name: beacon.name,\n                    timeLeftHistory: beacon.timeLeftHistory,\n                    numberOfLeft: beacon.numberOfLeft,\n                    category: beacon.category,\n                    numberOfLeftDuringOperatingHours: beacon.numberOfLeftDuringOperatingHours,\n                }\n\n                var beaconid = beacon.id;\n                console.log(beaconid)\n                var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n                var noOfLeft = beacon.numberOfLeft;\n\n                // var t = \"e20200bc8540\";\n\n                //value of beacon from data in firebase\n                var beaconData = data[beaconid];\n                console.log(beaconData)\n                var lastSeenData = beaconData.lastSeen;\n                var statusMsgData = beaconData.statusMsg;\n\n                if (!(timeLeftHistory.includes(lastSeenData))) {\n                    if (statusMsgData == \"left\") {\n                        noOfLeft += 1;\n                        timeLeftHistory.push(lastSeenData);\n                        console.log(noOfLeft);\n                        console.log(\"yes\")\n                    }\n                }\n\n\n\n                currObj.timeLeftHistory = timeLeftHistory;\n                currObj.numberOfLeft = noOfLeft;\n                currObj.numberOfLeftDuringOperatingHours = noOfLeft;\n\n\n                console.log(currObj.numberOfLeft)\n\n                beaconlist[j] = currObj\n\n            }\n\n        }\n\n        this.setState({\n            beaconlist: beaconlist,\n        }, () => {\n            this.generatePeriodTrackerData();\n        })\n    }\n\n\n    generatePeriodTrackerData() {\n        var beaconlist = this.state.beaconlist;\n        var periodTracker = this.state.periodTracker;\n\n\n\n        for (let i = 0; i < beaconlist.length; i++) {\n            var beacon = beaconlist[i];\n            var timeLeftHistory = beacon.timeLeftHistory;\n            // var numberOfLeftDuringOperatingHours = beacon.numberOfLeftDuringOperatingHours;\n            var numberOfLeftDuringNonOperatinghours = 0;\n\n            for (let j = 0; j < timeLeftHistory.length; j++) {\n                var datetimestr = JSON.parse(timeLeftHistory[j]);\n                var datetime = new Date(datetimestr);\n                var time = datetime.toLocaleTimeString();\n                console.log(time)\n\n\n                //set opening and closing time\n                var closing = \"18:00:00\";\n                var closingDate = Date.parse(\"01/01/2011 \" + closing);\n                var opening = \"07:00:00\";\n                var openingDate = Date.parse(\"01/01/2011 \" + opening);\n\n                var noon = \"12:00:00\";\n                var noonDate = Date.parse('01/01/2011 ' + noon)\n                var afternoon = \"15:00:00\";\n                var afternoonDate = Date.parse(\"01/01/2011 \" + afternoon);\n\n                var timeDate = Date.parse(\"01/01/2011 \" + time);\n\n                if (timeDate >= openingDate && timeDate < closingDate) {\n                    if (timeDate < noonDate) {\n                        periodTracker.morning += 1;\n                    } else if (timeDate < afternoonDate) {\n                        periodTracker.noon += 1;\n                    } else {\n                        periodTracker.afternoon += 1;\n                    }\n\n                } else {\n                    periodTracker.nonOperatingHour += 1;\n                    numberOfLeftDuringNonOperatinghours += 1\n\n                }\n            }\n\n\n            beacon.numberOfLeftDuringOperatingHours -= numberOfLeftDuringNonOperatinghours;\n\n            //update their cateogry\n            if (beacon.numberOfLeftDuringOperatingHours < 1) {\n                beacon.category = \"Low Risk\"\n            } else if (beacon.numberOfLeftDuringOperatingHours < 2) {\n                beacon.category = \"Medium Risk\"\n            } else {\n                beacon.category = \"High Risk\"\n            }\n\n            beaconlist[i] = beacon;\n\n        }\n\n        this.setState({\n            periodTracker: periodTracker,\n            beaconlist: beaconlist,\n        })\n    }\n\n}\n\nexport default Analysis"]},"metadata":{},"sourceType":"module"}