{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/Tables/tablesSystem.js\";\nimport React, { Component } from 'react';\nimport 'firebase/database';\nimport * as firebase from 'firebase/app';\nimport { Table, Jumbotron, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\nconst beaconlist = {\n  \"c2af522362be\": \"Client A\",\n  \"e20200bc8540\": \"Client B\"\n};\nconst imagelist = {\n  \"c2af522362be\": require(\".././img/clienta.png\"),\n  \"e20200bc8540\": require(\".././img/clienta.png\")\n};\n\nclass TableDashboardSystem extends React.Component {\n  constructor(props) {\n    super(props);\n    const beaconlist = {\n      \"c2af522362be\": \"Client A\",\n      \"e20200bc8540\": \"Client B\"\n    };\n    var self = this;\n    const rootRef = firebase.database().ref();\n    const beaconRef = rootRef.child('deployment').orderByChild(\"dateAdded\"); //sort by timestamp\n\n    const tableval = beaconRef.limitToLast(1).on('child_added', function (snapshot) {\n      var data = snapshot.val();\n      console.log(data);\n      console.log(beaconlist[0]);\n      var beacon_1 = data[Object.keys(beaconlist)[0]];\n      var beacon_2 = data[Object.keys(beaconlist)[1]];\n      var dateAddedString = data.dateAdded;\n      console.log(beacon_1);\n      self.setState({\n        beaconArray: [{\n          id: beacon_1.id,\n          lastSeen: beacon_1.lastSeen,\n          rssi_da1: beacon_1.rssi_da1,\n          lastSeen_da1: beacon_1.lastSeen_da1,\n          rssi_ma1: beacon_1.rssi_ma1,\n          last_seen_ma1: beacon_1.last_seen_ma1,\n          rssi_r1: beacon_1.rssi_r1,\n          last_seen_r1: beacon_1.last_seen_r1,\n          statusMsg: beacon_1.statusMsg\n        }, {\n          id: beacon_2.id,\n          lastSeen: beacon_2.lastSeen,\n          rssi_da1: beacon_2.rssi_da1,\n          lastSeen_da1: beacon_2.lastSeen_da1,\n          rssi_ma1: beacon_2.rssi_ma1,\n          last_seen_ma1: beacon_2.last_seen_ma1,\n          rssi_r1: beacon_2.rssi_r1,\n          last_seen_r1: beacon_2.last_seen_r1,\n          statusMsg: beacon_2.statusMsg\n        }],\n        dateAddedString: dateAddedString\n      });\n    });\n    this.state = {\n      beaconArray: []\n    };\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.beaconArray);\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  renderTableData() {\n    var beaconArray = this.state.beaconArray;\n    console.log(beaconArray);\n    var latest_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n    var latest_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n    var latest_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n\n    for (let i = 1; i < beaconArray.length; i++) {\n      var current_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n      var current_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n      var current_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n\n      if (new Date(current_da1) > new Date(latest_da1)) {\n        latest_da1 = current_da1;\n      }\n\n      if (new Date(current_ma1) > new Date(latest_ma1)) {\n        latest_ma1 = current_ma1;\n      }\n\n      if (new Date(current_r1) > new Date(latest_r1)) {\n        latest_r1 = current_r1;\n      }\n    }\n\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, new Date(latest_da1).toString().substring(0, 25)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, new Date(latest_r1).toString().substring(0, 25)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, new Date(latest_ma1).toString().substring(0, 25)));\n  }\n\n  renderTableData2() {\n    var beaconArray = this.state.beaconArray;\n    console.log(beaconArray);\n    var latest_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n    var latest_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n    var latest_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n    var dateAddedString = JSON.parse(this.state.dateAddedString);\n\n    for (let i = 1; i < beaconArray.length; i++) {\n      var current_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n      var current_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n      var current_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n\n      if (new Date(current_da1) > new Date(latest_da1)) {\n        latest_da1 = current_da1;\n      }\n\n      if (new Date(current_ma1) > new Date(latest_ma1)) {\n        latest_ma1 = current_ma1;\n      }\n\n      if (new Date(current_r1) > new Date(latest_r1)) {\n        latest_r1 = current_r1;\n      }\n    }\n\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.diff_hours(new Date(latest_da1)) + \" hr(s)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.diff_hours(new Date(latest_r1)) + \" hr(s)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.diff_hours(new Date(latest_ma1)) + \" hr(s)\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.diff_hours(new Date(dateAddedString)) + \" hr(s)\"));\n  }\n\n  diff_hours(date) {\n    var current = new Date();\n    var diff = (date.getTime() - current.getTime()) / 1000;\n    diff /= 60 * 60;\n    return Math.abs(Math.round(diff));\n  }\n\n  render() {\n    if (this.state.beaconArray.length > 0) {\n      return (\n        /* font-size: calc(10px + 2vmin); */\n        React.createElement(\"div\", {\n          style: {\n            marginTop: \"10px\",\n            paddingBottom: \"20px\",\n            fontSize: \"calc(10px + 2vmin)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          id: \"title\",\n          style: {\n            color: \"white\",\n            marginBottom: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"System Monitoring Dashboard\"), React.createElement(\"img\", {\n          style: {\n            width: \"700px\",\n            height: \"400px\",\n            marginLeft: \"10px\",\n            backgroundColor: \"White\"\n          },\n          src: require(\".././img/layout.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Latest Data Retrieved from Gateway: \", React.createElement(\"b\", {\n          style: {\n            color: \"FireBrick\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, new Date(JSON.parse(this.state.dateAddedString)).toString().substring(0, 25))), React.createElement(\"hr\", {\n          style: {\n            color: \"white\",\n            backgroundColor: \"white\",\n            height: 1\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \"Latest Data Retrieved from:\"), React.createElement(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          id: \"beacon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, \"Receiver 1\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"Receiver 2\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"Receiver 3\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, this.renderTableData()))), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Amount of time each device has stopped sending data:\"), React.createElement(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"Receiver 1\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"Receiver 2\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Receiver 3\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, \"Gateway\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, this.renderTableData2())))\n      );\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default TableDashboardSystem;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/Tables/tablesSystem.js"],"names":["React","Component","firebase","Table","Jumbotron","Container","Row","Col","Button","Pagination","beaconlist","imagelist","require","TableDashboardSystem","constructor","props","self","rootRef","database","ref","beaconRef","child","orderByChild","tableval","limitToLast","on","snapshot","data","val","console","log","beacon_1","Object","keys","beacon_2","dateAddedString","dateAdded","setState","beaconArray","id","lastSeen","rssi_da1","lastSeen_da1","rssi_ma1","last_seen_ma1","rssi_r1","last_seen_r1","statusMsg","state","renderTableHeader","header","map","key","index","toUpperCase","renderTableData","latest_da1","JSON","parse","latest_ma1","latest_r1","i","length","current_da1","current_ma1","current_r1","Date","toString","substring","renderTableData2","diff_hours","date","current","diff","getTime","Math","abs","round","render","marginTop","paddingBottom","fontSize","color","marginBottom","width","height","marginLeft","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'firebase/database';\nimport * as firebase from 'firebase/app'\nimport { Table, Jumbotron, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\n\nconst beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\nconst imagelist = { \"c2af522362be\": require(\".././img/clienta.png\"), \"e20200bc8540\": require(\".././img/clienta.png\") }\nclass TableDashboardSystem extends React.Component {\n   constructor(props) {\n      super(props)\n      const beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\n      var self = this;\n      const rootRef = firebase.database().ref();\n      const beaconRef = rootRef.child('deployment').orderByChild(\"dateAdded\");\n      //sort by timestamp\n      const tableval = beaconRef.limitToLast(1).on('child_added', function (snapshot) {\n         var data = snapshot.val();\n\n         console.log(data);\n         console.log(beaconlist[0]);\n         var beacon_1 = data[Object.keys(beaconlist)[0]];\n         var beacon_2 = data[Object.keys(beaconlist)[1]];\n         var dateAddedString = data.dateAdded;\n         console.log(beacon_1);\n\n\n         self.setState({\n            beaconArray: [\n               {\n                  id: beacon_1.id,\n                  lastSeen: beacon_1.lastSeen,\n                  rssi_da1: beacon_1.rssi_da1,\n                  lastSeen_da1: beacon_1.lastSeen_da1,\n                  rssi_ma1: beacon_1.rssi_ma1,\n                  last_seen_ma1: beacon_1.last_seen_ma1,\n                  rssi_r1: beacon_1.rssi_r1,\n                  last_seen_r1: beacon_1.last_seen_r1,\n                  statusMsg: beacon_1.statusMsg,\n               },\n\n               {\n                  id: beacon_2.id,\n                  lastSeen: beacon_2.lastSeen,\n                  rssi_da1: beacon_2.rssi_da1,\n                  lastSeen_da1: beacon_2.lastSeen_da1,\n                  rssi_ma1: beacon_2.rssi_ma1,\n                  last_seen_ma1: beacon_2.last_seen_ma1,\n                  rssi_r1: beacon_2.rssi_r1,\n                  last_seen_r1: beacon_2.last_seen_r1,\n                  statusMsg: beacon_2.statusMsg\n               }\n\n            ],\n            dateAddedString: dateAddedString,\n\n         })\n\n      });\n\n      this.state = {\n         beaconArray: []\n      }\n   }\n\n\n   renderTableHeader() {\n\n      let header = Object.keys(this.state.beaconArray)\n      return header.map((key, index) => {\n         return <th key={index}>{key.toUpperCase()}</th>\n      })\n   }\n\n   renderTableData() {\n      var beaconArray = this.state.beaconArray;\n      console.log(beaconArray)\n\n      var latest_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n      var latest_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n      var latest_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n\n      for (let i = 1; i < beaconArray.length; i++) {\n\n         var current_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n         var current_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n         var current_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n\n\n         if (new Date(current_da1) > new Date(latest_da1)) {\n            latest_da1 = current_da1\n         }\n\n         if (new Date(current_ma1) > new Date(latest_ma1)) {\n            latest_ma1 = current_ma1\n         }\n\n         if (new Date(current_r1) > new Date(latest_r1)) {\n            latest_r1 = current_r1\n         }\n\n      }\n\n      return (\n         <tr>\n            <td>{new Date(latest_da1).toString().substring(0, 25)}</td>\n            <td>{new Date(latest_r1).toString().substring(0, 25)}</td>\n            <td>{new Date(latest_ma1).toString().substring(0, 25)}</td>\n         </tr>\n      )\n\n\n   }\n\n\n   renderTableData2() {\n      var beaconArray = this.state.beaconArray;\n      console.log(beaconArray)\n\n      var latest_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n      var latest_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n      var latest_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n      var dateAddedString = JSON.parse(this.state.dateAddedString);\n\n      for (let i = 1; i < beaconArray.length; i++) {\n\n         var current_da1 = JSON.parse(beaconArray[0].lastSeen_da1);\n         var current_ma1 = JSON.parse(beaconArray[0].last_seen_ma1);\n         var current_r1 = JSON.parse(beaconArray[0].last_seen_r1);\n\n\n         if (new Date(current_da1) > new Date(latest_da1)) {\n            latest_da1 = current_da1\n         }\n\n         if (new Date(current_ma1) > new Date(latest_ma1)) {\n            latest_ma1 = current_ma1\n         }\n\n         if (new Date(current_r1) > new Date(latest_r1)) {\n            latest_r1 = current_r1\n         }\n\n      }\n\n      return (\n         <tr>\n            <td>{this.diff_hours(new Date(latest_da1)) + \" hr(s)\"}</td>\n            <td>{this.diff_hours(new Date(latest_r1))+ \" hr(s)\"}</td>\n            <td>{this.diff_hours(new Date(latest_ma1)) + \" hr(s)\"}</td>\n            <td>{this.diff_hours(new Date(dateAddedString))+ \" hr(s)\"}</td>\n         </tr>\n      )\n\n\n   }\n\n   diff_hours(date) {\n\n      var current = new Date()\n\n      var diff = (date.getTime() - current.getTime()) / 1000;\n      diff /= (60 * 60);\n      return Math.abs(Math.round(diff));\n\n   }\n\n   render() {\n      if (this.state.beaconArray.length > 0) {\n\n\n         return (\n\n\n            /* font-size: calc(10px + 2vmin); */\n            <div style={{ marginTop: \"10px\", paddingBottom: \"20px\", fontSize: \"calc(10px + 2vmin)\" }}>\n               {/* <Container>\n                  <Row>\n                     <Col>\n                        <img style={{ width: \"190px\", height: \"190px\", marginRight: \"30px\", marginLeft: \"30px\" }} src={require(\".././img/BEARCONS.png\")} />\n   \n                     </Col>\n                  </Row>\n               </Container> */}\n\n               <h1 id='title' style={{ color: \"white\", marginBottom: \"15px\" }}>System Monitoring Dashboard</h1>\n               <img style={{ width: \"700px\", height: \"400px\", marginLeft: \"10px\", backgroundColor: \"White\" }} src={require(\".././img/layout.jpg\")} />\n               <br></br>\n               <p>Latest Data Retrieved from Gateway: <b style={{color:\"FireBrick\"}}>{new Date(JSON.parse(this.state.dateAddedString)).toString().substring(0, 25)}</b></p>\n               <hr\n                    style={{\n                        color: \"white\",\n                        backgroundColor: \"white\",\n                        height: 1\n                    }}\n                />\n              \n\n\n               <h3>Latest Data Retrieved from:</h3>\n               <Table striped bordered hover variant=\"dark\"  >\n                  <table id='beacon'>\n                     <thead>\n                        {/* <tr>{this.renderTableHeader()}</tr> */}\n                        <tr>\n                           <th>Receiver 1</th>\n                           <th>Receiver 2</th>\n                           <th>Receiver 3</th>\n\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {this.renderTableData()}\n                     </tbody>\n                  </table>\n               </Table>\n\n               <h3>Amount of time each device has stopped sending data:</h3>\n               <Table striped bordered hover variant=\"dark\"  >\n             \n                     <thead>\n                        {/* <tr>{this.renderTableHeader()}</tr> */}\n                        <tr>\n                           <th>Receiver 1</th>\n                           <th>Receiver 2</th>\n                           <th>Receiver 3</th>\n                           <th>Gateway</th>\n\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {this.renderTableData2()}\n                     </tbody>\n               \n               </Table>\n\n\n\n            </div>\n         )\n      }\n\n      return (\n         <div></div>\n      )\n   }\n\n}\n\nexport default TableDashboardSystem"]},"metadata":{},"sourceType":"module"}