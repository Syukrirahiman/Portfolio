{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js\";\nimport React, { Component } from 'react';\nimport 'firebase/database';\nimport * as firebase from 'firebase/app';\nimport { objectExpression } from '@babel/types';\nimport \"./analysis.css\";\nimport CanvasJSReact from '../assets/canvasjs.react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Table, Jumbotron, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst beaconlist = {\n  \"c2af522362be\": \"Client A\",\n  \"e20200bc8540\": \"Client B\"\n};\n\nclass Analysis extends React.Component {\n  constructor(props) {\n    super(props);\n    const beaconlist = {\n      \"c2af522362be\": \"Client A\",\n      \"e20200bc8540\": \"Client B\"\n    };\n    var self = this;\n    this.onClick = this.onClick.bind(this);\n    this.state = {\n      beaconlist: [{\n        id: \"c2af522362be\",\n        name: \"Client A\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\",\n        numberOfLeftDuringOperatingHours: 0\n      }, {\n        id: \"e20200bc8540\",\n        name: \"Client B\",\n        timeLeftHistory: [],\n        numberOfLeft: 0,\n        category: \"good\",\n        numberOfLeftDuringOperatingHours: 0\n      }],\n      data: '',\n      periodTracker: {\n        morning: 0,\n        noon: 0,\n        afternoon: 0,\n        nonOperatingHour: 0\n      },\n      selectedBeacon: {},\n      redirectToClient: false\n    };\n  }\n\n  componentDidMount() {\n    var recentPostsRef = firebase.database().ref('/deployment');\n    recentPostsRef.once('value').then(snapshot => {\n      // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n      this.setState({\n        data: snapshot.val()\n      }, () => {\n        this.generateClientData();\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.redirectToClient) {\n      return React.createElement(Redirect, {\n        push: true,\n        from: \"/\",\n        to: {\n          pathname: '/client',\n          state: {\n            beacon: this.state.selectedBeacon\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.data != '') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.renderTables());\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Fetching data.... Please wait.  \"), React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n  generateClientDataPoints(dataList) {\n    var result = new Array();\n\n    for (let i = 0; i < dataList.length; i++) {\n      var client = dataList[i];\n      var clientObj = {\n        label: '',\n        y: ''\n      };\n      clientObj.label = client.name;\n      clientObj.y = client.numberOfLeftDuringOperatingHours;\n      result.push(clientObj);\n    }\n\n    return result;\n  }\n\n  onClick(e) {\n    // alert(  e.dataSeries.type + \", dataPoint { x:\" + e.dataPoint.x + \", y: \"+ e.dataPoint.y + \" }\" );\n    var name = e.dataPoint.label;\n    var beaconlist = this.state.beaconlist;\n    var selectedClient = '';\n\n    for (let i = 0; i < beaconlist.length; i++) {\n      var beacon = beaconlist[i];\n      var beaconName = beacon.name;\n\n      if (name == beaconName) {\n        console.log(\"YAAS\");\n        this.setState({\n          redirectToClient: true,\n          selectedBeacon: beacon\n        });\n      }\n    }\n  }\n\n  renderClientTableChart() {\n    var dataList = this.state.beaconlist;\n    var dataPoints = this.generateClientDataPoints(dataList);\n    const options = {\n      // title: { text: \"Period Tracker\" },\n      animationEnabled: true,\n      data: [{\n        click: this.onClick,\n        type: \"column\",\n        dataPoints: dataPoints\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n  renderPeriodTableChart() {\n    var data = this.state.periodTracker;\n    const options = {\n      // title: { text: \"Period Tracker\" },\n      animationEnabled: true,\n      data: [{\n        type: \"column\",\n        dataPoints: [{\n          label: \"Morning (7.00 AM to 11.59 AM) \",\n          y: data.morning\n        }, {\n          label: \"Noon (12.00 PM to 2.59 PM)\",\n          y: data.noon\n        }, {\n          label: \"Afternoon (3.00 PM to 5.59 PM)\",\n          y: data.afternoon\n        }]\n      }]\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }));\n  }\n\n  renderTables() {\n    return React.createElement(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Total number of times each client left\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Client List\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"No. of Times Left\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Category\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.renderTableData())))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.renderClientTableChart()))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Number of Times Clients Left During:\"), React.createElement(\"table\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Morning\"), \" (7.00 AM to 11.59 AM) \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Noon\"), \" (12.00 PM to 2.59 PM)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Afternoon\"), \" (3.00 PM to 5.59 PM)\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Non-Operating Hours\"), \" (6.00 PM Onwards)\")), this.renderTablePeriodData())), this.renderPeriodTableChart()));\n  }\n\n  renderTableData() {\n    return this.state.beaconlist.map((value, index) => {\n      const id = value.id,\n            category = value.category,\n            name = value.name,\n            numberOfLeft = value.numberOfLeft,\n            numberOfLeftDuringOperatingHours = value.numberOfLeftDuringOperatingHours,\n            timeLeftHistory = value.timeLeftHistory; //destructuring\n      // var d = JSON.parse(lastSeen)\n      // var x = new Date(d);\n      // console.log(x);\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, numberOfLeftDuringOperatingHours), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, category));\n    });\n  }\n\n  renderTablePeriodData() {\n    var periodTrackerObj = this.state.periodTracker;\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, periodTrackerObj.morning), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, periodTrackerObj.noon), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, periodTrackerObj.afternoon), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, periodTrackerObj.nonOperatingHour));\n  }\n\n  generateClientData() {\n    console.log(this.state.beaconlist);\n    var data = this.state.data;\n    var beaconlist = this.state.beaconlist;\n    var entries = Object.entries(data); // console.log(entries)\n    // var updateBeaconList = new Array();\n\n    for (let i = 0; i < entries.length; i++) {\n      // console.log(data[i]);\n      var data = entries[i][1]; // to geth the object of beacons and its value\n\n      console.log(data);\n\n      for (let j = 0; j < beaconlist.length; j++) {\n        console.log(data); //value of current beaconin the beaconlist\n\n        var beacon = beaconlist[j];\n        var currObj = {\n          id: beacon.id,\n          name: beacon.name,\n          timeLeftHistory: beacon.timeLeftHistory,\n          numberOfLeft: beacon.numberOfLeft,\n          category: beacon.category,\n          numberOfLeftDuringOperatingHours: beacon.numberOfLeftDuringOperatingHours\n        };\n        var beaconid = beacon.id;\n        console.log(beaconid);\n        var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n        var noOfLeft = beacon.numberOfLeft; // var t = \"e20200bc8540\";\n        //value of beacon from data in firebase\n\n        var beaconData = data[beaconid];\n        console.log(beaconData);\n        var lastSeenData = beaconData.lastSeen;\n        var statusMsgData = beaconData.statusMsg;\n\n        if (!timeLeftHistory.includes(lastSeenData)) {\n          if (statusMsgData == \"left\") {\n            noOfLeft += 1;\n            timeLeftHistory.push(lastSeenData);\n            console.log(noOfLeft);\n            console.log(\"yes\");\n          }\n        }\n\n        currObj.timeLeftHistory = timeLeftHistory;\n        currObj.numberOfLeft = noOfLeft;\n        currObj.numberOfLeftDuringOperatingHours = noOfLeft;\n        console.log(currObj.numberOfLeft);\n        beaconlist[j] = currObj;\n      }\n    }\n\n    this.setState({\n      beaconlist: beaconlist\n    }, () => {\n      this.generatePeriodTrackerData();\n    });\n  }\n\n  generatePeriodTrackerData() {\n    var beaconlist = this.state.beaconlist;\n    var periodTracker = this.state.periodTracker;\n\n    for (let i = 0; i < beaconlist.length; i++) {\n      var beacon = beaconlist[i];\n      var timeLeftHistory = beacon.timeLeftHistory; // var numberOfLeftDuringOperatingHours = beacon.numberOfLeftDuringOperatingHours;\n\n      var numberOfLeftDuringNonOperatinghours = 0;\n\n      for (let j = 0; j < timeLeftHistory.length; j++) {\n        var datetimestr = JSON.parse(timeLeftHistory[j]);\n        var datetime = new Date(datetimestr);\n        var time = datetime.toLocaleTimeString();\n        console.log(time); //set opening and closing time\n\n        var closing = \"18:00:00\";\n        var closingDate = Date.parse(\"01/01/2011 \" + closing);\n        var opening = \"07:00:00\";\n        var openingDate = Date.parse(\"01/01/2011 \" + opening);\n        var noon = \"12:00:00\";\n        var noonDate = Date.parse('01/01/2011 ' + noon);\n        var afternoon = \"15:00:00\";\n        var afternoonDate = Date.parse(\"01/01/2011 \" + afternoon);\n        var timeDate = Date.parse(\"01/01/2011 \" + time);\n\n        if (timeDate >= openingDate && timeDate < closingDate) {\n          if (timeDate < noonDate) {\n            periodTracker.morning += 1;\n          } else if (timeDate < afternoonDate) {\n            periodTracker.noon += 1;\n          } else {\n            periodTracker.afternoon += 1;\n          }\n        } else {\n          periodTracker.nonOperatingHour += 1;\n          numberOfLeftDuringNonOperatinghours += 1;\n        }\n      }\n\n      beacon.numberOfLeftDuringOperatingHours -= numberOfLeftDuringNonOperatinghours; //update their cateogry\n\n      if (beacon.numberOfLeftDuringOperatingHours < 1) {\n        beacon.category = \"Low Risk\";\n      } else if (beacon.numberOfLeftDuringOperatingHours < 2) {\n        beacon.category = \"Medium Risk\";\n      } else {\n        beacon.category = \"High Risk\";\n      }\n\n      beaconlist[i] = beacon;\n    }\n\n    this.setState({\n      periodTracker: periodTracker,\n      beaconlist: beaconlist\n    });\n  }\n\n}\n\nexport default Analysis;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/iot-test/src/components/analysis.js"],"names":["React","Component","firebase","objectExpression","CanvasJSReact","Link","Redirect","Table","Jumbotron","Container","Row","Col","Button","Pagination","CanvasJSChart","beaconlist","Analysis","constructor","props","self","onClick","bind","state","id","name","timeLeftHistory","numberOfLeft","category","numberOfLeftDuringOperatingHours","data","periodTracker","morning","noon","afternoon","nonOperatingHour","selectedBeacon","redirectToClient","componentDidMount","recentPostsRef","database","ref","once","then","snapshot","setState","val","generateClientData","render","console","log","pathname","beacon","renderTables","color","generateClientDataPoints","dataList","result","Array","i","length","client","clientObj","label","y","push","e","dataPoint","selectedClient","beaconName","renderClientTableChart","dataPoints","options","animationEnabled","click","type","renderPeriodTableChart","width","marginLeft","marginRight","renderTableData","renderTablePeriodData","map","value","index","periodTrackerObj","entries","Object","j","currObj","beaconid","noOfLeft","beaconData","lastSeenData","lastSeen","statusMsgData","statusMsg","includes","generatePeriodTrackerData","numberOfLeftDuringNonOperatinghours","datetimestr","JSON","parse","datetime","Date","time","toLocaleTimeString","closing","closingDate","opening","openingDate","noonDate","afternoonDate","timeDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport 'firebase/database';\nimport * as firebase from 'firebase/app'\nimport { objectExpression } from '@babel/types';\nimport \"./analysis.css\"\nimport CanvasJSReact from '../assets/canvasjs.react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Table, Jumbotron, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart\n\nconst beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\nclass Analysis extends React.Component {\n    constructor(props) {\n        super(props)\n        const beaconlist = { \"c2af522362be\": \"Client A\", \"e20200bc8540\": \"Client B\" }\n        var self = this;\n        this.onClick = this.onClick.bind(this);\n\n        this.state = {\n            beaconlist: [\n                {\n                    id: \"c2af522362be\",\n                    name: \"Client A\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\",\n                    numberOfLeftDuringOperatingHours: 0,\n                },\n                {\n                    id: \"e20200bc8540\",\n                    name: \"Client B\",\n                    timeLeftHistory: [],\n                    numberOfLeft: 0,\n                    category: \"good\",\n                    numberOfLeftDuringOperatingHours: 0,\n                }\n            ],\n            data: '',\n            periodTracker: {\n                morning: 0,\n                noon: 0,\n                afternoon: 0,\n                nonOperatingHour: 0,\n\n            },\n            selectedBeacon: {},\n            redirectToClient: false,\n        }\n\n\n\n    }\n    componentDidMount() {\n        var recentPostsRef = firebase.database().ref('/deployment');\n        recentPostsRef.once('value').then(snapshot => {\n            // snapshot.val() is the dictionary with all your keys/values from the '/store' path\n            this.setState({\n                data: snapshot.val()\n            }, () => {\n\n                this.generateClientData();\n            })\n        });\n\n    }\n\n    render() {\n\n        console.log(this.state)\n\n        if (this.state.redirectToClient) {\n            return (\n                <Redirect push from='/' to={{\n                    pathname: '/client',\n                    state: {\n                        beacon: this.state.selectedBeacon,\n                    }\n                }} />\n            )\n        }\n\n        if (this.state.data != '') {\n            return (\n                <div>\n                    {this.renderTables()}\n                </div>\n            )\n        }\n\n        return (\n\n            <div style={{color:\"white\"}}>\n                <h1>Fetching data.... Please wait.  </h1>\n                <div className=\"loader\"></div>\n            </div>\n\n        )\n\n    }\n\n\n\n    generateClientDataPoints(dataList) {\n        var result = new Array();\n        for (let i = 0; i < dataList.length; i++) {\n            var client = dataList[i];\n            var clientObj = { label: '', y: '' };\n            clientObj.label = client.name;\n            clientObj.y = client.numberOfLeftDuringOperatingHours;\n            result.push(clientObj);\n        }\n\n        return result;\n\n    }\n\n    onClick(e) {\n        // alert(  e.dataSeries.type + \", dataPoint { x:\" + e.dataPoint.x + \", y: \"+ e.dataPoint.y + \" }\" );\n        var name = e.dataPoint.label;\n        var beaconlist = this.state.beaconlist;\n        var selectedClient = '';\n        for (let i = 0; i < beaconlist.length; i++) {\n            var beacon = beaconlist[i];\n            var beaconName = beacon.name;\n            if (name == beaconName) {\n                console.log(\"YAAS\")\n                this.setState({\n                    redirectToClient: true,\n                    selectedBeacon: beacon,\n                })\n\n\n            }\n        }\n\n    }\n    renderClientTableChart() {\n        var dataList = this.state.beaconlist\n        var dataPoints = this.generateClientDataPoints(dataList);\n        const options = {\n            // title: { text: \"Period Tracker\" },\n            animationEnabled: true,\n            data: [\n                {\n                    click: this.onClick,\n                    type: \"column\",\n                    dataPoints: dataPoints,\n                }\n            ]\n        }\n\n        return (\n            <div>\n                {/* <h1>React Column Chart</h1> */}\n                <CanvasJSChart options={options}\n                /* onRef={ref => this.chart = ref} */\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div>\n\n        )\n    }\n\n    renderPeriodTableChart() {\n        var data = this.state.periodTracker\n        const options = {\n            // title: { text: \"Period Tracker\" },\n            animationEnabled: true,\n            data: [\n                {\n                    type: \"column\",\n                    dataPoints: [\n                        { label: \"Morning (7.00 AM to 11.59 AM) \", y: data.morning },\n                        { label: \"Noon (12.00 PM to 2.59 PM)\", y: data.noon },\n                        { label: \"Afternoon (3.00 PM to 5.59 PM)\", y: data.afternoon },\n                    ]\n                }\n            ]\n        }\n\n        return (\n            <div>\n                {/* <h1>React Column Chart</h1> */}\n                <CanvasJSChart options={options}\n                /* onRef={ref => this.chart = ref} */\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div>\n\n        )\n    }\n\n    renderTables() {\n\n        return (\n\n            <div style={{color:\"white\"}}>\n                <Container style ={{width:\"100%\"}}>\n                <h1>Total number of times each client left</h1>\n                    <Row>\n                    <Col>\n                    <h2>Client List</h2>\n                        <Table striped bordered hover variant=\"dark\"  >\n                    <table style={{ marginLeft: \"auto\", marginRight: \"auto\", width: \"100%\" }}>\n                        <thead>  \n                            <tr>\n                                <th>Name</th>\n                                <th>ID</th>\n                                <th>No. of Times Left</th>\n                                <th>Category</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {/* <tr>{this.renderTableHeader()}</tr> */}\n                          \n                            {this.renderTableData()}\n                        </tbody>\n                    </table>\n\n                    </Table>\n                        </Col>\n                        <Col>\n                        {this.renderClientTableChart()}\n                        </Col>\n                     \n                    </Row>\n                </Container>\n\n\n                \n                <br></br>\n                <div style={{ marginLeft: \"auto\", marginRight: \"auto\", }}>\n                    <h1>Number of Times Clients Left During:</h1>\n                    <table style={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n                        <tbody>\n                            {/* <tr>{this.renderTableHeader()}</tr> */}\n                            <tr>\n                                <th><div>Morning</div> (7.00 AM to 11.59 AM) </th>\n                                <th><div>Noon</div> (12.00 PM to 2.59 PM)</th>\n                                <th><div>Afternoon</div> (3.00 PM to 5.59 PM)</th>\n                                <th><div>Non-Operating Hours</div> (6.00 PM Onwards)</th>\n                            </tr>\n                            {this.renderTablePeriodData()}\n                        </tbody>\n                    </table>\n                    {this.renderPeriodTableChart()}\n                </div>\n\n\n            </div>\n\n        )\n\n    }\n\n    renderTableData() {\n\n        return this.state.beaconlist.map((value, index) => {\n            const { id, category, name, numberOfLeft, numberOfLeftDuringOperatingHours, timeLeftHistory } = value //destructuring\n            // var d = JSON.parse(lastSeen)\n            // var x = new Date(d);\n            // console.log(x);\n\n            return (\n                <tr key={id}>\n                    <td>{name}</td>\n                    <td>{id}</td>\n                    <td>{numberOfLeftDuringOperatingHours}</td>\n                    <td>{category}</td>\n                </tr>\n            )\n        })\n    }\n\n\n    renderTablePeriodData() {\n\n        var periodTrackerObj = this.state.periodTracker;\n\n\n        return (\n            <tr>\n                <td>{periodTrackerObj.morning}</td>\n                <td>{periodTrackerObj.noon}</td>\n                <td>{periodTrackerObj.afternoon}</td>\n                <td>{periodTrackerObj.nonOperatingHour}</td>\n            </tr>\n        )\n\n    }\n\n\n    generateClientData() {\n        console.log(this.state.beaconlist);\n        var data = this.state.data;\n\n        var beaconlist = this.state.beaconlist;\n\n        var entries = Object.entries(data)\n\n\n\n\n        // console.log(entries)\n\n        // var updateBeaconList = new Array();\n\n        for (let i = 0; i < entries.length; i++) {\n            // console.log(data[i]);\n\n            var data = entries[i][1] // to geth the object of beacons and its value\n            console.log(data);\n\n\n            for (let j = 0; j < beaconlist.length; j++) {\n                console.log(data)\n\n                //value of current beaconin the beaconlist\n                var beacon = beaconlist[j];\n\n                var currObj = {\n                    id: beacon.id,\n                    name: beacon.name,\n                    timeLeftHistory: beacon.timeLeftHistory,\n                    numberOfLeft: beacon.numberOfLeft,\n                    category: beacon.category,\n                    numberOfLeftDuringOperatingHours: beacon.numberOfLeftDuringOperatingHours,\n                }\n\n                var beaconid = beacon.id;\n                console.log(beaconid)\n                var timeLeftHistory = beacon.timeLeftHistory; // array of timeLeftHistory\n\n                var noOfLeft = beacon.numberOfLeft;\n\n                // var t = \"e20200bc8540\";\n\n                //value of beacon from data in firebase\n                var beaconData = data[beaconid];\n                console.log(beaconData)\n                var lastSeenData = beaconData.lastSeen;\n                var statusMsgData = beaconData.statusMsg;\n\n                if (!(timeLeftHistory.includes(lastSeenData))) {\n                    if (statusMsgData == \"left\") {\n                        noOfLeft += 1;\n                        timeLeftHistory.push(lastSeenData);\n                        console.log(noOfLeft);\n                        console.log(\"yes\")\n                    }\n                }\n\n\n\n                currObj.timeLeftHistory = timeLeftHistory;\n                currObj.numberOfLeft = noOfLeft;\n                currObj.numberOfLeftDuringOperatingHours = noOfLeft;\n\n\n                console.log(currObj.numberOfLeft)\n\n                beaconlist[j] = currObj\n\n            }\n\n        }\n\n        this.setState({\n            beaconlist: beaconlist,\n        }, () => {\n            this.generatePeriodTrackerData();\n        })\n    }\n\n\n    generatePeriodTrackerData() {\n        var beaconlist = this.state.beaconlist;\n        var periodTracker = this.state.periodTracker;\n\n\n\n        for (let i = 0; i < beaconlist.length; i++) {\n            var beacon = beaconlist[i];\n            var timeLeftHistory = beacon.timeLeftHistory;\n            // var numberOfLeftDuringOperatingHours = beacon.numberOfLeftDuringOperatingHours;\n            var numberOfLeftDuringNonOperatinghours = 0;\n\n            for (let j = 0; j < timeLeftHistory.length; j++) {\n                var datetimestr = JSON.parse(timeLeftHistory[j]);\n                var datetime = new Date(datetimestr);\n                var time = datetime.toLocaleTimeString();\n                console.log(time)\n\n\n                //set opening and closing time\n                var closing = \"18:00:00\";\n                var closingDate = Date.parse(\"01/01/2011 \" + closing);\n                var opening = \"07:00:00\";\n                var openingDate = Date.parse(\"01/01/2011 \" + opening);\n\n                var noon = \"12:00:00\";\n                var noonDate = Date.parse('01/01/2011 ' + noon)\n                var afternoon = \"15:00:00\";\n                var afternoonDate = Date.parse(\"01/01/2011 \" + afternoon);\n\n                var timeDate = Date.parse(\"01/01/2011 \" + time);\n\n                if (timeDate >= openingDate && timeDate < closingDate) {\n                    if (timeDate < noonDate) {\n                        periodTracker.morning += 1;\n                    } else if (timeDate < afternoonDate) {\n                        periodTracker.noon += 1;\n                    } else {\n                        periodTracker.afternoon += 1;\n                    }\n\n                } else {\n                    periodTracker.nonOperatingHour += 1;\n                    numberOfLeftDuringNonOperatinghours += 1\n\n                }\n            }\n\n\n            beacon.numberOfLeftDuringOperatingHours -= numberOfLeftDuringNonOperatinghours;\n\n            //update their cateogry\n            if (beacon.numberOfLeftDuringOperatingHours < 1) {\n                beacon.category = \"Low Risk\"\n            } else if (beacon.numberOfLeftDuringOperatingHours < 2) {\n                beacon.category = \"Medium Risk\"\n            } else {\n                beacon.category = \"High Risk\"\n            }\n\n            beaconlist[i] = beacon;\n\n        }\n\n        this.setState({\n            periodTracker: periodTracker,\n            beaconlist: beaconlist,\n        })\n    }\n\n}\n\nexport default Analysis"]},"metadata":{},"sourceType":"module"}