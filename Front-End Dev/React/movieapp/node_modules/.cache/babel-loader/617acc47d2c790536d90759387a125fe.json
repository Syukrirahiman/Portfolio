{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/PlanToMeet.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\nclass PlanToMeet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planid: 222222,\n      result_arr: [],\n      email: '',\n      participant: '',\n      showForm: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    var planid = this.state.planid;\n    var email = this.state.email;\n    var params = \"planid=\" + planid + \"&email=\" + email;\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var participantObj = JSON.parse(this.responseText);\n        console.log(participantObj);\n        that.setState({\n          participant: participantObj,\n          showForm: true\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/addplanentry.php?\" + params, true);\n    request.send();\n  }\n\n  displayForm() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    }; // if(this.state.result_arr.length()>0){\n    //     return(\n    //         //\n    //     )\n    // }\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.showForm) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.displayForm());\n    }\n\n    return React.createElement(Jumbotron, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Enter Email to vote\"), React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n  getData() {\n    const queryString = require('query-string');\n\n    const parsed = queryString.parse(this.props.location.search);\n    console.log(parsed.id);\n    this.setState({\n      planid: parsed.id\n    }, () => {\n      this.getDataFromPhp();\n    });\n  }\n\n  getDataFromPhp() {\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var result = JSON.parse(this.responseText);\n        console.log(result);\n        that.setState({\n          result_arr: result\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/retrievebyid.php?id=\" + that.state.planid, true);\n    request.send();\n  }\n\n}\n\nexport default PlanToMeet;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/PlanToMeet.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Form","MDBCardImage","Redirect","PlanToMeet","Component","constructor","props","state","planid","result_arr","email","participant","showForm","handleChange","bind","handleSubmit","componentDidMount","getData","event","target","name","value","setState","params","that","request","XMLHttpRequest","onreadystatechange","readyState","status","participantObj","JSON","parse","responseText","console","log","open","send","displayForm","bold","fontWeight","center","textAlign","render","queryString","require","parsed","location","search","id","getDataFromPhp","result"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\n\nclass PlanToMeet extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            planid: 222222,\n            result_arr: [],\n            email: '',\n            participant:'',\n            showForm: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n\n\n        this.setState({\n            [name]: value,\n        });\n\n    }\n\n    handleSubmit(event){\n        var planid = this.state.planid;\n        var email = this.state.email;\n        var params = \"planid=\"+planid+\"&email=\"+email;\n        \n\n        var that = this;\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var participantObj = JSON.parse(this.responseText);\n                console.log(participantObj);\n                that.setState({\n                    participant: participantObj,\n                    showForm: true,\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/addplanentry.php?\"+params, true);\n        request.send();\n        \n    }\n\n\n    displayForm() {\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n\n        // if(this.state.result_arr.length()>0){\n        //     return(\n        //         //\n        //     )\n        // }\n\n    }\n\n\n    render() {\n    \n        console.log(this.state);\n\n        if(this.state.showForm){\n            return(\n                <div>\n                    {this.displayForm()}\n                </div>\n            )\n        }\n\n        return (\n            <Jumbotron fluid>\n                <Container>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>Enter Email to vote</Form.Label>\n                                <Form.Control name=\"email\" type=\"email\" onChange={this.handleChange}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                          \n                        </Form.Group>\n                     \n                        </Form.Row>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n                                Submit\n                        </Button>\n\n                    </Form>\n                </Container>\n            </Jumbotron>\n\n        )\n\n    }\n\n\n\n    getData() {\n         \n        const queryString = require('query-string');\n        const parsed = queryString.parse(this.props.location.search);\n        console.log(parsed.id);\n\n        this.setState({\n            planid: parsed.id\n        }, () =>{\n            this.getDataFromPhp();\n        });\n\n   \n\n\n    }\n\n    getDataFromPhp(){\n        var that = this;\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var result = JSON.parse(this.responseText);\n                console.log(result);\n                that.setState({\n                    result_arr: result,\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/retrievebyid.php?id=\"+that.state.planid, true);\n        request.send();\n    }\n\n}\n\nexport default PlanToMeet;"]},"metadata":{},"sourceType":"module"}