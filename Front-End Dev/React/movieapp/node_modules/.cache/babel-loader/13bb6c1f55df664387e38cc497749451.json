{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Maps.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\n\nclass Maps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikey: 'AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM',\n      loc_lat: 1.352219,\n      loc_lng: 103.944741\n    };\n  }\n\n  componentDidMount() {\n    this.initMap();\n  }\n\n  render() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"floating-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Start:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"start\",\n      id: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Mode of Travel: \"), React.createElement(\"select\", {\n      id: \"mode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"DRIVING\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Driving\"), React.createElement(\"option\", {\n      value: \"WALKING\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Walking\"), React.createElement(\"option\", {\n      value: \"BICYCLING\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Bicycling\"), React.createElement(\"option\", {\n      value: \"TRANSIT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Transit\")), React.createElement(\"button\", {\n      type: \"button\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"GO\")), React.createElement(\"div\", {\n      id: \"right-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"availability\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n  initMap() {\n    // GET LAT LNG OF CINEMA LOCATION AND INPUT HERE\n    var location = {\n      lat: this.state.loc_lat,\n      lng: t\n    }; // \n\n    var directionsRenderer = new google.maps.DirectionsRenderer({\n      draggable: true\n    });\n    var directionsService = new google.maps.DirectionsService();\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 15,\n      center: location\n    });\n    directionsRenderer.setMap(map);\n    directionsRenderer.setPanel(document.getElementById('right-panel'));\n    var control = document.getElementById('floating-panel');\n    control.style.display = 'block';\n    map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);\n    var marker = new google.maps.Marker({\n      position: location,\n      map: map,\n      title: 'Cinema Here!'\n    }); // GET CARPARKS NEARBY (PLACES API)\n\n    var loc_lat = location.lat;\n    var loc_lng = location.lng;\n    var places_loc = loc_lat + \" \" + loc_lng;\n    var baseurl = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\".concat(places_loc, \"&radius=1000&type=parking&key=AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM\");\n    var request = new XMLHttpRequest();\n    request.open('GET', baseurl, true);\n\n    request.onload = function () {\n      var data = JSON.parse(this.response);\n      var cp_array = data.results;\n\n      for (var cp of cp_array) {\n        var lat = cp.geometry.location.lat;\n        var lng = cp.geometry.location.lng;\n        marker = new google.maps.Marker({\n          position: {\n            lat: lat,\n            lng: lng\n          },\n          map: map,\n          icon: {\n            url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"\n          },\n          title: \"\".concat(cp.name)\n        }); // PARTS BELOW WERE PREVIOUSLY USED TO ATTEMPT TO GET A MATCH FROM DIFFERENT APIS\n        // lat = lat + \" \";\n        // lng = lng + \" \";\n        // lat = lat.slice(0,4);\n        // lng = lng.slice(0,6);\n        // var latlng = lat + \" \" + lng;\n        // var address = cp.name;\n        // var cp_position = lat + \" \" + lng;\n        // DISPLAY CARPARKS IN DROPDOWN LIST\n        // document.getElementById(\"cp_choices\").innerHTML += `<option value=\"${latlng}\">${address}</option>`\n      }\n    };\n\n    request.send();\n\n    var onChangeHandler = function () {\n      calculateAndDisplayRoute(directionsService, directionsRenderer);\n    }; // WHEN SUBMIT BUTTON IS CLICK, RENDERS DIRECTION SERVICE\n\n\n    document.getElementById('submit').addEventListener('click', onChangeHandler);\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Maps.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","MDBCardImage","Maps","Component","constructor","props","state","apikey","loc_lat","loc_lng","componentDidMount","initMap","render","bold","fontWeight","center","textAlign","location","lat","lng","t","directionsRenderer","google","maps","DirectionsRenderer","draggable","directionsService","DirectionsService","map","Map","document","getElementById","zoom","setMap","setPanel","control","style","display","controls","ControlPosition","TOP_CENTER","push","marker","Marker","position","title","places_loc","baseurl","request","XMLHttpRequest","open","onload","data","JSON","parse","response","cp_array","results","cp","geometry","icon","url","name","send","onChangeHandler","calculateAndDisplayRoute","addEventListener"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { MDBCardImage } from \"mdbreact\";\n\n\nclass Maps extends React.Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      apikey: 'AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM',\n      loc_lat: 1.352219,\n      loc_lng: 103.944741,\n    }\n  }\n\n  componentDidMount() {\n    this.initMap();\n\n  }\n\n  render() {\n\n\n\n    const bold = {\n      fontWeight: 'bold',\n    };\n\n    const center = {\n      textAlign: 'center',\n    };\n\n    return (\n      <div>\n        <div id=\"floating-panel\">\n          <strong>Start:</strong>\n          <input type=\"text\" name=\"start\" id=\"start\" />\n          <br />\n          <strong>Mode of Travel: </strong>\n          <select id=\"mode\">\n            <option value=\"DRIVING\">Driving</option>\n            <option value=\"WALKING\">Walking</option>\n            <option value=\"BICYCLING\">Bicycling</option>\n            <option value=\"TRANSIT\">Transit</option>\n          </select>\n          <button type=\"button\" id=\"submit\">GO</button>\n          {/* <button type=\"submit\" name=\"submit\" id=\"submit\">GO</button>  */}\n        </div>\n        <div id=\"right-panel\"></div>\n        <div id=\"map\"></div>\n        {/* <div id=\"carpark\">\n          <select name=\"cp_choices\" id=\"cp_choices\" onchange=\"getAvailability(this.value)\">\n          </select>\n        </div> */}\n        <div id=\"availability\"></div>\n\n      </div>\n\n    )\n\n\n\n  }\n\n\n\n  initMap() {\n\n    // GET LAT LNG OF CINEMA LOCATION AND INPUT HERE\n    var location = { lat: this.state.loc_lat, lng: t};\n\n\n\n    // \n    var directionsRenderer = new google.maps.DirectionsRenderer({ draggable: true });\n    var directionsService = new google.maps.DirectionsService;\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 15,\n      center: location\n    });\n    directionsRenderer.setMap(map);\n    directionsRenderer.setPanel(document.getElementById('right-panel'));\n\n    var control = document.getElementById('floating-panel');\n    control.style.display = 'block';\n    map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);\n\n    var marker = new google.maps.Marker({\n      position: location,\n      map: map,\n      title: 'Cinema Here!'\n    });\n\n    // GET CARPARKS NEARBY (PLACES API)\n    var loc_lat = location.lat;\n    var loc_lng = location.lng;\n    var places_loc = loc_lat + \" \" + loc_lng;\n    var baseurl = `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${places_loc}&radius=1000&type=parking&key=AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM`;\n    var request = new XMLHttpRequest();\n    request.open('GET', baseurl, true)\n    request.onload = function () {\n      var data = JSON.parse(this.response)\n      var cp_array = data.results;\n      for (var cp of cp_array) {\n        var lat = cp.geometry.location.lat;\n        var lng = cp.geometry.location.lng;\n        marker = new google.maps.Marker({\n          position: { lat: lat, lng: lng },\n          map: map,\n          icon: {\n            url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"\n          },\n          title: `${cp.name}`\n        });\n\n        // PARTS BELOW WERE PREVIOUSLY USED TO ATTEMPT TO GET A MATCH FROM DIFFERENT APIS\n        // lat = lat + \" \";\n        // lng = lng + \" \";\n        // lat = lat.slice(0,4);\n        // lng = lng.slice(0,6);\n        // var latlng = lat + \" \" + lng;\n        // var address = cp.name;\n        // var cp_position = lat + \" \" + lng;\n\n        // DISPLAY CARPARKS IN DROPDOWN LIST\n        // document.getElementById(\"cp_choices\").innerHTML += `<option value=\"${latlng}\">${address}</option>`\n\n      }\n    }\n\n    request.send()\n\n    var onChangeHandler = function () {\n      calculateAndDisplayRoute(directionsService, directionsRenderer);\n    };\n\n    // WHEN SUBMIT BUTTON IS CLICK, RENDERS DIRECTION SERVICE\n    document.getElementById('submit').addEventListener('click', onChangeHandler);\n\n\n\n\n  }\n\n\n}\n\nexport default Maps;\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}