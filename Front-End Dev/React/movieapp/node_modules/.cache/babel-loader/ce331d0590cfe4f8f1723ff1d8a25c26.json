{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Slider.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Carousel, Button, Jumbotron, Col, Row, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass RecommendMovies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n      apikeyOMDB: '9e790f8b',\n      movie_arr: [],\n      redirect: false,\n      selected_movie: '',\n      top_rated_movies: [],\n      current_omdb_details: '',\n      toptreshhold: 6,\n      clickMovie: '',\n      redirectReview: false\n    }; // this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleClick(movie) {\n    console.log(movie); // var movieIS = this.getISDetails(movie.Title);\n    // if (movieIS != null) {\n    //     this.sestState({\n    //         clickMovie: movieIS,\n    //         redirectReview: true,\n    //     })\n    // }\n  }\n\n  getISDetails(movie) {\n    var movie_arr = this.state.movie_arr;\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movieIS = movie_arr[i];\n      console.log(movieIS);\n\n      if (movieIS.title != null) {\n        if (movieIS.title.toLowerCase() == movie.Title.toLowerCase()) {\n          return movieIS;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  render() {\n    const carouselitem = {\n      width: \"100%\",\n      height: 600,\n      backgroundColor: \"rgb(249, 249, 249)\"\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"100%\",\n      textAlign: 'center' // paddingTop: \"20px\"\n\n    };\n    const font = {\n      color: \"black\",\n      paddingTop: \"20px\"\n    };\n    const image = {\n      // width: 50,\n      height: 350\n    };\n    console.log(this.state); // if (this.state.redirectReview) {\n    //     return (\n    //         <Redirect push from='/' to={{\n    //             pathname: '/reviews',\n    //             state: {\n    //                 selected_movie: this.state.clickMovie,\n    //             }\n    //         }} />\n    //     )\n    // }\n\n    if (this.state.top_rated_movies.length > 5) {\n      console.log(this.state.top_rated_movies.length);\n      var topRatedArr = this.state.top_rated_movies;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: centralize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Top Rated Movies\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[0].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Link, {\n        value: topRatedArr[0],\n        onClick: () => this.handleClick(topRatedArr[0]),\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, topRatedArr[0].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[1].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/reviews\",\n          state: {\n            selected_movie: this.getISDetails(topRatedArr[1])\n          }\n        },\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, topRatedArr[1].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[2].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/reviews\",\n          state: {\n            selected_movie: this.getISDetails(topRatedArr[2])\n          }\n        },\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, topRatedArr[2].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[3].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/reviews\",\n          state: {\n            selected_movie: this.getISDetails(topRatedArr[3])\n          }\n        },\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, topRatedArr[3].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[4].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/reviews\",\n          state: {\n            selected_movie: this.getISDetails(topRatedArr[4])\n          }\n        },\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, topRatedArr[4].Title)))))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    });\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        movie_arr: resp.movies\n      }, () => {\n        this.getTopRatedMovies();\n      });\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  getTopRatedMovies() {\n    var movie_arr = this.state.movie_arr;\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movie = movie_arr[i];\n      console.log(this.state.top_rated_movies.length);\n      this.getIMDBIDetails(movie);\n    } // this.setState({\n    //     top_rated_movies: result,\n    // })\n    // console.log(result)\n\n  }\n\n  getIMDBIDetails(movie) {\n    var movie_omdb_details = 'hey';\n    var movie_id = movie.id;\n    var xhr = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    var that = this;\n    var top_rated_movies = this.state.top_rated_movies;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      var imdb_id = resp.movie.imdb_id; // console.log(imdb_id)\n\n      var xhr2 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n      xhr2.addEventListener('load', () => {\n        var resp = JSON.parse(xhr2.responseText);\n        movie_omdb_details = resp; // console.log(movie_omdb_details)\n        // return movie_omdb_details;\n\n        if (movie_omdb_details.imdbRating) {\n          if (movie_omdb_details.imdbRating >= this.state.toptreshhold) {\n            top_rated_movies.push(movie_omdb_details);\n          }\n        }\n\n        this.setState({\n          top_rated_movies: top_rated_movies\n        });\n      });\n      xhr2.open('GET', urlMovieDetails);\n      xhr2.send();\n    });\n    xhr.open('GET', urlmoviedetails);\n    xhr.send(); // return movie_omdb_details;\n  }\n\n}\n\nexport default RecommendMovies;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js"],"names":["React","ReactDOM","Navbar","Carousel","Button","Jumbotron","Col","Row","Container","Redirect","Link","MDBCardImage","RecommendMovies","Component","constructor","props","state","apikeyIS","apikeyOMDB","movie_arr","redirect","selected_movie","top_rated_movies","current_omdb_details","toptreshhold","clickMovie","redirectReview","componentDidMount","getData","handleClick","movie","console","log","getISDetails","i","length","movieIS","title","toLowerCase","Title","render","carouselitem","width","height","backgroundColor","centralize","margin","textAlign","font","color","paddingTop","image","topRatedArr","Poster","pathname","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","setState","movies","getTopRatedMovies","open","send","getIMDBIDetails","movie_omdb_details","movie_id","id","urlmoviedetails","that","imdb_id","xhr2","urlMovieDetails","imdbRating","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Slider.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Carousel, Button, Jumbotron, Col, Row, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass RecommendMovies extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n            apikeyOMDB: '9e790f8b',\n            movie_arr: [],\n            redirect: false,\n            selected_movie: '',\n            top_rated_movies: [],\n            current_omdb_details: '',\n            toptreshhold: 6,\n            clickMovie: '',\n            redirectReview: false,\n        };\n        // this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    handleClick(movie) {\n\n        console.log(movie);\n\n        // var movieIS = this.getISDetails(movie.Title);\n\n        // if (movieIS != null) {\n        //     this.sestState({\n        //         clickMovie: movieIS,\n        //         redirectReview: true,\n        //     })\n        // }\n\n    }\n\n    getISDetails(movie) {\n        var movie_arr = this.state.movie_arr;\n\n        for (let i = 0; i < movie_arr.length; i++) {\n            var movieIS = movie_arr[i];\n            console.log(movieIS);\n            if(movieIS.title != null){\n                if (movieIS.title.toLowerCase() == movie.Title.toLowerCase()) {\n                    return movieIS;\n                }\n            }\n           \n        }\n\n        return null;\n    }\n\n    render() {\n\n        const carouselitem = {\n            width: \"100%\",\n            height: 600,\n            backgroundColor: \"rgb(249, 249, 249)\",\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"100%\",\n            textAlign: 'center',\n            // paddingTop: \"20px\"\n        };\n\n        const font = {\n            color: \"black\",\n            paddingTop: \"20px\",\n        }\n\n        const image = {\n            // width: 50,\n            height: 350\n        };\n\n        console.log(this.state);\n        // if (this.state.redirectReview) {\n        //     return (\n        //         <Redirect push from='/' to={{\n        //             pathname: '/reviews',\n        //             state: {\n        //                 selected_movie: this.state.clickMovie,\n        //             }\n        //         }} />\n        //     )\n\n        // }\n\n        if (this.state.top_rated_movies.length > 5) {\n            console.log (this.state.top_rated_movies.length)\n            var topRatedArr = this.state.top_rated_movies;\n            return (\n                <div>\n                    <Jumbotron fluid>\n                        <Container style={centralize}>\n                            <h2 >Top Rated Movies</h2>\n                            <br></br>\n                            <Row>\n                                <Col>\n\n                                    <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[0].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>\n                                        <Link \n                                            value = {topRatedArr[0]}\n                                            onClick={() => this.handleClick(topRatedArr[0])}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[0].Title}\n                                        </Link>\n                                    </figcaption>\n\n                                </Col>\n\n                                <Col>\n\n                                <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[1].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>\n                                        <Link to={{\n                                            pathname: \"/reviews\",\n                                            state: {\n                                                selected_movie: this.getISDetails(topRatedArr[1]),\n                                            }\n                                        }}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[1].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n                                <Col>\n\n                                <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[2].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>\n                                        <Link to={{\n                                            pathname: \"/reviews\",\n                                            state: {\n                                                selected_movie: this.getISDetails(topRatedArr[2]),\n                                            }\n                                        }}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[2].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n                                <Col>\n\n                                <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[3].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>\n                                        <Link to={{\n                                            pathname: \"/reviews\",\n                                            state: {\n                                                selected_movie: this.getISDetails(topRatedArr[3]),\n                                            }\n                                        }}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[3].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n                                <Col>\n\n                                <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[4].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>\n                                        <Link to={{\n                                            pathname: \"/reviews\",\n                                            state: {\n                                                selected_movie: this.getISDetails(topRatedArr[4]),\n                                            }\n                                        }}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[4].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n\n                            </Row>\n                        </Container>\n                    </Jumbotron>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n\n        )\n\n    }\n\n    getData() {\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                movie_arr: resp.movies,\n            }, () => {\n                this.getTopRatedMovies();\n            });\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n    }\n\n    getTopRatedMovies() {\n        var movie_arr = this.state.movie_arr;\n\n        for (let i = 0; i < movie_arr.length; i++) {\n            var movie = movie_arr[i];\n            console.log(this.state.top_rated_movies.length)\n            this.getIMDBIDetails(movie);\n        }\n\n        // this.setState({\n        //     top_rated_movies: result,\n        // })\n\n        // console.log(result)\n\n    }\n\n\n    getIMDBIDetails(movie) {\n        var movie_omdb_details = 'hey';\n        var movie_id = movie.id;\n        var xhr = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n        var that = this;\n        var top_rated_movies = this.state.top_rated_movies;\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            var imdb_id = resp.movie.imdb_id\n            // console.log(imdb_id)\n\n            var xhr2 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n            xhr2.addEventListener('load', () => {\n                var resp = JSON.parse(xhr2.responseText);\n                movie_omdb_details = resp;\n                // console.log(movie_omdb_details)\n                // return movie_omdb_details;\n                if (movie_omdb_details.imdbRating) {\n                    if (movie_omdb_details.imdbRating >= this.state.toptreshhold) {\n                        top_rated_movies.push(movie_omdb_details);\n                    }\n                }\n\n                this.setState({\n                    top_rated_movies: top_rated_movies,\n                })\n\n            })\n            xhr2.open('GET', urlMovieDetails)\n            xhr2.send()\n\n        })\n        xhr.open('GET', urlmoviedetails)\n        xhr.send()\n\n        // return movie_omdb_details;\n    }\n\n}\n\nexport default RecommendMovies;"]},"metadata":{},"sourceType":"module"}