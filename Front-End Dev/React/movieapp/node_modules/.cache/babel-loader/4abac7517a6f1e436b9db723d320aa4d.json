{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Review.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Review extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"ok\",\n      movie: this.props.location.state.selected_movie,\n      imdb_id: '',\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK' //api key of international showtimes\n\n    }; // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.movie);\n    this.getIMDBId();\n    this.getData();\n  }\n\n  displayResult() {\n    if (this.state.result.rawReviews) {\n      return this.state.result.rawReviews[0].author;\n    }\n  }\n\n  render() {\n    // const test = this.getData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.displayResult(), console.log(this.state.result));\n  }\n\n  getIMDBId() {\n    var xhr3 = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    xhr3.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr3.responseText);\n      this.setState({\n        imdbid: resp.movie.imdb_id\n      });\n      console.log(this.state.imdbid);\n      var xhr4 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdbid + \"&apikey=\" + this.state.apikeyOMDB;\n      xhr4.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var resp = JSON.parse(xhr4.responseText);\n        this.setState({\n          movie_details: resp\n        });\n        console.log(this.state);\n      });\n      xhr4.open('GET', urlMovieDetails);\n      xhr4.send();\n    });\n    xhr3.open('GET', urlmoviedetails);\n    xhr3.send();\n  }\n\n  getData() {\n    var results = \"nil\";\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        console.log(\"yo\");\n        var dataObj = JSON.parse(this.responseText);\n        console.log(dataObj);\n        results = dataObj;\n        that.setState({\n          result: results\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/review.php?imdb_id=tt4154796\", true);\n    request.send();\n  }\n\n}\n\nexport default Review;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Review.js"],"names":["React","axios","Review","Component","constructor","props","state","result","movie","location","selected_movie","imdb_id","apikeyIS","componentDidMount","console","log","getIMDBId","getData","displayResult","rawReviews","author","render","xhr3","XMLHttpRequest","urlmoviedetails","movie_id","addEventListener","resp","JSON","parse","responseText","setState","imdbid","xhr4","urlMovieDetails","apikeyOMDB","movie_details","open","send","results","that","request","onreadystatechange","readyState","status","dataObj"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Review extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            result: \"ok\",\n            movie: this.props.location.state.selected_movie,\n            imdb_id: '',\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK', //api key of international showtimes\n        };\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(this.state.movie)\n        this.getIMDBId();\n        this.getData();\n\n    }\n\n    displayResult() {\n        if (this.state.result.rawReviews) {\n            return this.state.result.rawReviews[0].author;\n        }\n    }\n    render() {\n\n        // const test = this.getData;\n        return (\n\n            <div>\n                {this.displayResult()}\n                {console.log(this.state.result)}\n                {/* <h1>{this.state.name}</h1> */}\n            </div>\n\n        )\n\n    }\n\n    getIMDBId(){\n        var xhr3 = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n\n        xhr3.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr3.responseText);\n            this.setState({\n                imdbid: resp.movie.imdb_id,\n            });\n\n            console.log(this.state.imdbid);\n\n            var xhr4 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdbid + \"&apikey=\" + this.state.apikeyOMDB;\n            xhr4.addEventListener('load', () => {\n                // update the state of the component with the result here\n\n\n                var resp = JSON.parse(xhr4.responseText);\n                this.setState({\n                    movie_details: resp,\n                });\n\n                console.log(this.state);\n            })\n            xhr4.open('GET', urlMovieDetails)\n            xhr4.send()\n\n        })\n        xhr3.open('GET', urlmoviedetails)\n        xhr3.send()\n    }\n\n    getData() {\n\n        var results = \"nil\";\n        var that = this;\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                console.log(\"yo\")\n                var dataObj = JSON.parse(this.responseText);\n                console.log(dataObj);\n                results = dataObj;\n                that.setState({\n                    result: results\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/review.php?imdb_id=tt4154796\", true);\n        request.send();\n\n\n\n    }\n\n}\n\nexport default Review;"]},"metadata":{},"sourceType":"module"}