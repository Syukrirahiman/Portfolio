{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/NowShowing.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n// import { MDBCardImage} from \"mdbreact\";\n\nimport { Redirect } from 'react-router';\n\nclass NowShowing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n      movie_arr: [],\n      selected_movie: '',\n      redirect: false,\n      counter: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const movie = this.state.movie_arr[value];\n    this.setState({\n      selected_movie: movie,\n      redirect: true\n    });\n  }\n\n  displayMovie() {}\n\n  render() {\n    if (this.state.redirect) {\n      console.log(this.state);\n      console.log(this.state.selected_movie);\n      return React.createElement(Redirect, {\n        push: true,\n        from: \"/\",\n        to: {\n          pathname: '/reviews',\n          state: {\n            selected_movie: this.state.selected_movie\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n\n    if (this.state.movie_arr.length > 0) {\n      const rows = array_chunk(this.props.movie_arr, 4);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, rows.map(row => React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, row.map(col => React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, col)))));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Movie\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.movie_arr.map((value, index) => React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))) // <tr>\n    //     <td>\n    //         {index + 1}\n    //     </td>\n    //     <td colSpan=\"2\">\n    //         <img  style ={{width:\"154px\", height:\"231px\"}}src= {value.poster_image_thumbnail}/>\n    //         {value.title}</td>\n    //     <td style={center}><Button variant=\"outline-light\" value={index} onClick={this.handleChange}>View Review</Button></td>\n    // </tr>\n    ))));\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        movie_arr: resp.movies\n      }, () => {\n        this.checkTitleNull();\n      });\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  checkTitleNull() {\n    var movie_arr = this.state.movie_arr;\n    var result = new Array();\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movie = movie_arr[i];\n\n      if (movie.title != null) {\n        if (movie.poster_image_thumbnail == null) {\n          movie.poster_image_thumbnail = require(\"./img/noposter.jpg\");\n        }\n\n        result.push(movie);\n      }\n    }\n\n    this.setState({\n      movie_arr: result\n    });\n  }\n\n}\n\nexport default NowShowing;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/NowShowing.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Redirect","NowShowing","Component","constructor","props","state","apikeyIS","movie_arr","selected_movie","redirect","counter","handleChange","bind","componentDidMount","getData","event","target","value","movie","setState","displayMovie","render","console","log","pathname","bold","fontWeight","center","textAlign","length","rows","array_chunk","map","row","col","index","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","movies","checkTitleNull","open","send","result","Array","i","title","poster_image_thumbnail","require","push"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\n// import { MDBCardImage} from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\n\nclass NowShowing extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n            movie_arr: [],\n            selected_movie: '',\n            redirect: false,\n            counter: 0,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n\n    }\n\n    handleChange(event) {\n\n        const target = event.target;\n        const value = target.value;\n        const movie = this.state.movie_arr[value]\n\n        this.setState({\n            selected_movie: movie,\n            redirect: true,\n        });\n\n    }\n\n    displayMovie() {\n\n\n    }\n\n\n    render() {\n\n        if (this.state.redirect) {\n            console.log(this.state);\n            console.log(this.state.selected_movie);\n            return (\n                <Redirect push from='/' to={{\n                    pathname: '/reviews',\n                    state: {\n                        selected_movie: this.state.selected_movie,\n                    }\n                }} />\n            )\n\n        }\n\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n        if (this.state.movie_arr.length > 0) {\n            const rows = array_chunk(this.props.movie_arr, 4)\n            return (\n                <div>\n                {\n                    rows.map((row) => (\n                        <div className=\"row\">\n                            {\n                                row.map((col) => (\n                                    <div className=\"col\">{col}</div>\n                                ))\n                            }\n                        </div>\n                    ))\n                }\n                </div>\n            )\n        }\n        return (\n\n            <div className=\"table1\">\n                <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Movie</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <Container>\n\n                        </Container>\n                        {this.state.movie_arr.map((value, index) => (\n\n                            <Container>\n                                <Row>\n                                    <Col>\n\n                                    </Col>\n                                </Row>\n                            </Container>\n\n                            // <tr>\n                            //     <td>\n                            //         {index + 1}\n                            //     </td>\n                            //     <td colSpan=\"2\">\n                            //         <img  style ={{width:\"154px\", height:\"231px\"}}src= {value.poster_image_thumbnail}/>\n\n\n                            //         {value.title}</td>\n                            //     <td style={center}><Button variant=\"outline-light\" value={index} onClick={this.handleChange}>View Review</Button></td>\n                            // </tr>\n                        ))}\n\n                    </tbody>\n                </Table>\n            </div>\n\n        )\n\n\n\n    }\n\n\n\n    getData() {\n\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                movie_arr: resp.movies,\n            }, () => {\n                this.checkTitleNull()\n            });\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n\n\n    }\n\n    checkTitleNull() {\n        var movie_arr = this.state.movie_arr;\n        var result = new Array();\n        for (let i = 0; i < movie_arr.length; i++) {\n            var movie = movie_arr[i];\n            if (movie.title != null) {\n                if (movie.poster_image_thumbnail == null) {\n                    movie.poster_image_thumbnail = require(\"./img/noposter.jpg\")\n                }\n                result.push(movie)\n            }\n        }\n\n        this.setState({\n            movie_arr: result,\n        })\n    }\n\n\n}\n\nexport default NowShowing;"]},"metadata":{},"sourceType":"module"}