{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Maps.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport './Maps.css';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer } from 'react-google-maps'; // import { Polyline } from 'react-google-maps';\n\nimport Marker2 from './Marker2';\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          icon: {\n            url: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png'\n          },\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => this.setDestination(store),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      stores: [{\n        latitude: 47.359423,\n        longitude: -122.021071\n      }, {\n        latitude: 47.2052192687988,\n        longitude: -121.988426208496\n      }, {\n        latitude: 47.6307081,\n        longitude: -122.1434325\n      }, {\n        latitude: 47.3084488,\n        longitude: -122.2140121\n      }, {\n        latitude: 47.5524695,\n        longitude: -122.0425407\n      }],\n      directions: '',\n      origin: null,\n      destination: {\n        lat: 1.29992,\n        lng: 103.852\n      },\n      //lat long of cinema\n      submit: false\n    };\n    this.handleStartChange = this.handleStartChange.bind(this);\n    this.getDirection = this.getDirection.bind(this);\n  }\n\n  setDestination(store) {\n    this.setState({\n      destination: {\n        lat: store.latitude,\n        lng: store.longitude\n      }\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      origin: event.target.value\n    });\n    console.log(this.state.origin);\n  }\n\n  getDirection() {\n    console.log(\"yo\");\n\n    if (this.state.origin != null && this.state.destination != null) {\n      const google = window.google;\n      const directionsService = new google.maps.DirectionsService();\n      const origin = this.state.origin;\n      const destination = this.state.destination;\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(\"error fetching directions \".concat(result));\n        }\n      });\n      return React.createElement(DirectionsRenderer, {\n        directions: this.state.directions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    const GoogleMapExample = withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      defaultZoom: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: 48.00,\n        lng: -122.00\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.displayMarkers(), this.getDirection()));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"floating-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Start:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"origin\",\n      id: \"origin\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Mode of Travel: \"), React.createElement(\"select\", {\n      id: \"mode\",\n      name: \"mode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"DRIVING\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Driving\"), React.createElement(\"option\", {\n      value: \"WALKING\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Walking\"), React.createElement(\"option\", {\n      value: \"BICYCLING\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Bicycling\"), React.createElement(\"option\", {\n      value: \"TRANSIT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Transit\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-light\",\n      id: \"submit\",\n      name: \"submit\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"GO\")), React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(GoogleMapExample, {\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          width: '1000px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM'\n})(MapContainer);","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Maps.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","MDBCardImage","Map","GoogleApiWrapper","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","DirectionsRenderer","Marker2","MapContainer","Component","constructor","props","displayMarkers","state","stores","map","store","index","url","lat","latitude","lng","longitude","setDestination","directions","origin","destination","submit","handleStartChange","bind","getDirection","setState","handleChange","event","target","value","console","log","google","window","directionsService","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","error","render","mapStyles","width","height","GoogleMapExample","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { MDBCardImage } from \"mdbreact\";\n\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport './Maps.css'\n\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n  DirectionsRenderer,\n\n\n\n} from 'react-google-maps';\n// import { Polyline } from 'react-google-maps';\nimport Marker2 from './Marker2';\n\n\nclass MapContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stores: [\n        { latitude: 47.359423, longitude: -122.021071 },\n        { latitude: 47.2052192687988, longitude: -121.988426208496 },\n        { latitude: 47.6307081, longitude: -122.1434325 },\n        { latitude: 47.3084488, longitude: -122.2140121 },\n        { latitude: 47.5524695, longitude: -122.0425407 }],\n      directions: '',\n      origin: null,\n      destination:{lat:1.29992, lng:103.852}, //lat long of cinema\n      submit: false,\n      \n\n    };\n\n    this.handleStartChange = this.handleStartChange.bind(this);\n    this.getDirection = this.getDirection.bind(this);\n  }\n\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker\n        icon={{ url: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png' }}\n\n        key={index} id={index} position={{\n          lat: store.latitude,\n          lng: store.longitude\n        }}\n        onClick={() => this.setDestination(store)} />\n    })\n  }\n\n  setDestination(store) {\n\n    this.setState({\n      destination: { lat: store.latitude, lng: store.longitude },\n    });\n\n  }\n\n  handleChange(event) {\n    this.setState({\n      origin: event.target.value,\n    });\n    console.log(this.state.origin)\n  }\n\n  getDirection() {\n\n    console.log(\"yo\");\n    if (this.state.origin != null && this.state.destination != null) {\n      const google = window.google\n\n      const directionsService = new google.maps.DirectionsService();\n\n      const origin = this.state.origin;\n      const destination = this.state.destination;\n\n      directionsService.route(\n        {\n          origin: origin,\n          destination: destination,\n          travelMode: google.maps.TravelMode.DRIVING\n        },\n        (result, status) => {\n          if (status === google.maps.DirectionsStatus.OK) {\n            this.setState({\n              directions: result\n            });\n          } else {\n            console.error(`error fetching directions ${result}`);\n          }\n        }\n      );\n\n      return <DirectionsRenderer\n        directions={this.state.directions}\n      />\n\n    } else {\n      return null;\n    }\n\n\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%',\n    };\n\n\n\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 47.444, lng: -122.176 }}\n        defaultZoom={8}\n\n      >\n\n        <Marker position={{ lat: 48.00, lng: -122.00 }} />\n        {this.displayMarkers()}\n        {this.getDirection()}\n\n      </GoogleMap>\n    ));\n\n\n    return (\n      <div >\n        <div id=\"floating-panel\">\n          <strong>Start:</strong>\n          <input type=\"text\" name=\"origin\" id=\"origin\" onChange={this.handleChange} />\n          <br />\n          <strong>Mode of Travel: </strong>\n          <select id=\"mode\" name=\"mode\">\n            <option value=\"DRIVING\">Driving</option>\n            <option value=\"WALKING\">Walking</option>\n            <option value=\"BICYCLING\">Bicycling</option>\n            <option value=\"TRANSIT\">Transit</option>\n          </select>\n          <button type=\"button\" className=\"btn btn-light\" id=\"submit\" name =\"submit\" onClick={this.handleChange}>GO</button>\n\n        </div>\n       \n        <div id=\"map\">\n          <GoogleMapExample\n            containerElement={<div style={{ height: `500px`, width: '1000px' }} />}\n            mapElement={<div style={{ height: `100%`, width: '100%' }} />}\n          />\n        </div>\n\n      </div>\n\n\n    );\n  }\n\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM'\n})(MapContainer);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}