{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/WebApp2 Movie App Group 7/movieapp/src/CinemasNearby.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { Redirect } from 'react-router';\n\nclass CinemasNearby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n      cinema_arr: [],\n      destination_value: null,\n      redirect: false,\n      curr_lat: '',\n      curr_lng: '',\n      distanceSet: 1 //in km\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showPosition = this.showPosition.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.showPosition);\n    } else {\n      this.setState({\n        curr_lat: null,\n        curr_lng: null\n      });\n    } // this.getData();\n\n  }\n\n  showPosition(position) {\n    var lat = position.coords.latitude;\n    var lng = position.coords.longitude;\n    console.log(lat);\n    console.log(lng);\n    this.setState({\n      curr_lat: lat,\n      curr_lng: lng\n    }, () => {\n      this.getData();\n    });\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value; // this.setState({\n    //     value : value,\n    //     redirect: true,\n    //   });\n\n    this.setState({\n      distanceSet: value\n    }, () => {\n      this.getData();\n    }); // console.log(this.state);\n    // console.log(this.state.value.location);\n  }\n\n  handleRedirect(event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n      destination_value: this.state.cinema_arr[value],\n      redirect: true\n    });\n  }\n\n  displayResult() {\n    const center = {\n      textAlign: 'center'\n    };\n\n    if (this.state.cinema_arr != undefined && this.state.cinema_arr.length > 0) {\n      return React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Cinema\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.cinema_arr.map((value, index) => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, value.name), React.createElement(\"td\", {\n        style: center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-light\",\n        value: index,\n        onClick: this.handleRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Get Direction\"))))));\n    }\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.redirect) {\n      console.log(this.state);\n      console.log(this.state.destination_value.location);\n      return React.createElement(Redirect, {\n        push: true,\n        from: \"/\",\n        to: {\n          pathname: '/getdirections',\n          state: {\n            destination_value: this.state.destination_value.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n    }\n\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"50%\",\n      textAlign: 'center',\n      paddingTop: \"20px\"\n    };\n    return React.createElement(\"div\", {\n      className: \"table1\",\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Cinemas Nearby\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Set Distance Nearby (KM)\"), React.createElement(Form.Control, {\n      as: \"select\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"10\")))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), this.displayResult());\n  }\n\n  getData() {\n    var lat = this.state.curr_lat;\n    var lng = this.state.curr_lng;\n    var distance = this.state.distanceSet; //incase api is down uncomment below\n    // var data = require('./backupjson/nearbycinemadist'+this.state.distanceSet+'.json');\n    // this.setState({\n    //     cinema_arr: data.cinemas,\n    // });\n\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/cinemas/?location=\" + lat + \",\" + lng + \"&distance=\" + distance + \"&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        cinema_arr: resp.cinemas\n      });\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n}\n\nexport default CinemasNearby;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/WebApp2 Movie App Group 7/movieapp/src/CinemasNearby.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Form","Redirect","CinemasNearby","Component","constructor","props","state","apikeyIS","cinema_arr","destination_value","redirect","curr_lat","curr_lng","distanceSet","handleChange","bind","showPosition","handleRedirect","componentDidMount","navigator","geolocation","getCurrentPosition","setState","position","lat","coords","latitude","lng","longitude","console","log","getData","event","target","value","displayResult","center","textAlign","undefined","length","map","index","name","render","location","pathname","bold","fontWeight","centralize","margin","width","paddingTop","distance","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","cinemas","open","send"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { Redirect } from 'react-router';\n\n\nclass CinemasNearby extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n            cinema_arr: [],\n            destination_value: null,\n            redirect: false,\n            curr_lat: '',\n            curr_lng: '',\n            distanceSet: 1, //in km\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.showPosition = this.showPosition.bind(this);\n        this.handleRedirect = this.handleRedirect.bind(this);\n\n    }\n\n    componentDidMount() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.showPosition);\n        } else {\n            this.setState({\n                curr_lat: null,\n                curr_lng: null,\n            })\n        }\n        // this.getData();\n    }\n\n    showPosition(position) {\n        var lat = position.coords.latitude;\n        var lng = position.coords.longitude;\n\n        console.log(lat)\n        console.log(lng)\n\n        this.setState({\n            curr_lat: lat,\n            curr_lng: lng,\n        }, () => {\n            this.getData();\n        })\n    }\n\n    handleChange(event) {\n\n        const target = event.target;\n        const value = target.value;\n\n        // this.setState({\n        //     value : value,\n        //     redirect: true,\n        //   });\n\n        this.setState({\n            distanceSet: value,\n        }, () => {\n            this.getData();\n        });\n        // console.log(this.state);\n        // console.log(this.state.value.location);\n\n    }\n\n    handleRedirect(event) {\n\n        const target = event.target;\n        const value = target.value;\n\n\n        this.setState({\n            destination_value: this.state.cinema_arr[value],\n            redirect: true,\n        });\n    \n\n    }\n\n    \n\n    displayResult(){\n        const center = {\n            textAlign: 'center',\n        };\n        if(this.state.cinema_arr != undefined && this.state.cinema_arr.length > 0){\n            return(\n                <Table striped bordered hover variant=\"dark\"  >\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Cinema</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.cinema_arr.map((value, index) => (\n                            <tr>\n                                <td>\n                                    {index + 1}\n                                </td>\n                                <td colSpan=\"2\">{value.name}</td>\n                                <td style={center}>\n                                    <Button variant=\"outline-light\" value={index} onClick={this.handleRedirect}>Get Direction</Button>\n\n                                </td>\n\n                            </tr>\n                        ))}\n\n                    </tbody>\n                </Table>\n            )\n        }\n    }\n\n    render() {\n        console.log(this.state);\n        if (this.state.redirect) {\n            console.log(this.state);\n            console.log(this.state.destination_value.location);\n            return (\n                <Redirect push from='/' to={{\n                    pathname: '/getdirections',\n                    state: {\n                        destination_value: this.state.destination_value.location,\n                    }\n                }} />\n            )\n\n        }\n\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"50%\",\n            textAlign: 'center',\n            paddingTop: \"20px\"\n        };\n\n        return (\n\n            <div className=\"table1\" style={centralize}>\n\n                <h1 >Cinemas Nearby</h1>\n\n\n                <Form>\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Set Distance Nearby (KM)</Form.Label>\n                        <Form.Control as=\"select\" onChange={this.handleChange}>\n                            <option>1</option>\n                            <option>5</option>\n                            <option>8</option>\n                            <option>10</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Form>\n\n\n\n\n                <br></br>\n\n                {this.displayResult()}\n                \n                {/* <Table striped bordered hover variant=\"dark\"  >\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Cinema</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.cinema_arr.map((value, index) => (\n                            <tr>\n                                <td>\n                                    {index + 1}\n                                </td>\n                                <td colSpan=\"2\">{value.name}</td>\n                                <td style={center}>\n                                    <Button variant=\"outline-light\" value={index} onClick={this.handleChange}>Get Direction</Button>\n\n                                </td>\n\n                            </tr>\n                        ))}\n\n                    </tbody>\n                </Table> */}\n            </div>\n\n        )\n\n\n    }\n\n\n\n    getData() {\n\n        var lat = this.state.curr_lat;\n        var lng = this.state.curr_lng;\n        var distance = this.state.distanceSet;\n\n        //incase api is down uncomment below\n\n        // var data = require('./backupjson/nearbycinemadist'+this.state.distanceSet+'.json');\n        // this.setState({\n        //     cinema_arr: data.cinemas,\n        // });\n\n\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/cinemas/?location=\" + lat + \",\" + lng + \"&distance=\" + distance + \"&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                cinema_arr: resp.cinemas,\n            });\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n\n\n    }\n\n\n}\n\nexport default CinemasNearby;"]},"metadata":{},"sourceType":"module"}