{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\SearchBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst suggestions = [];\n\nfunction constructCinemasSuggestions() {\n  var xhr = new XMLHttpRequest();\n  let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n  xhr.addEventListener('load', () => {\n    // update the state of the component with the result here\n    var resp = JSON.parse(xhr.responseText); //   this.setState({ results: resp.cinemas[0].location });\n\n    var cinemasArr = [];\n\n    for (let i = 0; i < resp.cinemas.length; i++) {\n      var cinema = resp.cinemas[i];\n      suggestions.push({\n        label: cinema.name\n      });\n    }\n\n    console.log(suggestions); // var acinema = resp.cinemas[0];\n    // console.log(acinema.name);\n  });\n  xhr.open('GET', url);\n  xhr.send();\n}\n\nfunction renderInputComponent(inputProps) {\n  const classes = inputProps.classes,\n        _inputProps$inputRef = inputProps.inputRef,\n        inputRef = _inputProps$inputRef === void 0 ? () => {} : _inputProps$inputRef,\n        ref = inputProps.ref,\n        other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return React.createElement(TextField //   fullWidth\n  , Object.assign({\n    InputProps: {\n      inputRef: node => {\n        ref(node);\n        inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(suggestion, {\n  query,\n  isHighlighted\n}) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n  return React.createElement(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, parts.map(part => React.createElement(\"span\", {\n    key: part.text,\n    style: {\n      fontWeight: part.highlight ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, part.text))));\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(suggestion => {\n    const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 200,\n    flexGrow: 1,\n    display: 'flex',\n    // flexWrap: 'wrap',\n    flexFlow: \"row wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  container: {\n    position: 'relative'\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n    width: 250\n  },\n  suggestion: {\n    display: 'block',\n    cursor: 'pointer' // padding: '10px 20px',\n    // width:200,\n\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none' // width: 500,\n\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1]; //   const [values, setValues] = React.useState({\n  //     age: '',\n  //     name: 'hai',\n  //   });\n\n\n  const _React$useState3 = React.useState({\n    single: '',\n    popper: ''\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1];\n\n  const _React$useState5 = React.useState({\n    age: ''\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        values = _React$useState6[0],\n        setValues = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        stateSuggestions = _React$useState8[0],\n        setSuggestions = _React$useState8[1];\n\n  const handleSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, {\n    newValue\n  }) => {\n    setState(_objectSpread({}, state, {\n      [name]: newValue\n    }));\n  };\n\n  const handleSelectChange = event => {\n    //   console.log(\"hi\");\n    setValues(oldValues => _objectSpread({}, oldValues, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, constructCinemasSuggestions(), React.createElement(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n    inputProps: {\n      //   style: {display : 'inline'},\n      classes,\n      id: 'react-autosuggest-simple',\n      label: 'Cinema',\n      placeholder: 'Searh a cinema',\n      value: state.single,\n      onChange: handleChange('single')\n    },\n    theme: {\n      container: classes.container,\n      suggestionsContainerOpen: classes.suggestionsContainerOpen,\n      suggestionsList: classes.suggestionsList,\n      suggestion: classes.suggestion\n    } // style = {{display: 'inline'}}\n    ,\n    renderSuggestionsContainer: options => React.createElement(Paper, Object.assign({}, options.containerProps, {\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), options.children),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/SearchBar.js"],"names":["React","deburr","Autosuggest","match","parse","TextField","Paper","MenuItem","Popper","makeStyles","InputLabel","FormHelperText","FormControl","Select","suggestions","constructCinemasSuggestions","xhr","XMLHttpRequest","url","addEventListener","resp","JSON","responseText","cinemasArr","i","cinemas","length","cinema","push","label","name","console","log","open","send","renderInputComponent","inputProps","classes","inputRef","ref","other","node","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","text","fontWeight","highlight","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","count","filter","keep","slice","getSuggestionValue","useStyles","theme","root","height","flexGrow","display","flexFlow","formControl","margin","spacing","minWidth","selectEmpty","marginTop","container","position","suggestionsContainerOpen","zIndex","left","right","width","cursor","suggestionsList","padding","listStyleType","divider","IntegrationAutosuggest","useState","anchorEl","setAnchorEl","single","popper","state","setState","age","values","setValues","stateSuggestions","setSuggestions","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","event","newValue","handleSelectChange","oldValues","target","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","id","placeholder","onChange","options","containerProps","children"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst suggestions = [\r\n\r\n];\r\n\r\nfunction constructCinemasSuggestions() {\r\n    var xhr = new XMLHttpRequest()\r\n    let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n    xhr.addEventListener('load', () => {\r\n        // update the state of the component with the result here\r\n        var resp = JSON.parse(xhr.responseText);\r\n        //   this.setState({ results: resp.cinemas[0].location });\r\n        var cinemasArr = [];\r\n        for (let i = 0; i < resp.cinemas.length; i++) {\r\n            var cinema = resp.cinemas[i];\r\n            suggestions.push({ label: cinema.name });\r\n        }\r\n        console.log(suggestions);\r\n        // var acinema = resp.cinemas[0];\r\n        // console.log(acinema.name);\r\n\r\n    })\r\n    xhr.open('GET', url)\r\n    xhr.send()\r\n\r\n}\r\n\r\nfunction renderInputComponent(inputProps) {\r\n    const { classes, inputRef = () => { }, ref, ...other } = inputProps;\r\n\r\n    return (\r\n        <TextField\r\n            //   fullWidth\r\n            InputProps={{\r\n                inputRef: node => {\r\n                    ref(node);\r\n                    inputRef(node);\r\n                },\r\n                classes: {\r\n                    input: classes.input,\r\n                },\r\n            }}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n    const matches = match(suggestion.label, query);\r\n    const parts = parse(suggestion.label, matches);\r\n\r\n    return (\r\n        <MenuItem selected={isHighlighted} component=\"div\">\r\n            <div>\r\n                {parts.map(part => (\r\n                    <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\r\n                        {part.text}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n        ? []\r\n        : suggestions.filter(suggestion => {\r\n            const keep =\r\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n\r\n            return keep;\r\n        });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.label;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: 200,\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        // flexWrap: 'wrap',\r\n        flexFlow: \"row wrap\",\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(1),\r\n        left: 0,\r\n        right: 0,\r\n        width: 250,\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n        cursor: 'pointer',\r\n        // padding: '10px 20px',\r\n        // width:200,\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n        // width: 500,\r\n    },\r\n    divider: {\r\n        height: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function IntegrationAutosuggest() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    //   const [values, setValues] = React.useState({\r\n    //     age: '',\r\n    //     name: 'hai',\r\n    //   });\r\n\r\n    const [state, setState] = React.useState({\r\n        single: '',\r\n        popper: '',\r\n    });\r\n\r\n    const [values, setValues] = React.useState({\r\n        age: '',\r\n    });\r\n\r\n\r\n    const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n\r\n\r\n    const handleSuggestionsFetchRequested = ({ value }) => {\r\n        setSuggestions(getSuggestions(value));\r\n    };\r\n\r\n\r\n    const handleSuggestionsClearRequested = () => {\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const handleChange = name => (event, { newValue }) => {\r\n        setState({\r\n            ...state,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n\r\n    const handleSelectChange = event => {\r\n        //   console.log(\"hi\");\r\n        setValues(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const autosuggestProps = {\r\n        renderInputComponent,\r\n        suggestions: stateSuggestions,\r\n        onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n        onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n        getSuggestionValue,\r\n        renderSuggestion,\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={classes.root} >\r\n            {constructCinemasSuggestions()}\r\n\r\n            <form className={classes.root} autoComplete=\"off\">\r\n                <FormControl className={classes.formControl}>\r\n\r\n                    <div style =\"inline\">\r\n                        <Autosuggest\r\n                            {...autosuggestProps}\r\n                            inputProps={{\r\n                                //   style: {display : 'inline'},\r\n                                classes,\r\n                                id: 'react-autosuggest-simple',\r\n                                label: 'Cinema',\r\n                                placeholder: 'Searh a cinema',\r\n                                value: state.single,\r\n                                onChange: handleChange('single'),\r\n                            }}\r\n                            theme={{\r\n                                container: classes.container,\r\n                                suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n                                suggestionsList: classes.suggestionsList,\r\n                                suggestion: classes.suggestion,\r\n                            }}\r\n                            // style = {{display: 'inline'}}\r\n                            renderSuggestionsContainer={options => (\r\n                                <Paper {...options.containerProps} square>\r\n                                    {options.children}\r\n                                </Paper>\r\n                            )}\r\n                        />\r\n\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div>\r\n\r\n\r\n                    </div>\r\n                    \r\n\r\n\r\n                </FormControl>\r\n            </form>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}