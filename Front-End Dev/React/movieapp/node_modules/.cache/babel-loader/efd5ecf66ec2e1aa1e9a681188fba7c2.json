{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\SearchBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React from 'react';\n// class SearchBar extends React.Component{\n//     render(){\n//         return(\n//             <div className =\"searchBar\">\n//             </div>\n//         )\n//     }\n// }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nconst suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}]; // function constructor(props) {\n//     super(props)\n//     this.state = {\n//       results: ''\n//     }\n//   }\n\nfunction componentDidMount() {\n  this.getData(); // this.tableData();\n}\n\nfunction getData() {\n  var xhr = new XMLHttpRequest();\n  let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n  xhr.addEventListener('load', () => {\n    // update the state of the component with the result here\n    var resp = JSON.parse(xhr.responseText); //   this.setState({ results: resp.cinemas[0].location });\n  });\n  xhr.open('GET', url);\n  xhr.send();\n}\n\nfunction renderInput(inputProps) {\n  const InputProps = inputProps.InputProps,\n        classes = inputProps.classes,\n        ref = inputProps.ref,\n        other = _objectWithoutProperties(inputProps, [\"InputProps\", \"classes\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    InputProps: _objectSpread({\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      }\n    }, InputProps)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n}\n\nrenderInput.propTypes = {\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object.isRequired,\n  InputProps: PropTypes.object\n};\n\nfunction renderSuggestion(suggestionProps) {\n  const suggestion = suggestionProps.suggestion,\n        index = suggestionProps.index,\n        itemProps = suggestionProps.itemProps,\n        highlightedIndex = suggestionProps.highlightedIndex,\n        selectedItem = suggestionProps.selectedItem;\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n  return React.createElement(MenuItem, Object.assign({}, itemProps, {\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), suggestion.label);\n}\n\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n  index: PropTypes.number.isRequired,\n  itemProps: PropTypes.object.isRequired,\n  selectedItem: PropTypes.string.isRequired,\n  suggestion: PropTypes.shape({\n    label: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction getSuggestions(value, {\n  showEmpty = false\n} = {}) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0 && !showEmpty ? [] : suggestions.filter(suggestion => {\n    const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative'\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  inputRoot: {\n    flexWrap: 'wrap'\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\nexport default function IntegrationDownshift() {\n  const classes = useStyles();\n  this.getData();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(Downshift, {\n    id: \"downshift-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    getItemProps,\n    getLabelProps,\n    getMenuProps,\n    highlightedIndex,\n    inputValue,\n    isOpen,\n    selectedItem\n  }) => {\n    const _getInputProps = getInputProps({\n      placeholder: 'Search for a country (start with a)'\n    }),\n          onBlur = _getInputProps.onBlur,\n          onFocus = _getInputProps.onFocus,\n          inputProps = _objectWithoutProperties(_getInputProps, [\"onBlur\", \"onFocus\"]);\n\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, renderInput({\n      fullWidth: true,\n      classes,\n      label: 'Country',\n      InputLabelProps: getLabelProps({\n        shrink: true\n      }),\n      InputProps: {\n        onBlur,\n        onFocus\n      },\n      inputProps\n    }), React.createElement(\"div\", Object.assign({}, getMenuProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), isOpen ? React.createElement(Paper, {\n      className: classes.paper,\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, getSuggestions(inputValue).map((suggestion, index) => renderSuggestion({\n      suggestion,\n      index,\n      itemProps: getItemProps({\n        item: suggestion.label\n      }),\n      highlightedIndex,\n      selectedItem\n    }))) : null));\n  }), React.createElement(\"div\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/SearchBar.js"],"names":["React","PropTypes","deburr","Downshift","makeStyles","TextField","Popper","Paper","MenuItem","Chip","suggestions","label","componentDidMount","getData","xhr","XMLHttpRequest","url","addEventListener","resp","JSON","parse","responseText","open","send","renderInput","inputProps","InputProps","classes","ref","other","inputRef","root","inputRoot","input","inputInput","propTypes","object","isRequired","renderSuggestion","suggestionProps","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","indexOf","fontWeight","oneOfType","oneOf","number","string","shape","getSuggestions","value","showEmpty","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","useStyles","theme","flexGrow","height","container","position","paper","zIndex","marginTop","spacing","left","right","chip","margin","flexWrap","width","divider","IntegrationDownshift","getInputProps","getItemProps","getLabelProps","getMenuProps","isOpen","placeholder","onBlur","onFocus","fullWidth","InputLabelProps","shrink","map","item"],"mappings":"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","sourcesContent":["// import React from 'react';\r\n\r\n// class SearchBar extends React.Component{\r\n//     render(){\r\n//         return(\r\n//             <div className =\"searchBar\">\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Downshift from 'downshift';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\n\r\n\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n];\r\n\r\n// function constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       results: ''\r\n//     }\r\n//   }\r\n\r\nfunction componentDidMount() {\r\n    this.getData();\r\n    // this.tableData();\r\n  }\r\n\r\nfunction getData() {\r\n    var xhr = new XMLHttpRequest()\r\n    let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n    xhr.addEventListener('load', () => {\r\n      // update the state of the component with the result here\r\n      var resp = JSON.parse(xhr.responseText);\r\n    //   this.setState({ results: resp.cinemas[0].location });\r\n    })\r\n    xhr.open('GET', url)\r\n    xhr.send()\r\n    \r\n  }\r\n\r\nfunction renderInput(inputProps) {\r\n  const { InputProps, classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={{\r\n        inputRef: ref,\r\n        classes: {\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        },\r\n        ...InputProps,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nrenderInput.propTypes = {\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  InputProps: PropTypes.object,\r\n};\r\n\r\nfunction renderSuggestion(suggestionProps) {\r\n    \r\n    \r\n  const { suggestion, index, itemProps, highlightedIndex, selectedItem } = suggestionProps;\r\n  const isHighlighted = highlightedIndex === index;\r\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={suggestion.label}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: isSelected ? 500 : 400,\r\n      }}\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nrenderSuggestion.propTypes = {\r\n  highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  itemProps: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.string.isRequired,\r\n  suggestion: PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nfunction getSuggestions(value, { showEmpty = false } = {}) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0 && !showEmpty\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  inputRoot: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  inputInput: {\r\n    width: 'auto',\r\n    flexGrow: 1,\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function IntegrationDownshift() {\r\n  const classes = useStyles();\r\n    this.getData();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Downshift id=\"downshift-simple\">\r\n        {({\r\n          getInputProps,\r\n          getItemProps,\r\n          getLabelProps,\r\n          getMenuProps,\r\n          highlightedIndex,\r\n          inputValue,\r\n          isOpen,\r\n          selectedItem,\r\n        }) => {\r\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\r\n            placeholder: 'Search for a country (start with a)',\r\n          });\r\n\r\n          return (\r\n            <div className={classes.container}>\r\n              {renderInput({\r\n                fullWidth: true,\r\n                classes,\r\n                label: 'Country',\r\n                InputLabelProps: getLabelProps({ shrink: true }),\r\n                InputProps: { onBlur, onFocus },\r\n                inputProps,\r\n              })}\r\n\r\n              <div {...getMenuProps()}>\r\n                {isOpen ? (\r\n                  <Paper className={classes.paper} square>\r\n                    {getSuggestions(inputValue).map((suggestion, index) =>\r\n                      renderSuggestion({\r\n                        suggestion,\r\n                        index,\r\n                        itemProps: getItemProps({ item: suggestion.label }),\r\n                        highlightedIndex,\r\n                        selectedItem,\r\n                      }),\r\n                    )}\r\n                  </Paper>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Downshift>\r\n      <div className={classes.divider} />\r\n  \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}