{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/SuccessfulForm.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nclass SuccessfulForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planid: this.props.location.state.planid,\n      cinema: this.props.location.state.cinema,\n      movie: this.props.location.state.movie,\n      copyIdToClipboard: false\n    };\n    this.handleSubmitClipboard = this.handleSubmitClipboard.bind(this);\n  }\n\n  componentDidMount() {} // this.getData();\n  // handleChange(event) {\n  //     const target = event.target;\n  //     const name = target.name;\n  //     const value = target.value;\n  //     this.setState({\n  //         [name]: value,\n  //     });\n  // }\n\n\n  handleSubmitClipboard(event) {\n    event.preventDefault();\n    this.setState({\n      copyIdToClipboard: true\n    });\n  }\n\n  copyIdToClipboard(text) {\n    var dummy = document.createElement(\"textarea\"); // to avoid breaking orgain page when copying more words\n    // cant copy when adding below this code\n    // dummy.style.display = 'none'\n\n    document.body.appendChild(dummy); //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". â€“ Eduard\n\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n    window.alert('Plan ID: ' + this.state.planid + ' has been successfully copied into your clipboard! Share with your friends now!');\n  }\n\n  render() {\n    const centralize = {\n      margin: \"auto\",\n      width: \"50%\",\n      textAlign: 'center',\n      paddingTop: \"30px\"\n    };\n    const bold = {\n      fontWeight: \"bold\"\n    };\n    const center = {\n      textAlign: 'center',\n      margin: \"auto\",\n      marginTop: \"5px\"\n    };\n    console.log(this.state); // {this.redirect()}\n\n    if (this.state.copyIdToClipboard) {\n      this.copyIdToClipboard(this.state.planid);\n    }\n\n    return React.createElement(Jumbotron, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: require(\"./img/successful.png\"),\n      width: \"30\",\n      height: \"30\",\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Form Plan ID: \", React.createElement(\"span\", {\n      style: bold,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.planid, \" \"), \" has successfully created! \"), React.createElement(\"p\", {\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Copy plan ID: \", React.createElement(\"span\", {\n      style: bold,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.planid, \" \"), \"to share it with your friends!\")), React.createElement(Row, {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: center,\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: this.handleSubmitClipboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Copy Plan ID to Clipboard\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: {\n        pathname: \"/plantomeet\",\n        state: {\n          planid: this.state.planid\n        }\n      },\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Vote now\")))));\n  }\n\n}\n\nexport default SuccessfulForm;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/SuccessfulForm.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Form","MDBCardImage","Redirect","Link","SuccessfulForm","Component","constructor","props","state","planid","location","cinema","movie","copyIdToClipboard","handleSubmitClipboard","bind","componentDidMount","event","preventDefault","setState","text","dummy","document","createElement","body","appendChild","value","select","execCommand","removeChild","window","alert","render","centralize","margin","width","textAlign","paddingTop","bold","fontWeight","center","marginTop","console","log","require","pathname"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\n\n\nclass SuccessfulForm extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            planid: this.props.location.state.planid,\n            cinema: this.props.location.state.cinema,\n            movie: this.props.location.state.movie,\n            copyIdToClipboard: false,\n        };\n        this.handleSubmitClipboard = this.handleSubmitClipboard.bind(this);\n    }\n\n    componentDidMount() {\n        // this.getData();\n\n    }\n\n    // handleChange(event) {\n\n    //     const target = event.target;\n    //     const name = target.name;\n    //     const value = target.value;\n\n\n    //     this.setState({\n    //         [name]: value,\n    //     });\n\n    // }\n\n\n    handleSubmitClipboard(event) {\n        event.preventDefault();\n        this.setState({\n            copyIdToClipboard: true,\n        })\n    }\n\n    copyIdToClipboard(text) {\n        var dummy = document.createElement(\"textarea\");\n        // to avoid breaking orgain page when copying more words\n        // cant copy when adding below this code\n        // dummy.style.display = 'none'\n        document.body.appendChild(dummy);\n        //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". â€“ Eduard\n        dummy.value = text;\n        dummy.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(dummy);\n        window.alert('Plan ID: ' + this.state.planid + ' has been successfully copied into your clipboard! Share with your friends now!');\n\n    }\n\n    render() {\n        const centralize = {\n            margin: \"auto\",\n            width: \"50%\",\n            textAlign: 'center',\n            paddingTop: \"30px\"\n        };\n        \n        const bold = {\n            fontWeight: \"bold\",\n        };\n\n        const center ={\n            textAlign: 'center',\n            margin: \"auto\",\n            marginTop: \"5px\",\n        }\n\n        console.log(this.state);\n\n        // {this.redirect()}\n\n        if (this.state.copyIdToClipboard) {\n            this.copyIdToClipboard(this.state.planid);\n        }\n\n        return (\n\n\n            <Jumbotron fluid>\n                <Container style ={centralize}>\n                    <Row >\n                    <img\n                            alt=\"\"\n                            src={require(\"./img/successful.png\")}\n                            width=\"30\"\n                            height=\"30\"\n                            style={center}\n                        />\n                        <h2 style ={center}>Form Plan ID: <span style={bold}>{this.state.planid} </span> has successfully created! </h2>\n                        <p style ={center}>Copy plan ID: <span style={bold}>{this.state.planid} </span>to share it with your friends!</p>\n                    </Row>\n\n\n                    <Row style ={centralize}>\n                       \n\n                            <button style = {center} type=\"button\" className=\"btn btn-danger\" onClick={this.handleSubmitClipboard}>Copy Plan ID to Clipboard</button>\n                            <br></br>\n                            <Link to={{\n                                pathname: \"/plantomeet\",\n                                state: {\n                                    planid: this.state.planid,\n                                }\n                            }} style = {center}>\n                                <button  type=\"button\" className=\"btn btn-danger\">Vote now</button>\n\n                            </Link>\n\n                    </Row> \n\n\n                    \n\n                </Container>\n            </Jumbotron>\n\n\n\n        )\n\n    }\n\n}\n\nexport default SuccessfulForm;"]},"metadata":{},"sourceType":"module"}