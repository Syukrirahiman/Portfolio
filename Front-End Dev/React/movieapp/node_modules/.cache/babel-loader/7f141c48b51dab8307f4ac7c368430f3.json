{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\Showtimes.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Showtimes.css';\nimport { Table, Jumbotron, Container } from 'react-bootstrap'; // const cinema = this.props.location.state.cinema;\n// const movie_id = this.props.location.state.movie_id\n\nclass Showtimes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cinema: this.props.location.state.cinema,\n      movie_id: this.props.location.state.movie_id,\n      result: [],\n      cinema_id: '',\n      city_id: '',\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n      apikeyOMDB: '9e790f8b',\n      imdbid: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    // this.displayShowtimes()\n    const result = this.state.result;\n    console.log(result);\n    return React.createElement(\"div\", {\n      id: \"showtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"This is a modified jumbotron that occupies the entire horizontal space of its parent.\"))), React.createElement(\"div\", {\n      className: \"table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Timeslot\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.result.map((value, index) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, value.start_at))))))) // this.displayShowtimes()\n    ; // this.displayShowtimes()\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    var cinema_name = this.state.cinema;\n    let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + this.state.apikeyIS;\n    var movie_id = this.state.movie_id;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n\n      for (let i = 0; i < resp.cinemas.length; i++) {\n        var cinema = resp.cinemas[i];\n\n        if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\n          this.setState({\n            cinema_id: cinema.id,\n            city_id: cinema.city_id\n          });\n        }\n      }\n\n      console.log(this.state);\n      var xhr2 = new XMLHttpRequest();\n      var city_id = this.state.city_id;\n      console.log(city_id);\n      console.log(movie_id); //get showtimes\n\n      let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\n      xhr2.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var result_arr = [];\n        var resp = JSON.parse(xhr2.responseText);\n        console.log(this.state.cinema_id);\n        console.log(movie_id);\n\n        for (let i = 0; i < resp.showtimes.length; i++) {\n          var showtime = resp.showtimes[i];\n          console.log(showtime);\n\n          if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n            result_arr.push(showtime);\n          }\n        }\n\n        console.log(result_arr);\n        this.setState({\n          result: result_arr\n        });\n      });\n      xhr2.open('GET', urlShowtimes);\n      xhr2.send();\n      console.log(this.state);\n    });\n    xhr.open('GET', urlCinemas);\n    xhr.send();\n    var xhr3 = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + apikeyIS;\n    xhr3.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        imdbid: resp.movie.imdb_id\n      });\n      console.log(this.state.imdbid);\n      var xhr4 = new XMLHttpRequest(); //get showtimes\n\n      let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\n      xhr2.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var result_arr = [];\n        var resp = JSON.parse(xhr2.responseText);\n        console.log(this.state.cinema_id);\n        console.log(movie_id);\n\n        for (let i = 0; i < resp.showtimes.length; i++) {\n          var showtime = resp.showtimes[i];\n          console.log(showtime);\n\n          if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n            result_arr.push(showtime);\n          }\n        }\n\n        console.log(result_arr);\n        this.setState({\n          result: result_arr\n        });\n      });\n      xhr2.open('GET', urlShowtimes);\n      xhr2.send();\n      console.log(this.state);\n    });\n    xhr.open('GET', urlCinemas);\n    xhr.send();\n  }\n\n  displayShowtimes() {\n    // this.getData();\n    let r = this.state.result;\n    var test = '';\n    var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\n    console.log(r);\n\n    for (let i = 0; i < r.length; i++) {\n      result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\n      test += i + 1 + \" \" + r[i].start_at + \" \";\n    }\n\n    result += \"</table>\"; // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\n\n    return result; // this.document.getElementById(\"showtime\").innerHTML = result;\n  }\n\n}\n\nexport default Showtimes;","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/Showtimes.js"],"names":["React","ReactDOM","Table","Jumbotron","Container","Showtimes","Component","constructor","props","state","cinema","location","movie_id","result","cinema_id","city_id","apikeyIS","apikeyOMDB","imdbid","componentDidMount","getData","render","console","log","map","value","index","start_at","xhr","XMLHttpRequest","cinema_name","urlCinemas","addEventListener","resp","JSON","parse","responseText","i","cinemas","length","toLowerCase","name","setState","id","xhr2","urlShowtimes","result_arr","showtimes","showtime","push","open","send","xhr3","urlmoviedetails","movie","imdb_id","xhr4","displayShowtimes","r","test"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Showtimes.css'\r\n\r\nimport { Table, Jumbotron, Container } from 'react-bootstrap';\r\n\r\n// const cinema = this.props.location.state.cinema;\r\n// const movie_id = this.props.location.state.movie_id\r\n\r\n\r\nclass Showtimes extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cinema: this.props.location.state.cinema,\r\n            movie_id: this.props.location.state.movie_id,\r\n            result: [],\r\n            cinema_id: '',\r\n            city_id: '',\r\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\r\n            apikeyOMDB: '9e790f8b',\r\n            imdbid: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        // this.displayShowtimes()\r\n        const result = this.state.result;\r\n\r\n        console.log(result);\r\n        return (\r\n            <div id=\"showtime\">\r\n\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <h1>{}</h1>\r\n                        <p>\r\n                            This is a modified jumbotron that occupies the entire horizontal space of\r\n                            its parent.\r\n                        </p>\r\n                    </Container>\r\n                </Jumbotron>\r\n\r\n                <div className=\"table1\">\r\n                    <Table striped bordered hover variant=\"dark\"  >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Timeslot</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.result.map((value, index) => (\r\n                                <tr>\r\n                                    <td>\r\n                                        {index + 1}\r\n                                    </td>\r\n                                    <td colSpan=\"2\">{value.start_at}</td>\r\n                                </tr>\r\n                            ))}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            // this.displayShowtimes()\r\n\r\n        )\r\n\r\n\r\n        // this.displayShowtimes()\r\n    }\r\n\r\n\r\n\r\n    getData() {\r\n        var xhr = new XMLHttpRequest()\r\n        var cinema_name = this.state.cinema;\r\n        let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + this.state.apikeyIS;\r\n        var movie_id = this.state.movie_id;\r\n        xhr.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var resp = JSON.parse(xhr.responseText);\r\n            for (let i = 0; i < resp.cinemas.length; i++) {\r\n                var cinema = resp.cinemas[i];\r\n                if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\r\n                    this.setState({\r\n                        cinema_id: cinema.id,\r\n                        city_id: cinema.city_id,\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            console.log(this.state);\r\n\r\n            var xhr2 = new XMLHttpRequest()\r\n            var city_id = this.state.city_id;\r\n            \r\n\r\n            console.log(city_id)\r\n            console.log(movie_id)\r\n\r\n            //get showtimes\r\n            let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\r\n            xhr2.addEventListener('load', () => {\r\n                // update the state of the component with the result here\r\n                var result_arr = [];\r\n                var resp = JSON.parse(xhr2.responseText);\r\n                console.log(this.state.cinema_id)\r\n                console.log(movie_id)\r\n                for (let i = 0; i < resp.showtimes.length; i++) {\r\n                    var showtime = resp.showtimes[i];\r\n                    console.log(showtime);\r\n                    if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\r\n                        result_arr.push(showtime);\r\n                    }\r\n\r\n\r\n                }\r\n\r\n                console.log(result_arr);\r\n\r\n                this.setState({\r\n                    result: result_arr,\r\n                });\r\n\r\n            })\r\n            xhr2.open('GET', urlShowtimes)\r\n            xhr2.send()\r\n\r\n            console.log(this.state);\r\n\r\n\r\n\r\n        })\r\n        xhr.open('GET', urlCinemas)\r\n        xhr.send()\r\n\r\n\r\n\r\n\r\n\r\n\r\n        var xhr3 = new XMLHttpRequest();\r\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\"+movie_id+\"?fields=imdb_id&apikey=\"+apikeyIS;\r\n\r\n        xhr3.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var resp = JSON.parse(xhr.responseText);\r\n            this.setState({\r\n                imdbid: resp.movie.imdb_id,\r\n            });\r\n\r\n            console.log(this.state.imdbid);\r\n\r\n            var xhr4 = new XMLHttpRequest()\r\n\r\n            //get showtimes\r\n            let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\r\n            xhr2.addEventListener('load', () => {\r\n                // update the state of the component with the result here\r\n                var result_arr = [];\r\n                var resp = JSON.parse(xhr2.responseText);\r\n                console.log(this.state.cinema_id)\r\n                console.log(movie_id)\r\n                for (let i = 0; i < resp.showtimes.length; i++) {\r\n                    var showtime = resp.showtimes[i];\r\n                    console.log(showtime);\r\n                    if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\r\n                        result_arr.push(showtime);\r\n                    }\r\n\r\n\r\n                }\r\n\r\n                console.log(result_arr);\r\n\r\n                this.setState({\r\n                    result: result_arr,\r\n                });\r\n\r\n            })\r\n            xhr2.open('GET', urlShowtimes)\r\n            xhr2.send()\r\n\r\n            console.log(this.state);\r\n\r\n\r\n\r\n        })\r\n        xhr.open('GET', urlCinemas)\r\n        xhr.send()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    displayShowtimes() {\r\n\r\n        // this.getData();\r\n        let r = this.state.result;\r\n        var test = '';\r\n        var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\r\n        console.log(r);\r\n        for (let i = 0; i < r.length; i++) {\r\n            result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\r\n            test += (i + 1) + \" \" + r[i].start_at + \" \";\r\n        }\r\n        result += \"</table>\";\r\n\r\n        // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\r\n\r\n        return result;\r\n\r\n        // this.document.getElementById(\"showtime\").innerHTML = result;\r\n    }\r\n}\r\n\r\nexport default Showtimes;"]},"metadata":{},"sourceType":"module"}