{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\SearchBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React from 'react';\n// class SearchBar extends React.Component{\n//     render(){\n//         return(\n//             <div className =\"searchBar\">\n//             </div>\n//         )\n//     }\n// }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nconst suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInput(inputProps) {\n  const InputProps = inputProps.InputProps,\n        classes = inputProps.classes,\n        ref = inputProps.ref,\n        other = _objectWithoutProperties(inputProps, [\"InputProps\", \"classes\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    InputProps: _objectSpread({\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      }\n    }, InputProps)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n}\n\nrenderInput.propTypes = {\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object.isRequired,\n  InputProps: PropTypes.object\n};\n\nfunction renderSuggestion(suggestionProps) {\n  const suggestion = suggestionProps.suggestion,\n        index = suggestionProps.index,\n        itemProps = suggestionProps.itemProps,\n        highlightedIndex = suggestionProps.highlightedIndex,\n        selectedItem = suggestionProps.selectedItem;\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n  return React.createElement(MenuItem, Object.assign({}, itemProps, {\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), suggestion.label);\n}\n\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n  index: PropTypes.number.isRequired,\n  itemProps: PropTypes.object.isRequired,\n  selectedItem: PropTypes.string.isRequired,\n  suggestion: PropTypes.shape({\n    label: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction getSuggestions(value, {\n  showEmpty = false\n} = {}) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0 && !showEmpty ? [] : suggestions.filter(suggestion => {\n    const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nfunction DownshiftMultiple(props) {\n  const classes = props.classes;\n\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        inputValue = _React$useState2[0],\n        setInputValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedItem = _React$useState4[0],\n        setSelectedItem = _React$useState4[1];\n\n  const handleKeyDown = event => {\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n      setSelectedItem(selectedItem.slice(0, selectedItem.length - 1));\n    }\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleChange = item => {\n    let newSelectedItem = [...selectedItem];\n\n    if (newSelectedItem.indexOf(item) === -1) {\n      newSelectedItem = [...newSelectedItem, item];\n    }\n\n    setInputValue('');\n    setSelectedItem(newSelectedItem);\n  };\n\n  const handleDelete = item => () => {\n    const newSelectedItem = [...selectedItem];\n    newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n    setSelectedItem(newSelectedItem);\n  };\n\n  return React.createElement(Downshift, {\n    id: \"downshift-multiple\",\n    inputValue: inputValue,\n    onChange: handleChange,\n    selectedItem: selectedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    getItemProps,\n    getLabelProps,\n    isOpen,\n    inputValue: inputValue2,\n    selectedItem: selectedItem2,\n    highlightedIndex\n  }) => {\n    const _getInputProps = getInputProps({\n      onKeyDown: handleKeyDown,\n      placeholder: 'Select multiple countries'\n    }),\n          onBlur = _getInputProps.onBlur,\n          onChange = _getInputProps.onChange,\n          onFocus = _getInputProps.onFocus,\n          inputProps = _objectWithoutProperties(_getInputProps, [\"onBlur\", \"onChange\", \"onFocus\"]);\n\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, renderInput({\n      fullWidth: true,\n      classes,\n      label: 'Countries',\n      InputLabelProps: getLabelProps(),\n      InputProps: {\n        startAdornment: selectedItem.map(item => React.createElement(Chip, {\n          key: item,\n          tabIndex: -1,\n          label: item,\n          className: classes.chip,\n          onDelete: handleDelete(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        })),\n        onBlur,\n        onChange: event => {\n          handleInputChange(event);\n          onChange(event);\n        },\n        onFocus\n      },\n      inputProps\n    }), isOpen ? React.createElement(Paper, {\n      className: classes.paper,\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, getSuggestions(inputValue2).map((suggestion, index) => renderSuggestion({\n      suggestion,\n      index,\n      itemProps: getItemProps({\n        item: suggestion.label\n      }),\n      highlightedIndex,\n      selectedItem: selectedItem2\n    }))) : null);\n  });\n}\n\nDownshiftMultiple.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: 250\n  },\n  container: {\n    flexGrow: 1,\n    position: 'relative'\n  },\n  paper: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25)\n  },\n  inputRoot: {\n    flexWrap: 'wrap'\n  },\n  inputInput: {\n    width: 'auto',\n    flexGrow: 1\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\nlet popperNode;\nexport default function IntegrationDownshift() {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(Downshift, {\n    id: \"downshift-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    getItemProps,\n    getLabelProps,\n    getMenuProps,\n    highlightedIndex,\n    inputValue,\n    isOpen,\n    selectedItem\n  }) => {\n    const _getInputProps2 = getInputProps({\n      placeholder: 'Search for a country (start with a)'\n    }),\n          onBlur = _getInputProps2.onBlur,\n          onFocus = _getInputProps2.onFocus,\n          inputProps = _objectWithoutProperties(_getInputProps2, [\"onBlur\", \"onFocus\"]);\n\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, renderInput({\n      fullWidth: true,\n      classes,\n      label: 'Country',\n      InputLabelProps: getLabelProps({\n        shrink: true\n      }),\n      InputProps: {\n        onBlur,\n        onFocus\n      },\n      inputProps\n    }), React.createElement(\"div\", Object.assign({}, getMenuProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), isOpen ? React.createElement(Paper, {\n      className: classes.paper,\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, getSuggestions(inputValue).map((suggestion, index) => renderSuggestion({\n      suggestion,\n      index,\n      itemProps: getItemProps({\n        item: suggestion.label\n      }),\n      highlightedIndex,\n      selectedItem\n    }))) : null));\n  }), React.createElement(\"div\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326\n    },\n    __self: this\n  }), React.createElement(DownshiftMultiple, {\n    classes: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }), React.createElement(Downshift, {\n    id: \"downshift-popper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    getItemProps,\n    getLabelProps,\n    getMenuProps,\n    highlightedIndex,\n    inputValue,\n    isOpen,\n    selectedItem\n  }) => {\n    const _getInputProps3 = getInputProps({\n      placeholder: 'With Popper'\n    }),\n          onBlur = _getInputProps3.onBlur,\n          onFocus = _getInputProps3.onFocus,\n          inputProps = _objectWithoutProperties(_getInputProps3, [\"onBlur\", \"onFocus\"]);\n\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, renderInput({\n      fullWidth: true,\n      classes,\n      label: 'Country',\n      InputProps: {\n        onBlur,\n        onFocus\n      },\n      InputLabelProps: getLabelProps({\n        shrink: true\n      }),\n      inputProps,\n      ref: node => {\n        popperNode = node;\n      }\n    }), React.createElement(Popper, {\n      open: isOpen,\n      anchorEl: popperNode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"div\", Object.assign({}, isOpen ? getMenuProps({}, {\n      suppressRefError: true\n    }) : {}, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      square: true,\n      style: {\n        marginTop: 8,\n        width: popperNode ? popperNode.clientWidth : undefined\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, getSuggestions(inputValue).map((suggestion, index) => renderSuggestion({\n      suggestion,\n      index,\n      itemProps: getItemProps({\n        item: suggestion.label\n      }),\n      highlightedIndex,\n      selectedItem\n    }))))));\n  }), React.createElement(\"div\", {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/SearchBar.js"],"names":["React","PropTypes","deburr","Downshift","makeStyles","TextField","Popper","Paper","MenuItem","Chip","suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","inputRef","root","inputRoot","input","inputInput","propTypes","object","isRequired","renderSuggestion","suggestionProps","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","indexOf","fontWeight","oneOfType","oneOf","number","string","shape","getSuggestions","value","showEmpty","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","DownshiftMultiple","props","useState","setInputValue","setSelectedItem","handleKeyDown","event","key","handleInputChange","target","handleChange","item","newSelectedItem","handleDelete","splice","getInputProps","getItemProps","getLabelProps","isOpen","inputValue2","selectedItem2","onKeyDown","placeholder","onBlur","onChange","onFocus","container","fullWidth","InputLabelProps","startAdornment","map","chip","paper","useStyles","theme","flexGrow","height","position","zIndex","marginTop","spacing","left","right","margin","flexWrap","width","divider","popperNode","IntegrationDownshift","getMenuProps","shrink","node","suppressRefError","clientWidth","undefined"],"mappings":"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","sourcesContent":["// import React from 'react';\r\n\r\n// class SearchBar extends React.Component{\r\n//     render(){\r\n//         return(\r\n//             <div className =\"searchBar\">\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Downshift from 'downshift';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\n\r\n\r\n\r\n\r\nconst suggestions = [\r\n  { label: 'Afghanistan' },\r\n  { label: 'Aland Islands' },\r\n  { label: 'Albania' },\r\n  { label: 'Algeria' },\r\n  { label: 'American Samoa' },\r\n  { label: 'Andorra' },\r\n  { label: 'Angola' },\r\n  { label: 'Anguilla' },\r\n  { label: 'Antarctica' },\r\n  { label: 'Antigua and Barbuda' },\r\n  { label: 'Argentina' },\r\n  { label: 'Armenia' },\r\n  { label: 'Aruba' },\r\n  { label: 'Australia' },\r\n  { label: 'Austria' },\r\n  { label: 'Azerbaijan' },\r\n  { label: 'Bahamas' },\r\n  { label: 'Bahrain' },\r\n  { label: 'Bangladesh' },\r\n  { label: 'Barbados' },\r\n  { label: 'Belarus' },\r\n  { label: 'Belgium' },\r\n  { label: 'Belize' },\r\n  { label: 'Benin' },\r\n  { label: 'Bermuda' },\r\n  { label: 'Bhutan' },\r\n  { label: 'Bolivia, Plurinational State of' },\r\n  { label: 'Bonaire, Sint Eustatius and Saba' },\r\n  { label: 'Bosnia and Herzegovina' },\r\n  { label: 'Botswana' },\r\n  { label: 'Bouvet Island' },\r\n  { label: 'Brazil' },\r\n  { label: 'British Indian Ocean Territory' },\r\n  { label: 'Brunei Darussalam' },\r\n];\r\n\r\nfunction renderInput(inputProps) {\r\n  const { InputProps, classes, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      InputProps={{\r\n        inputRef: ref,\r\n        classes: {\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        },\r\n        ...InputProps,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nrenderInput.propTypes = {\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object.isRequired,\r\n  InputProps: PropTypes.object,\r\n};\r\n\r\nfunction renderSuggestion(suggestionProps) {\r\n  const { suggestion, index, itemProps, highlightedIndex, selectedItem } = suggestionProps;\r\n  const isHighlighted = highlightedIndex === index;\r\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={suggestion.label}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: isSelected ? 500 : 400,\r\n      }}\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nrenderSuggestion.propTypes = {\r\n  highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  itemProps: PropTypes.object.isRequired,\r\n  selectedItem: PropTypes.string.isRequired,\r\n  suggestion: PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nfunction getSuggestions(value, { showEmpty = false } = {}) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0 && !showEmpty\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction DownshiftMultiple(props) {\r\n  const { classes } = props;\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [selectedItem, setSelectedItem] = React.useState([]);\r\n\r\n  const handleKeyDown = event => {\r\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\r\n      setSelectedItem(selectedItem.slice(0, selectedItem.length - 1));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleChange = item => {\r\n    let newSelectedItem = [...selectedItem];\r\n    if (newSelectedItem.indexOf(item) === -1) {\r\n      newSelectedItem = [...newSelectedItem, item];\r\n    }\r\n    setInputValue('');\r\n    setSelectedItem(newSelectedItem);\r\n  };\r\n\r\n  const handleDelete = item => () => {\r\n    const newSelectedItem = [...selectedItem];\r\n    newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\r\n    setSelectedItem(newSelectedItem);\r\n  };\r\n\r\n  return (\r\n    <Downshift\r\n      id=\"downshift-multiple\"\r\n      inputValue={inputValue}\r\n      onChange={handleChange}\r\n      selectedItem={selectedItem}\r\n    >\r\n      {({\r\n        getInputProps,\r\n        getItemProps,\r\n        getLabelProps,\r\n        isOpen,\r\n        inputValue: inputValue2,\r\n        selectedItem: selectedItem2,\r\n        highlightedIndex,\r\n      }) => {\r\n        const { onBlur, onChange, onFocus, ...inputProps } = getInputProps({\r\n          onKeyDown: handleKeyDown,\r\n          placeholder: 'Select multiple countries',\r\n        });\r\n\r\n        return (\r\n          <div className={classes.container}>\r\n            {renderInput({\r\n              fullWidth: true,\r\n              classes,\r\n              label: 'Countries',\r\n              InputLabelProps: getLabelProps(),\r\n              InputProps: {\r\n                startAdornment: selectedItem.map(item => (\r\n                  <Chip\r\n                    key={item}\r\n                    tabIndex={-1}\r\n                    label={item}\r\n                    className={classes.chip}\r\n                    onDelete={handleDelete(item)}\r\n                  />\r\n                )),\r\n                onBlur,\r\n                onChange: event => {\r\n                  handleInputChange(event);\r\n                  onChange(event);\r\n                },\r\n                onFocus,\r\n              },\r\n              inputProps,\r\n            })}\r\n\r\n            {isOpen ? (\r\n              <Paper className={classes.paper} square>\r\n                {getSuggestions(inputValue2).map((suggestion, index) =>\r\n                  renderSuggestion({\r\n                    suggestion,\r\n                    index,\r\n                    itemProps: getItemProps({ item: suggestion.label }),\r\n                    highlightedIndex,\r\n                    selectedItem: selectedItem2,\r\n                  }),\r\n                )}\r\n              </Paper>\r\n            ) : null}\r\n          </div>\r\n        );\r\n      }}\r\n    </Downshift>\r\n  );\r\n}\r\n\r\nDownshiftMultiple.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height: 250,\r\n  },\r\n  container: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  inputRoot: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  inputInput: {\r\n    width: 'auto',\r\n    flexGrow: 1,\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nlet popperNode;\r\n\r\nexport default function IntegrationDownshift() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Downshift id=\"downshift-simple\">\r\n        {({\r\n          getInputProps,\r\n          getItemProps,\r\n          getLabelProps,\r\n          getMenuProps,\r\n          highlightedIndex,\r\n          inputValue,\r\n          isOpen,\r\n          selectedItem,\r\n        }) => {\r\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\r\n            placeholder: 'Search for a country (start with a)',\r\n          });\r\n\r\n          return (\r\n            <div className={classes.container}>\r\n              {renderInput({\r\n                fullWidth: true,\r\n                classes,\r\n                label: 'Country',\r\n                InputLabelProps: getLabelProps({ shrink: true }),\r\n                InputProps: { onBlur, onFocus },\r\n                inputProps,\r\n              })}\r\n\r\n              <div {...getMenuProps()}>\r\n                {isOpen ? (\r\n                  <Paper className={classes.paper} square>\r\n                    {getSuggestions(inputValue).map((suggestion, index) =>\r\n                      renderSuggestion({\r\n                        suggestion,\r\n                        index,\r\n                        itemProps: getItemProps({ item: suggestion.label }),\r\n                        highlightedIndex,\r\n                        selectedItem,\r\n                      }),\r\n                    )}\r\n                  </Paper>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Downshift>\r\n      <div className={classes.divider} />\r\n      <DownshiftMultiple classes={classes} />\r\n      <div className={classes.divider} />\r\n      <Downshift id=\"downshift-popper\">\r\n        {({\r\n          getInputProps,\r\n          getItemProps,\r\n          getLabelProps,\r\n          getMenuProps,\r\n          highlightedIndex,\r\n          inputValue,\r\n          isOpen,\r\n          selectedItem,\r\n        }) => {\r\n          const { onBlur, onFocus, ...inputProps } = getInputProps({\r\n            placeholder: 'With Popper',\r\n          });\r\n\r\n          return (\r\n            <div className={classes.container}>\r\n              {renderInput({\r\n                fullWidth: true,\r\n                classes,\r\n                label: 'Country',\r\n                InputProps: { onBlur, onFocus },\r\n                InputLabelProps: getLabelProps({ shrink: true }),\r\n                inputProps,\r\n                ref: node => {\r\n                  popperNode = node;\r\n                },\r\n              })}\r\n\r\n              <Popper open={isOpen} anchorEl={popperNode}>\r\n                <div {...(isOpen ? getMenuProps({}, { suppressRefError: true }) : {})}>\r\n                  <Paper\r\n                    square\r\n                    style={{ marginTop: 8, width: popperNode ? popperNode.clientWidth : undefined }}\r\n                  >\r\n                    {getSuggestions(inputValue).map((suggestion, index) =>\r\n                      renderSuggestion({\r\n                        suggestion,\r\n                        index,\r\n                        itemProps: getItemProps({ item: suggestion.label }),\r\n                        highlightedIndex,\r\n                        selectedItem,\r\n                      }),\r\n                    )}\r\n                  </Paper>\r\n                </div>\r\n              </Popper>\r\n            </div>\r\n          );\r\n        }}\r\n      </Downshift>\r\n      <div className={classes.divider} />\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}