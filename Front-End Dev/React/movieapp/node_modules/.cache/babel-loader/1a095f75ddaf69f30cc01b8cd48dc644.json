{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Slider.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Carousel, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass RecommendMovies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n      apikeyOMDB: '9e790f8b',\n      movie_arr: [],\n      recommended_movie: '',\n      redirect: false,\n      selected_movie: '',\n      top_rated_movies: [],\n      current_omdb_details: '',\n      toptreshhold: 6\n    }; // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const carouselitem = {\n      width: \"100%\",\n      height: 600,\n      backgroundColor: \"rgb(249, 249, 249)\"\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"100%\",\n      // textAlign: 'center',\n      paddingTop: \"30px\"\n    };\n    const font = {\n      color: \"black\",\n      paddingTop: \"20px\"\n    };\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        movie_arr: resp.movies\n      }, () => {\n        this.getTop5Movies();\n      });\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  getTop5Movies() {\n    var movie_arr = this.state.movie_arr;\n    var toptreshhold = 6;\n    var result = new Array();\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movie = movie_arr[i];\n      console.lof(top_rated_movies.length);\n\n      if (this.state.top_rated_movies.length > 5) {\n        break;\n      }\n\n      this.getIMDBId(movie);\n    }\n\n    this.setState({\n      top_rated_movies: result\n    });\n    console.log(result);\n  }\n\n  getIMDBId(movie) {\n    var movie_omdb_details = 'hey';\n    var movie_id = movie.id;\n    var xhr = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    var that = this;\n    var top_rated_movies = this.state.top_rated_movies;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      var imdb_id = resp.movie.imdb_id; // console.log(imdb_id)\n\n      var xhr2 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n      xhr2.addEventListener('load', () => {\n        var resp = JSON.parse(xhr2.responseText); ////restart here\n        // console.log(resp)\n\n        movie_omdb_details = resp; // console.log(movie_omdb_details)\n        // return movie_omdb_details;\n\n        if (movie_omdb_details.imdbRating) {\n          if (movie_omdb_details.imdbRating >= this.state.toptreshhold) {\n            top_rated_movies.push(movie);\n          }\n        }\n\n        this.setState({\n          top_rated_movies: top_rated_movies\n        });\n      });\n      xhr2.open('GET', urlMovieDetails);\n      xhr2.send();\n    });\n    xhr.open('GET', urlmoviedetails);\n    xhr.send(); // return movie_omdb_details;\n  }\n\n}\n\nexport default RecommendMovies;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js"],"names":["React","ReactDOM","Navbar","Carousel","Button","Link","RecommendMovies","Component","constructor","props","state","apikeyIS","apikeyOMDB","movie_arr","recommended_movie","redirect","selected_movie","top_rated_movies","current_omdb_details","toptreshhold","componentDidMount","getData","render","carouselitem","width","height","backgroundColor","centralize","margin","paddingTop","font","color","console","log","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","setState","movies","getTop5Movies","open","send","result","Array","i","length","movie","lof","getIMDBId","movie_omdb_details","movie_id","id","urlmoviedetails","that","imdb_id","xhr2","urlMovieDetails","imdbRating","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Slider.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Carousel, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass RecommendMovies extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n            apikeyOMDB: '9e790f8b',\n            movie_arr: [],\n            recommended_movie: '',\n            redirect: false,\n            selected_movie: '',\n            top_rated_movies: [],\n            current_omdb_details: '',\n            toptreshhold: 6,\n        };\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(){\n        this.getData()\n    }\n\n    render() {\n\n        const carouselitem = {\n            width: \"100%\",\n            height: 600,\n            backgroundColor: \"rgb(249, 249, 249)\",\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"100%\",\n            // textAlign: 'center',\n            paddingTop: \"30px\"\n        };\n\n        const font = {\n            color: \"black\",\n            paddingTop: \"20px\",\n        }\n        \n        console.log(this.state);\n        return (\n            <div></div>\n\n        )\n\n    }\n\n    getData(){\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                movie_arr: resp.movies,\n            }, ()=>{\n                this.getTop5Movies();\n            });\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n    }\n\n    getTop5Movies(){\n        var movie_arr = this.state.movie_arr;\n        var toptreshhold = 6;\n        var result = new Array();\n\n        for(let i = 0; i < movie_arr.length; i++){\n            var movie = movie_arr[i];\n            console.lof(top_rated_movies.length)\n            if(this.state.top_rated_movies.length >5){\n                break;\n            }\n            this.getIMDBId(movie);\n            \n        }\n\n        this.setState({\n            top_rated_movies: result,\n        })\n\n        console.log(result)\n\n    }\n\n\n    getIMDBId(movie) {\n        var movie_omdb_details = 'hey';\n        var movie_id = movie.id;\n        var xhr = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n        var that = this;\n        var top_rated_movies = this.state.top_rated_movies;\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            var imdb_id = resp.movie.imdb_id\n            // console.log(imdb_id)\n\n            var xhr2 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n            xhr2.addEventListener('load', () => {\n                var resp = JSON.parse(xhr2.responseText);\n                ////restart here\n                // console.log(resp)\n                movie_omdb_details = resp;\n                // console.log(movie_omdb_details)\n                // return movie_omdb_details;\n                if(movie_omdb_details.imdbRating){\n                    if(movie_omdb_details.imdbRating >= this.state.toptreshhold){\n                        top_rated_movies.push(movie);\n                    }\n                }\n\n                this.setState({\n                    top_rated_movies: top_rated_movies,\n                })\n\n            })\n            xhr2.open('GET', urlMovieDetails)\n            xhr2.send()\n\n        })\n        xhr.open('GET', urlmoviedetails)\n        xhr.send()\n\n        // return movie_omdb_details;\n    }\n\n}\n\nexport default RecommendMovies;"]},"metadata":{},"sourceType":"module"}