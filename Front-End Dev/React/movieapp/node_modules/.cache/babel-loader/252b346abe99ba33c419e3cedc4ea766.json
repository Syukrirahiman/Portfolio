{"ast":null,"code":"import _defineProperty from \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/SearchBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport { BrowserRouter as Router, Route, Switch, HashRouter, withRouter, Link } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport ReactDOM from 'react-dom';\nconst suggestions = [];\nconst movieList = [];\nconst apikey = \"7UiR6NYdJicQiXms2GOxJSqBddHXuivw\";\n\nfunction setMovieArr(input) {\n  var result_id = '';\n  movieList.length = 0;\n\n  for (let i = 0; i < suggestions.length; i++) {\n    var cinema = suggestions[i];\n\n    if (cinema.label.toLowerCase() == input.toLowerCase()) {\n      result_id = cinema.id;\n    }\n  }\n\n  if (result_id != '') {\n    var xhr = new XMLHttpRequest();\n    let url = \"https://api.internationalshowtimes.com/v4/movies/?cinema_id=\" + result_id + \"&apikey=\" + apikey;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n\n      for (let i = 0; i < resp.movies.length; i++) {\n        var movie = resp.movies[i];\n        movieList.push(movie);\n      }\n\n      console.log(movieList); // var acinema = resp.cinemas[0];\n      // console.log(acinema.name);\n    });\n    xhr.open('GET', url);\n    xhr.send();\n  }\n}\n\nfunction checkDisable() {\n  if (movieList.length <= 0) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction constructCinemasSuggestions() {\n  var xhr = new XMLHttpRequest();\n  let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + apikey;\n  xhr.addEventListener('load', () => {\n    // update the state of the component with the result here\n    var resp = JSON.parse(xhr.responseText); //   this.setState({ results: resp.cinemas[0].location });\n\n    var cinemasArr = [];\n    suggestions.length = 0;\n\n    for (let i = 0; i < resp.cinemas.length; i++) {\n      var cinema = resp.cinemas[i];\n      suggestions.push({\n        label: cinema.name,\n        id: cinema.id,\n        city_id: cinema.city_id\n      });\n    }\n\n    console.log(suggestions); // var acinema = resp.cinemas[0];\n    // console.log(acinema.name);\n  });\n  xhr.open('GET', url);\n  xhr.send();\n}\n\nfunction renderInputComponent(inputProps) {\n  const classes = inputProps.classes,\n        _inputProps$inputRef = inputProps.inputRef,\n        inputRef = _inputProps$inputRef === void 0 ? () => {} : _inputProps$inputRef,\n        ref = inputProps.ref,\n        other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    name: \"cinema\" // value = {cinema}\n    // onInput={e=>setCinema(e.target.value)}\n    //   fullWidth\n    // style = {{width:1000}}\n    ,\n    InputProps: {\n      inputRef: node => {\n        ref(node);\n        inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(suggestion, {\n  query,\n  isHighlighted\n}) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n  return React.createElement(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, parts.map(part => React.createElement(\"span\", {\n    key: part.text,\n    style: {\n      fontWeight: part.highlight ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, part.text))));\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(suggestion => {\n    const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 100,\n    flexGrow: 1,\n    display: 'flex',\n    flexWrap: 'wrap',\n    // flexFlow: \"row wrap\",\n    // paddingLeft: 400,\n    paddingTop: 10,\n    marginBottom: 10 // background: \"yellow\",\n    // opacity: 0.2,\n    // marginLeft: auto,\n    // marginRight: auto,\n    // width: 800,\n\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    width: 250\n  },\n  container: {\n    position: 'relative'\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n    width: 250\n  },\n  suggestion: {\n    display: 'block',\n    cursor: 'pointer' // padding: '10px 20px',\n    // width:200,\n\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none' // width: 500,\n\n  },\n  divider: {\n    height: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    width: 250\n  }\n}));\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles(); // const [anchorEl, setAnchorEl] = React.useState(null);\n  //   const [values, setValues] = React.useState({\n  //     age: '',\n  //     name: 'hai',\n  //   });\n\n  const _React$useState = React.useState({\n    single: '',\n    popper: '',\n    redirect: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const _React$useState3 = React.useState({\n    movie: ''\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        values = _React$useState4[0],\n        setValues = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        stateSuggestions = _React$useState6[0],\n        setSuggestions = _React$useState6[1];\n\n  const handleSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, {\n    newValue\n  }) => {\n    setState(_objectSpread({}, state, {\n      [name]: newValue\n    })); // console.log(newValue);\n\n    setMovieArr(newValue); // setCityId(newValue);\n  };\n\n  const handleSelectChange = event => {\n    setValues(oldValues => _objectSpread({}, oldValues, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"cinema name: \", state.single, \"movie: \", values.movie);\n    setState(_objectSpread({}, state, {\n      ['redirect']: true\n    })); // this.history.pushState('/showtimes')\n    // console.dir(formData);\n\n    console.log(state.redirect); // router.history.push(\"/Dashboard\") \n  }; // ReactDOM.render(<Route path=\"/login\"  />);\n\n\n  if (state.redirect) {\n    return React.createElement(Redirect, {\n      push: true,\n      from: \"/\",\n      to: {\n        pathname: '/showtimes',\n        state: {\n          cinema: state.single,\n          movie_id: values.movie\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }) // history.push('/showtimes')\n    // state.props.history.push('/path')\n    ;\n  }\n\n  return (// <div >\n    //     {constructCinemasSuggestions()}\n    React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, constructCinemasSuggestions(), React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.root,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n      inputProps: {\n        //   style: {display : 'inline'},\n        classes,\n        id: 'react-autosuggest-simple',\n        label: 'Cinema',\n        placeholder: 'Search a cinema',\n        value: state.single,\n        onChange: handleChange('single')\n      },\n      theme: {\n        container: classes.container,\n        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n        suggestionsList: classes.suggestionsList,\n        suggestion: classes.suggestion\n      } // style = {{display: 'inline'}}\n      ,\n      renderSuggestionsContainer: options => React.createElement(Paper, Object.assign({}, options.containerProps, {\n        square: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), options.children),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }))), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: values.movie,\n      onChange: handleSelectChange,\n      name: \"movie\",\n      displayEmpty: true,\n      className: classes.selectEmpty,\n      label: \"Movie\",\n      disabled: checkDisable() ? true : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Select Movie\"), movieList.map((movie, index) => React.createElement(MenuItem, {\n      key: index,\n      value: movie.id,\n      name: \"movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \" \", movie.title)))), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      className: classes.button,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Show Showtimes\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-outline-danger\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Show Showtimes\"))))) // </div>\n\n  );\n}","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/SearchBar.js"],"names":["React","deburr","Autosuggest","match","parse","TextField","Paper","MenuItem","makeStyles","Button","Grid","InputLabel","FormHelperText","FormControl","Select","axios","Redirect","BrowserRouter","Router","Route","Switch","HashRouter","withRouter","Link","observer","ReactDOM","suggestions","movieList","apikey","setMovieArr","input","result_id","length","i","cinema","label","toLowerCase","id","xhr","XMLHttpRequest","url","addEventListener","resp","JSON","responseText","movies","movie","push","console","log","open","send","checkDisable","constructCinemasSuggestions","cinemasArr","cinemas","name","city_id","renderInputComponent","inputProps","classes","inputRef","ref","other","node","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","text","fontWeight","highlight","getSuggestions","value","inputValue","trim","inputLength","count","filter","keep","slice","getSuggestionValue","useStyles","theme","root","height","flexGrow","display","flexWrap","paddingTop","marginBottom","formControl","margin","spacing","minWidth","selectEmpty","marginTop","width","container","position","suggestionsContainerOpen","zIndex","left","right","cursor","suggestionsList","padding","listStyleType","divider","button","IntegrationAutosuggest","useState","single","popper","redirect","state","setState","values","setValues","stateSuggestions","setSuggestions","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","event","newValue","handleSelectChange","oldValues","target","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","handleSubmit","preventDefault","pathname","movie_id","placeholder","onChange","options","containerProps","children","index","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nimport { BrowserRouter as Router, Route, Switch, HashRouter, withRouter, Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\n\r\n\r\nconst suggestions = [];\r\nconst movieList = [];\r\nconst apikey = \"7UiR6NYdJicQiXms2GOxJSqBddHXuivw\";\r\n\r\nfunction setMovieArr(input) {\r\n    var result_id = '';\r\n    movieList.length = 0;\r\n    for (let i = 0; i < suggestions.length; i++) {\r\n        var cinema = suggestions[i];\r\n        if (cinema.label.toLowerCase() == input.toLowerCase()) {\r\n            result_id = cinema.id;\r\n        }\r\n    }\r\n\r\n    if (result_id != '') {\r\n\r\n        var xhr = new XMLHttpRequest()\r\n        let url = \"https://api.internationalshowtimes.com/v4/movies/?cinema_id=\" + result_id + \"&apikey=\" + apikey;\r\n        xhr.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var resp = JSON.parse(xhr.responseText);\r\n\r\n\r\n            for (let i = 0; i < resp.movies.length; i++) {\r\n                var movie = resp.movies[i];\r\n                movieList.push(movie);\r\n            }\r\n            console.log(movieList);\r\n            // var acinema = resp.cinemas[0];\r\n            // console.log(acinema.name);\r\n\r\n        })\r\n        xhr.open('GET', url)\r\n        xhr.send()\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction checkDisable(){\r\n    if(movieList.length <= 0){\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\n\r\nfunction constructCinemasSuggestions() {\r\n    var xhr = new XMLHttpRequest()\r\n    let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + apikey;\r\n    xhr.addEventListener('load', () => {\r\n        // update the state of the component with the result here\r\n        var resp = JSON.parse(xhr.responseText);\r\n        //   this.setState({ results: resp.cinemas[0].location });\r\n        var cinemasArr = [];\r\n        suggestions.length = 0;\r\n        for (let i = 0; i < resp.cinemas.length; i++) {\r\n            var cinema = resp.cinemas[i];\r\n            suggestions.push({\r\n                label: cinema.name,\r\n                id: cinema.id,\r\n                city_id: cinema.city_id,\r\n            });\r\n        }\r\n        console.log(suggestions);\r\n        // var acinema = resp.cinemas[0];\r\n        // console.log(acinema.name);\r\n\r\n    })\r\n    xhr.open('GET', url)\r\n    xhr.send()\r\n\r\n}\r\n\r\nfunction renderInputComponent(inputProps) {\r\n    const { classes, inputRef = () => { }, ref, ...other } = inputProps;\r\n\r\n    return (\r\n        <TextField\r\n            name=\"cinema\"\r\n            // value = {cinema}\r\n            // onInput={e=>setCinema(e.target.value)}\r\n            //   fullWidth\r\n            // style = {{width:1000}}\r\n            InputProps={{\r\n                inputRef: node => {\r\n                    ref(node);\r\n                    inputRef(node);\r\n                },\r\n                classes: {\r\n                    input: classes.input,\r\n                },\r\n            }}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n    const matches = match(suggestion.label, query);\r\n    const parts = parse(suggestion.label, matches);\r\n\r\n    return (\r\n        <MenuItem selected={isHighlighted} component=\"div\">\r\n            <div>\r\n                {parts.map(part => (\r\n                    <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\r\n                        {part.text}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\n\r\n\r\nfunction getSuggestions(value) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0\r\n        ? []\r\n        : suggestions.filter(suggestion => {\r\n            const keep =\r\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n\r\n            return keep;\r\n        });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n    return suggestion.label;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: 100,\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        // flexFlow: \"row wrap\",\r\n        // paddingLeft: 400,\r\n        paddingTop: 10,\r\n        marginBottom: 10,\r\n        // background: \"yellow\",\r\n        // opacity: 0.2,\r\n        // marginLeft: auto,\r\n        // marginRight: auto,\r\n        // width: 800,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n        width: 250,\r\n    },\r\n    container: {\r\n        position: 'relative',\r\n    },\r\n    suggestionsContainerOpen: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(1),\r\n        left: 0,\r\n        right: 0,\r\n        width: 250,\r\n    },\r\n    suggestion: {\r\n        display: 'block',\r\n        cursor: 'pointer',\r\n        // padding: '10px 20px',\r\n        // width:200,\r\n    },\r\n    suggestionsList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        listStyleType: 'none',\r\n        // width: 500,\r\n    },\r\n    divider: {\r\n        height: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input: {\r\n        width: 250,\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function IntegrationAutosuggest() {\r\n\r\n\r\n    const classes = useStyles();\r\n    // const [anchorEl, setAnchorEl] = React.useState(null);\r\n    //   const [values, setValues] = React.useState({\r\n    //     age: '',\r\n    //     name: 'hai',\r\n    //   });\r\n\r\n    const [state, setState] = React.useState({\r\n        single: '',\r\n        popper: '',\r\n        redirect: false,\r\n    });\r\n\r\n    const [values, setValues] = React.useState({\r\n        movie: '',\r\n    });\r\n\r\n\r\n    const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n\r\n\r\n    const handleSuggestionsFetchRequested = ({ value }) => {\r\n        setSuggestions(getSuggestions(value));\r\n    };\r\n\r\n\r\n    const handleSuggestionsClearRequested = () => {\r\n        setSuggestions([]);\r\n    };\r\n\r\n    const handleChange = name => (event, { newValue }) => {\r\n        setState({\r\n            ...state,\r\n            [name]: newValue,\r\n        });\r\n        // console.log(newValue);\r\n        setMovieArr(newValue);\r\n        // setCityId(newValue);\r\n    };\r\n\r\n    const handleSelectChange = event => {\r\n\r\n        setValues(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n\r\n    const autosuggestProps = {\r\n        renderInputComponent,\r\n        suggestions: stateSuggestions,\r\n        onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n        onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n        getSuggestionValue,\r\n        renderSuggestion,\r\n    };\r\n\r\n\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(\"cinema name: \", state.single, \"movie: \", values.movie);\r\n  \r\n        setState({\r\n            ...state,\r\n            ['redirect']: true,\r\n        });\r\n\r\n        // this.history.pushState('/showtimes')\r\n        // console.dir(formData);\r\n        console.log(state.redirect);\r\n        // router.history.push(\"/Dashboard\") \r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    // ReactDOM.render(<Route path=\"/login\"  />);\r\n    if (state.redirect) {\r\n        return (\r\n\r\n            <Redirect push from='/' to={{\r\n                pathname: '/showtimes',\r\n                state: {\r\n                    cinema: state.single,\r\n                    movie_id: values.movie,\r\n                }\r\n            }} />\r\n\r\n            // history.push('/showtimes')\r\n\r\n\r\n            // state.props.history.push('/path')\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        // <div >\r\n        //     {constructCinemasSuggestions()}\r\n\r\n        <Grid container justify=\"center\">\r\n            {constructCinemasSuggestions()}\r\n\r\n            <Grid>\r\n            <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                <FormControl className={classes.formControl} >\r\n                    <Autosuggest\r\n\r\n                        {...autosuggestProps}\r\n                        inputProps={{\r\n                            //   style: {display : 'inline'},\r\n                            classes,\r\n                            id: 'react-autosuggest-simple',\r\n                            label: 'Cinema',\r\n                            placeholder: 'Search a cinema',\r\n                            value: state.single,\r\n                            onChange: handleChange('single'),\r\n                        }}\r\n                        theme={{\r\n                            container: classes.container,\r\n                            suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n                            suggestionsList: classes.suggestionsList,\r\n                            suggestion: classes.suggestion,\r\n                        }}\r\n                        // style = {{display: 'inline'}}\r\n                        renderSuggestionsContainer={options => (\r\n                            <Paper {...options.containerProps} square>\r\n                                {options.children}\r\n                            </Paper>\r\n                        )}\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                    <Select\r\n                        value={values.movie}\r\n                        onChange={handleSelectChange}\r\n                        name=\"movie\"\r\n                        displayEmpty\r\n                        className={classes.selectEmpty}\r\n                        label='Movie'\r\n                        disabled={checkDisable() ? true : null}\r\n                    >\r\n                        <MenuItem value=\"\" disabled>\r\n                            Select Movie\r\n                        </MenuItem>\r\n                        {movieList.map((movie, index) =>\r\n                            <MenuItem key={index} value={movie.id} name=\"movie\" > {movie.title}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n\r\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.button} type=\"submit\">\r\n                        Show Showtimes\r\n                </Button>\r\n\r\n                <button type=\"button\" className=\"btn btn-outline-danger\" type=\"submit\">Show Showtimes</button>\r\n                </FormControl>\r\n\r\n            </form>\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n        // </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n}"]},"metadata":{},"sourceType":"module"}