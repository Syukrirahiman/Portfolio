{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js\";\nimport React from 'react';\nimport './Slider.css';\nimport { Jumbotron, Col, Row, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass RecommendMovies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n      apikeyOMDB: '9e790f8b',\n      movie_arr: [],\n      redirect: false,\n      selected_movie: '',\n      top_rated_movies: [],\n      current_omdb_details: '',\n      toptreshhold: 6,\n      clickMovie: '',\n      redirectReview: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleClick(movie) {\n    console.log(movie);\n    var movieIS = this.getISDetails(movie.Title);\n\n    if (movieIS != null) {\n      this.setState({\n        clickMovie: movieIS,\n        redirectReview: true\n      });\n    }\n  }\n\n  getISDetails(title) {\n    var movie_arr = this.state.movie_arr;\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movieIS = movie_arr[i];\n      console.log(movieIS);\n\n      if (movieIS.title != null) {\n        if (movieIS.title.toLowerCase() == title.toLowerCase()) {\n          return movieIS;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  render() {\n    const carouselitem = {\n      width: \"100%\",\n      height: 600,\n      backgroundColor: \"rgb(249, 249, 249)\"\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"100%\",\n      textAlign: 'center' // paddingTop: \"20px\"\n\n    };\n    const font = {\n      color: \"black\",\n      paddingTop: \"20px\"\n    };\n    const image = {\n      // width: 50,\n      height: 350\n    };\n    console.log(this.state);\n\n    if (this.state.redirectReview) {\n      return React.createElement(Redirect, {\n        push: true,\n        from: \"/\",\n        to: {\n          pathname: '/reviews',\n          state: {\n            selected_movie: this.state.clickMovie\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.movie_arr.length > 0 && this.state.top_rated_movies.length > 5) {\n      console.log(this.state.top_rated_movies.length);\n      var topRatedArr = this.state.top_rated_movies;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: centralize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Top Rated Movies\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[0].Poster,\n        style: image,\n        onClick: () => this.handleClick(topRatedArr[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[0]),\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, topRatedArr[0].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[1]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[1].Poster,\n        style: image,\n        onClick: () => this.handleClick(topRatedArr[1]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[1]),\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, topRatedArr[1].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[2]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[2].Poster,\n        style: image,\n        onClick: () => this.handleClick(topRatedArr[2]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[2]),\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, topRatedArr[2].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[3]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[3].Poster,\n        style: image,\n        onClick: () => this.handleClick(topRatedArr[3]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[3]),\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, topRatedArr[3].Title))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[4]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[4].Poster,\n        style: image,\n        onClick: () => this.handleClick(topRatedArr[4]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      })), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: () => this.handleClick(topRatedArr[4]),\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, topRatedArr[4].Title)))))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    });\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n\n      if (resp.movies) {\n        this.setState({\n          movie_arr: resp.movies\n        }, () => {\n          this.getTopRatedMovies();\n        });\n      }\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  getTopRatedMovies() {\n    var movie_arr = this.state.movie_arr;\n    var count = 0;\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movie = movie_arr[i];\n      console.log(this.checkIfHighlyRatedByIMDB(movie)); // if(this.checkIfHighlyRatedByIMDB(movie)){\n      //     count +=1;\n      //     console.log(\"hey\")\n      // }\n      // if(count>5){\n      //     console.log(count);\n      //     break;\n      // }\n    } // this.setState({\n    //     top_rated_movies: result,\n    // })\n    // console.log(result)\n\n  }\n\n  checkIfHighlyRatedByIMDB(movie) {\n    var movie_omdb_details = 'hey';\n    var movie_id = movie.id;\n    var xhr = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    var that = this;\n    var top_rated_movies = this.state.top_rated_movies;\n    var top = false;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      var imdb_id = resp.movie.imdb_id; // console.log(imdb_id)\n\n      var xhr2 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\";\n      xhr2.addEventListener('load', () => {\n        var resp = JSON.parse(xhr2.responseText);\n        movie_omdb_details = resp; // console.log(movie_omdb_details)\n        // return movie_omdb_details;\n\n        if (movie_omdb_details.imdbRating) {\n          if (movie_omdb_details.imdbRating >= this.state.toptreshhold) {\n            top_rated_movies.push(movie_omdb_details);\n            this.setState({\n              top_rated_movies: top_rated_movies\n            });\n          }\n        }\n      });\n      xhr2.open('GET', urlMovieDetails);\n      xhr2.send();\n    });\n    xhr.open('GET', urlmoviedetails);\n    xhr.send(); // return movie_omdb_details;\n\n    return top;\n  }\n\n}\n\nexport default RecommendMovies;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js"],"names":["React","Jumbotron","Col","Row","Container","Redirect","Link","MDBCardImage","RecommendMovies","Component","constructor","props","state","apikeyIS","apikeyOMDB","movie_arr","redirect","selected_movie","top_rated_movies","current_omdb_details","toptreshhold","clickMovie","redirectReview","handleClick","bind","componentDidMount","getData","movie","console","log","movieIS","getISDetails","Title","setState","title","i","length","toLowerCase","render","carouselitem","width","height","backgroundColor","centralize","margin","textAlign","font","color","paddingTop","image","pathname","topRatedArr","Poster","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","movies","getTopRatedMovies","open","send","count","checkIfHighlyRatedByIMDB","movie_omdb_details","movie_id","id","urlmoviedetails","that","top","imdb_id","xhr2","urlMovieDetails","imdbRating","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,SAA9B,QAA+C,iBAA/C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,UAA7B;;AAEA,MAAMC,eAAN,SAA8BR,KAAK,CAACS,SAApC,CAA8C;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,kCADD;AAETC,MAAAA,UAAU,EAAE,UAFH;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,QAAQ,EAAE,KAJD;AAKTC,MAAAA,cAAc,EAAE,EALP;AAMTC,MAAAA,gBAAgB,EAAE,EANT;AAOTC,MAAAA,oBAAoB,EAAE,EAPb;AAQTC,MAAAA,YAAY,EAAE,CARL;AASTC,MAAAA,UAAU,EAAE,EATH;AAUTC,MAAAA,cAAc,EAAE;AAVP,KAAb;AAYA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL;AACH;;AAEDH,EAAAA,WAAW,CAACI,KAAD,EAAQ;AAEfC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAIG,OAAO,GAAG,KAAKC,YAAL,CAAkBJ,KAAK,CAACK,KAAxB,CAAd;;AAEA,QAAIF,OAAO,IAAI,IAAf,EAAqB;AACjB,WAAKG,QAAL,CAAc;AACVZ,QAAAA,UAAU,EAAES,OADF;AAEVR,QAAAA,cAAc,EAAE;AAFN,OAAd;AAIH;AAEJ;;AAEDS,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,QAAInB,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAA3B;;AAEA,SAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,SAAS,CAACqB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIL,OAAO,GAAGf,SAAS,CAACoB,CAAD,CAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;;AACA,UAAIA,OAAO,CAACI,KAAR,IAAiB,IAArB,EAA2B;AACvB,YAAIJ,OAAO,CAACI,KAAR,CAAcG,WAAd,MAA+BH,KAAK,CAACG,WAAN,EAAnC,EAAwD;AACpD,iBAAOP,OAAP;AACH;AACJ;AAEJ;;AAED,WAAO,IAAP;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AAEL,UAAMC,YAAY,GAAG;AACjBC,MAAAA,KAAK,EAAE,MADU;AAEjBC,MAAAA,MAAM,EAAE,GAFS;AAGjBC,MAAAA,eAAe,EAAE;AAHA,KAArB;AAMA,UAAMC,UAAU,GAAG;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfJ,MAAAA,KAAK,EAAE,MAFQ;AAGfK,MAAAA,SAAS,EAAE,QAHI,CAIf;;AAJe,KAAnB;AAOA,UAAMC,IAAI,GAAG;AACTC,MAAAA,KAAK,EAAE,OADE;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAKA,UAAMC,KAAK,GAAG;AACV;AACAR,MAAAA,MAAM,EAAE;AAFE,KAAd;AAKAb,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAjB;;AACA,QAAI,KAAKA,KAAL,CAAWU,cAAf,EAA+B;AAC3B,aACI,oBAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,IAAI,EAAC,GAApB;AAAwB,QAAA,EAAE,EAAE;AACxB4B,UAAAA,QAAQ,EAAE,UADc;AAExBtC,UAAAA,KAAK,EAAE;AACHK,YAAAA,cAAc,EAAE,KAAKL,KAAL,CAAWS;AADxB;AAFiB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AASH;;AAED,QAAI,KAAKT,KAAL,CAAWG,SAAX,CAAqBqB,MAArB,GAA8B,CAA9B,IAAmC,KAAKxB,KAAL,CAAWM,gBAAX,CAA4BkB,MAA5B,GAAqC,CAA5E,EAA+E;AAC3ER,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWM,gBAAX,CAA4BkB,MAAxC;AACA,UAAIe,WAAW,GAAG,KAAKvC,KAAL,CAAWM,gBAA7B;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEyB,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAKpB,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,YAAD;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,GAAG,EAAEA,WAAW,CAAC,CAAD,CAAX,CAAeC,MAFxB;AAGI,QAAA,KAAK,EAAEH,KAHX;AAII,QAAA,OAAO,EAAE,MAAM,KAAK1B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAK5B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAEI,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKI,WAAW,CAAC,CAAD,CAAX,CAAenB,KAHpB,CADJ,CAbJ,CADJ,EAwBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,YAAD;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,GAAG,EAAEA,WAAW,CAAC,CAAD,CAAX,CAAeC,MAFxB;AAGI,QAAA,KAAK,EAAEH,KAHX;AAII,QAAA,OAAO,EAAE,MAAM,KAAK1B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAK5B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAEI,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKI,WAAW,CAAC,CAAD,CAAX,CAAenB,KAHpB,CADJ,CAZJ,CAxBJ,EA6CI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,YAAD;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,GAAG,EAAEA,WAAW,CAAC,CAAD,CAAX,CAAeC,MAFxB;AAGI,QAAA,KAAK,EAAEH,KAHX;AAII,QAAA,OAAO,EAAE,MAAM,KAAK1B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAK5B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAEI,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKI,WAAW,CAAC,CAAD,CAAX,CAAenB,KAHpB,CADJ,CAZJ,CA7CJ,EAkEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,YAAD;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,GAAG,EAAEA,WAAW,CAAC,CAAD,CAAX,CAAeC,MAFxB;AAGI,QAAA,KAAK,EAAEH,KAHX;AAII,QAAA,OAAO,EAAE,MAAM,KAAK1B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAK5B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAEI,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKI,WAAW,CAAC,CAAD,CAAX,CAAenB,KAHpB,CADJ,CAZJ,CAlEJ,EAuFI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,YAAD;AACI,QAAA,SAAS,EAAC,gBADd;AAEI,QAAA,GAAG,EAAEA,WAAW,CAAC,CAAD,CAAX,CAAeC,MAFxB;AAGI,QAAA,KAAK,EAAEH,KAHX;AAII,QAAA,OAAO,EAAE,MAAM,KAAK1B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,OAAO,EAAE,MAAM,KAAK5B,WAAL,CAAiB4B,WAAW,CAAC,CAAD,CAA5B,CADnB;AAEI,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKI,WAAW,CAAC,CAAD,CAAX,CAAenB,KAHpB,CADJ,CAXJ,CAvFJ,CAHJ,CADJ,CADJ,CADJ;AAuHH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAEDN,EAAAA,OAAO,GAAG;AACN,QAAI2B,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACA,QAAIC,SAAS,GAAG,2EAA2E,KAAK3C,KAAL,CAAWC,QAAtG;AACAwC,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AAC/B,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,YAAf,CAAX;;AACA,UAAGH,IAAI,CAACI,MAAR,EAAe;AACX,aAAK5B,QAAL,CAAc;AACVlB,UAAAA,SAAS,EAAE0C,IAAI,CAACI;AADN,SAAd,EAEG,MAAM;AACL,eAAKC,iBAAL;AACH,SAJD;AAMH;AAEJ,KAXD;AAaAT,IAAAA,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBR,SAAhB;AACAF,IAAAA,GAAG,CAACW,IAAJ;AACH;;AAEDF,EAAAA,iBAAiB,GAAG;AAChB,QAAI/C,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAA3B;AACA,QAAIkD,KAAK,GAAG,CAAZ;;AAEA,SAAK,IAAI9B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,SAAS,CAACqB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIR,KAAK,GAAGZ,SAAS,CAACoB,CAAD,CAArB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKqC,wBAAL,CAA8BvC,KAA9B,CAAZ,EAFuC,CAGvC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEH,KAjBe,CAmBhB;AACA;AACA;AAEA;;AAEH;;AAGDuC,EAAAA,wBAAwB,CAACvC,KAAD,EAAQ;AAC5B,QAAIwC,kBAAkB,GAAG,KAAzB;AACA,QAAIC,QAAQ,GAAGzC,KAAK,CAAC0C,EAArB;AACA,QAAIhB,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACA,QAAIgB,eAAe,GAAG,sDAAsDF,QAAtD,GAAiE,yBAAjE,GAA6F,KAAKxD,KAAL,CAAWC,QAA9H;AACA,QAAI0D,IAAI,GAAG,IAAX;AACA,QAAIrD,gBAAgB,GAAG,KAAKN,KAAL,CAAWM,gBAAlC;AACA,QAAIsD,GAAG,GAAG,KAAV;AACAnB,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AAC/B;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,YAAf,CAAX;AACA,UAAIa,OAAO,GAAGhB,IAAI,CAAC9B,KAAL,CAAW8C,OAAzB,CAH+B,CAI/B;;AAEA,UAAIC,IAAI,GAAG,IAAIpB,cAAJ,EAAX,CAN+B,CAQ/B;;AACA,UAAIqB,eAAe,GAAG,+BAA+BF,OAA/B,GAAyC,UAA/D;AACAC,MAAAA,IAAI,CAAClB,gBAAL,CAAsB,MAAtB,EAA8B,MAAM;AAChC,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWe,IAAI,CAACd,YAAhB,CAAX;AACAO,QAAAA,kBAAkB,GAAGV,IAArB,CAFgC,CAGhC;AACA;;AACA,YAAIU,kBAAkB,CAACS,UAAvB,EAAmC;AAC/B,cAAIT,kBAAkB,CAACS,UAAnB,IAAiC,KAAKhE,KAAL,CAAWQ,YAAhD,EAA8D;AAC1DF,YAAAA,gBAAgB,CAAC2D,IAAjB,CAAsBV,kBAAtB;AACA,iBAAKlC,QAAL,CAAc;AACVf,cAAAA,gBAAgB,EAAEA;AADR,aAAd;AAGH;AACJ;AAIJ,OAhBD;AAiBAwD,MAAAA,IAAI,CAACX,IAAL,CAAU,KAAV,EAAiBY,eAAjB;AACAD,MAAAA,IAAI,CAACV,IAAL;AAEH,KA9BD;AA+BAX,IAAAA,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBO,eAAhB;AACAjB,IAAAA,GAAG,CAACW,IAAJ,GAxC4B,CA0C5B;;AACA,WAAOQ,GAAP;AACH;;AA5TyC;;AAgU9C,eAAehE,eAAf","sourcesContent":["import React from 'react';\nimport './Slider.css';\nimport { Jumbotron, Col, Row, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass RecommendMovies extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n            apikeyOMDB: '9e790f8b',\n            movie_arr: [],\n            redirect: false,\n            selected_movie: '',\n            top_rated_movies: [],\n            current_omdb_details: '',\n            toptreshhold: 6,\n            clickMovie: '',\n            redirectReview: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    handleClick(movie) {\n\n        console.log(movie);\n\n        var movieIS = this.getISDetails(movie.Title);\n\n        if (movieIS != null) {\n            this.setState({\n                clickMovie: movieIS,\n                redirectReview: true,\n            })\n        }\n\n    }\n\n    getISDetails(title) {\n        var movie_arr = this.state.movie_arr;\n\n        for (let i = 0; i < movie_arr.length; i++) {\n            var movieIS = movie_arr[i];\n            console.log(movieIS);\n            if (movieIS.title != null) {\n                if (movieIS.title.toLowerCase() == title.toLowerCase()) {\n                    return movieIS;\n                }\n            }\n\n        }\n\n        return null;\n    }\n\n    render() {\n\n        const carouselitem = {\n            width: \"100%\",\n            height: 600,\n            backgroundColor: \"rgb(249, 249, 249)\",\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"100%\",\n            textAlign: 'center',\n            // paddingTop: \"20px\"\n        };\n\n        const font = {\n            color: \"black\",\n            paddingTop: \"20px\",\n        }\n\n        const image = {\n            // width: 50,\n            height: 350\n        };\n\n        console.log(this.state);\n        if (this.state.redirectReview) {\n            return (\n                <Redirect push from='/' to={{\n                    pathname: '/reviews',\n                    state: {\n                        selected_movie: this.state.clickMovie,\n                    }\n                }} />\n            )\n\n        }\n\n        if (this.state.movie_arr.length > 0 && this.state.top_rated_movies.length > 5) {\n            console.log(this.state.top_rated_movies.length)\n            var topRatedArr = this.state.top_rated_movies;\n            return (\n                <div>\n                    <Jumbotron fluid>\n                        <Container style={centralize}>\n                            <h2 >Top Rated Movies</h2>\n                            <br></br>\n                            <Row>\n                                <Col>\n\n                                    <Link\n                                        onClick={() => this.handleClick(topRatedArr[0])}\n                                    >\n                                        <MDBCardImage\n                                            className=\"img-fluid pb-3\"\n                                            src={topRatedArr[0].Poster}\n                                            style={image}\n                                            onClick={() => this.handleClick(topRatedArr[0])}\n                                        />\n\n                                    </Link>\n                                    <figcaption>\n                                        <Link\n                                            onClick={() => this.handleClick(topRatedArr[0])}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[0].Title}\n                                        </Link>\n                                    </figcaption>\n\n                                </Col>\n\n                                <Col>\n\n                                    <Link\n                                        onClick={() => this.handleClick(topRatedArr[1])}\n                                    >\n                                        <MDBCardImage\n                                            className=\"img-fluid pb-3\"\n                                            src={topRatedArr[1].Poster}\n                                            style={image}\n                                            onClick={() => this.handleClick(topRatedArr[1])}\n                                        />\n                                    </Link>\n                                    <figcaption>\n                                        <Link\n                                            onClick={() => this.handleClick(topRatedArr[1])}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[1].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n                                <Col>\n\n                                    <Link\n                                        onClick={() => this.handleClick(topRatedArr[2])}\n                                    >\n                                        <MDBCardImage\n                                            className=\"img-fluid pb-3\"\n                                            src={topRatedArr[2].Poster}\n                                            style={image}\n                                            onClick={() => this.handleClick(topRatedArr[2])}\n                                        />\n                                    </Link>\n                                    <figcaption>\n                                        <Link\n                                            onClick={() => this.handleClick(topRatedArr[2])}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[2].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n                                <Col>\n\n                                    <Link\n                                        onClick={() => this.handleClick(topRatedArr[3])}\n                                    >\n                                        <MDBCardImage\n                                            className=\"img-fluid pb-3\"\n                                            src={topRatedArr[3].Poster}\n                                            style={image}\n                                            onClick={() => this.handleClick(topRatedArr[3])}\n                                        />\n                                    </Link>\n                                    <figcaption>\n                                        <Link\n                                            onClick={() => this.handleClick(topRatedArr[3])}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[3].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n                                <Col>\n                                    <Link\n                                        onClick={() => this.handleClick(topRatedArr[4])}\n                                    >\n                                        <MDBCardImage\n                                            className=\"img-fluid pb-3\"\n                                            src={topRatedArr[4].Poster}\n                                            style={image}\n                                            onClick={() => this.handleClick(topRatedArr[4])}\n                                        />\n                                    </Link>\n                                    <figcaption>\n                                        <Link\n                                            onClick={() => this.handleClick(topRatedArr[4])}\n                                            style={{ color: 'black' }}>\n                                            {topRatedArr[4].Title}\n                                        </Link>\n                                    </figcaption>\n                                </Col>\n\n\n                            </Row>\n                        </Container>\n                    </Jumbotron>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n\n        )\n\n    }\n\n    getData() {\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            if(resp.movies){\n                this.setState({\n                    movie_arr: resp.movies,\n                }, () => {\n                    this.getTopRatedMovies();\n                });\n                \n            }\n           \n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n    }\n\n    getTopRatedMovies() {\n        var movie_arr = this.state.movie_arr;\n        var count = 0;\n\n        for (let i = 0; i < movie_arr.length; i++) {\n            var movie = movie_arr[i];\n            console.log(this.checkIfHighlyRatedByIMDB(movie))\n            // if(this.checkIfHighlyRatedByIMDB(movie)){\n            //     count +=1;\n            //     console.log(\"hey\")\n            // }\n\n            // if(count>5){\n            //     console.log(count);\n            //     break;\n            // }\n\n        }\n\n        // this.setState({\n        //     top_rated_movies: result,\n        // })\n\n        // console.log(result)\n\n    }\n\n\n    checkIfHighlyRatedByIMDB(movie) {\n        var movie_omdb_details = 'hey';\n        var movie_id = movie.id;\n        var xhr = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n        var that = this;\n        var top_rated_movies = this.state.top_rated_movies;\n        var top = false;\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            var imdb_id = resp.movie.imdb_id\n            // console.log(imdb_id)\n\n            var xhr2 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" ;\n            xhr2.addEventListener('load', () => {\n                var resp = JSON.parse(xhr2.responseText);\n                movie_omdb_details = resp;\n                // console.log(movie_omdb_details)\n                // return movie_omdb_details;\n                if (movie_omdb_details.imdbRating) {\n                    if (movie_omdb_details.imdbRating >= this.state.toptreshhold) {\n                        top_rated_movies.push(movie_omdb_details);\n                        this.setState({\n                            top_rated_movies: top_rated_movies,\n                        })\n                    }\n                }\n\n\n\n            })\n            xhr2.open('GET', urlMovieDetails)\n            xhr2.send()\n\n        })\n        xhr.open('GET', urlmoviedetails)\n        xhr.send()\n\n        // return movie_omdb_details;\n        return top;\n    }\n\n}\n\nexport default RecommendMovies;"]},"metadata":{},"sourceType":"module"}