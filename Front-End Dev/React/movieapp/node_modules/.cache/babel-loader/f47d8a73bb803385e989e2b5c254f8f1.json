{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\SearchBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport deburr from 'lodash/deburr';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst suggestions = [];\nconst movieList = [];\n\nfunction contstructCinemasSuggestions(input) {\n  for (let i = 0; i < suggs.length; i++) {\n    var cinema = resp.cinemas[i];\n    suggestions.push({\n      label: cinema.name,\n      id: cinema.id\n    });\n  }\n\n  var xhr = new XMLHttpRequest();\n  let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n  xhr.addEventListener('load', () => {\n    // update the state of the component with the result here\n    var resp = JSON.parse(xhr.responseText); //   this.setState({ results: resp.cinemas[0].location });\n\n    var cinemasArr = [];\n    suggestions.length = 0;\n\n    for (let i = 0; i < resp.cinemas.length; i++) {\n      var cinema = resp.cinemas[i];\n      suggestions.push({\n        label: cinema.name,\n        id: cinema.id\n      });\n    }\n\n    console.log(suggestions); // var acinema = resp.cinemas[0];\n    // console.log(acinema.name);\n  });\n  xhr.open('GET', url);\n  xhr.send();\n}\n\nfunction constructCinemasSuggestions() {\n  var xhr = new XMLHttpRequest();\n  let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n  xhr.addEventListener('load', () => {\n    // update the state of the component with the result here\n    var resp = JSON.parse(xhr.responseText); //   this.setState({ results: resp.cinemas[0].location });\n\n    var cinemasArr = [];\n    suggestions.length = 0;\n\n    for (let i = 0; i < resp.cinemas.length; i++) {\n      var cinema = resp.cinemas[i];\n      suggestions.push({\n        label: cinema.name,\n        id: cinema.id\n      });\n    }\n\n    console.log(suggestions); // var acinema = resp.cinemas[0];\n    // console.log(acinema.name);\n  });\n  xhr.open('GET', url);\n  xhr.send();\n}\n\nfunction renderInputComponent(inputProps) {\n  const classes = inputProps.classes,\n        _inputProps$inputRef = inputProps.inputRef,\n        inputRef = _inputProps$inputRef === void 0 ? () => {} : _inputProps$inputRef,\n        ref = inputProps.ref,\n        other = _objectWithoutProperties(inputProps, [\"classes\", \"inputRef\", \"ref\"]);\n\n  return React.createElement(TextField //   fullWidth\n  , Object.assign({\n    InputProps: {\n      inputRef: node => {\n        ref(node);\n        inputRef(node);\n      },\n      classes: {\n        input: classes.input\n      }\n    }\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(suggestion, {\n  query,\n  isHighlighted\n}) {\n  const matches = match(suggestion.label, query);\n  const parts = parse(suggestion.label, matches);\n  return React.createElement(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, parts.map(part => React.createElement(\"span\", {\n    key: part.text,\n    style: {\n      fontWeight: part.highlight ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, part.text))));\n}\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(suggestion => {\n    const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 200,\n    flexGrow: 1,\n    display: 'flex',\n    // flexWrap: 'wrap',\n    flexFlow: \"row wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  container: {\n    position: 'relative'\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n    width: 250\n  },\n  suggestion: {\n    display: 'block',\n    cursor: 'pointer' // padding: '10px 20px',\n    // width:200,\n\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none' // width: 500,\n\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\nexport default function IntegrationAutosuggest() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        anchorEl = _React$useState2[0],\n        setAnchorEl = _React$useState2[1]; //   const [values, setValues] = React.useState({\n  //     age: '',\n  //     name: 'hai',\n  //   });\n\n\n  const _React$useState3 = React.useState({\n    single: '',\n    popper: ''\n  }),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1];\n\n  const _React$useState5 = React.useState({\n    movie: ''\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        values = _React$useState6[0],\n        setValues = _React$useState6[1];\n\n  const _React$useState7 = React.useState([]),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        stateSuggestions = _React$useState8[0],\n        setSuggestions = _React$useState8[1];\n\n  const handleSuggestionsFetchRequested = ({\n    value\n  }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const handleChange = name => (event, {\n    newValue\n  }) => {\n    setState(_objectSpread({}, state, {\n      [name]: newValue\n    })); // console.log(newValue);\n\n    setMovieSelect(newValue);\n  };\n\n  const handleSelectChange = event => {\n    //   console.log(\"hi\");\n    setValues(oldValues => _objectSpread({}, oldValues, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const autosuggestProps = {\n    renderInputComponent,\n    suggestions: stateSuggestions,\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\n    getSuggestionValue,\n    renderSuggestion\n  };\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, constructCinemasSuggestions(), React.createElement(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Autosuggest, Object.assign({}, autosuggestProps, {\n    inputProps: {\n      //   style: {display : 'inline'},\n      classes,\n      id: 'react-autosuggest-simple',\n      label: 'Cinema',\n      placeholder: 'Searh a cinema',\n      value: state.single,\n      onChange: handleChange('single')\n    },\n    theme: {\n      container: classes.container,\n      suggestionsContainerOpen: classes.suggestionsContainerOpen,\n      suggestionsList: classes.suggestionsList,\n      suggestion: classes.suggestion\n    } // style = {{display: 'inline'}}\n    ,\n    renderSuggestionsContainer: options => React.createElement(Paper, Object.assign({}, options.containerProps, {\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), options.children),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: values.movie,\n    onChange: handleSelectChange,\n    name: \"age\",\n    displayEmpty: true,\n    className: classes.selectEmpty,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"Select\"), React.createElement(MenuItem, {\n    value: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, \"Ten\"), React.createElement(MenuItem, {\n    value: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, \"Twenty\"), React.createElement(MenuItem, {\n    value: 30,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"Thirty\")))));\n}","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/SearchBar.js"],"names":["React","deburr","Autosuggest","match","parse","TextField","Paper","MenuItem","Popper","makeStyles","InputLabel","FormHelperText","FormControl","Select","suggestions","movieList","contstructCinemasSuggestions","input","i","suggs","length","cinema","resp","cinemas","push","label","name","id","xhr","XMLHttpRequest","url","addEventListener","JSON","responseText","cinemasArr","console","log","open","send","constructCinemasSuggestions","renderInputComponent","inputProps","classes","inputRef","ref","other","node","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","text","fontWeight","highlight","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","count","filter","keep","slice","getSuggestionValue","useStyles","theme","root","height","flexGrow","display","flexFlow","formControl","margin","spacing","minWidth","selectEmpty","marginTop","container","position","suggestionsContainerOpen","zIndex","left","right","width","cursor","suggestionsList","padding","listStyleType","divider","IntegrationAutosuggest","useState","anchorEl","setAnchorEl","single","popper","state","setState","movie","values","setValues","stateSuggestions","setSuggestions","handleSuggestionsFetchRequested","handleSuggestionsClearRequested","handleChange","event","newValue","setMovieSelect","handleSelectChange","oldValues","target","autosuggestProps","onSuggestionsFetchRequested","onSuggestionsClearRequested","placeholder","onChange","options","containerProps","children"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport deburr from 'lodash/deburr';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst suggestions = [];\r\n\r\nconst movieList = [];\r\n\r\nfunction contstructCinemasSuggestions(input){\r\n    for(let i = 0; i<suggs.length; i++){\r\n        var cinema = resp.cinemas[i];\r\n        suggestions.push({label: cinema.name,\r\n                            id: cinema.id});\r\n    }\r\n\r\n    var xhr = new XMLHttpRequest()\r\n    let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n    xhr.addEventListener('load', () => {\r\n      // update the state of the component with the result here\r\n      var resp = JSON.parse(xhr.responseText);\r\n    //   this.setState({ results: resp.cinemas[0].location });\r\n    var cinemasArr = [];\r\n    suggestions.length = 0;\r\n    for(let i = 0; i<resp.cinemas.length; i++){\r\n        var cinema = resp.cinemas[i];\r\n        suggestions.push({label: cinema.name,\r\n                            id: cinema.id});\r\n    }\r\n    console.log(suggestions );\r\n    // var acinema = resp.cinemas[0];\r\n    // console.log(acinema.name);\r\n    \r\n    })\r\n    xhr.open('GET', url)\r\n    xhr.send()\r\n\r\n}\r\n\r\nfunction constructCinemasSuggestions() {\r\n    var xhr = new XMLHttpRequest()\r\n    let url = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n    xhr.addEventListener('load', () => {\r\n      // update the state of the component with the result here\r\n      var resp = JSON.parse(xhr.responseText);\r\n    //   this.setState({ results: resp.cinemas[0].location });\r\n    var cinemasArr = [];\r\n    suggestions.length = 0;\r\n    for(let i = 0; i<resp.cinemas.length; i++){\r\n        var cinema = resp.cinemas[i];\r\n        suggestions.push({label: cinema.name,\r\n                            id: cinema.id});\r\n    }\r\n    console.log(suggestions );\r\n    // var acinema = resp.cinemas[0];\r\n    // console.log(acinema.name);\r\n    \r\n    })\r\n    xhr.open('GET', url)\r\n    xhr.send()\r\n    \r\n  }\r\n\r\nfunction renderInputComponent(inputProps) {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n    //   fullWidth\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, { query, isHighlighted }) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map(part => (\r\n          <span key={part.text} style={{ fontWeight: part.highlight ? 500 : 400 }}>\r\n            {part.text}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n        const keep =\r\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 200,\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    // flexWrap: 'wrap',\r\n    flexFlow: \"row wrap\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n   selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n    width: 250,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n    cursor: 'pointer',\r\n    // padding: '10px 20px',\r\n    // width:200,\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n    // width: 500,\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function IntegrationAutosuggest() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n//   const [values, setValues] = React.useState({\r\n//     age: '',\r\n//     name: 'hai',\r\n//   });\r\n  \r\n  const [state, setState] = React.useState({\r\n    single: '',\r\n    popper: '',\r\n  });\r\n\r\n  const [values, setValues] = React.useState({\r\n    movie: '',\r\n  });\r\n\r\n\r\n  const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n\r\n\r\n  const handleSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n\r\n  const handleSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const handleChange = name => (event, { newValue }) => {\r\n    setState({\r\n      ...state,\r\n      [name]: newValue,\r\n    });\r\n    // console.log(newValue);\r\n    setMovieSelect(newValue);\r\n  };\r\n\r\n  const handleSelectChange = event => {\r\n    //   console.log(\"hi\");\r\n    setValues(oldValues => ({\r\n      ...oldValues,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const autosuggestProps = {\r\n    renderInputComponent,\r\n    suggestions: stateSuggestions,\r\n    onSuggestionsFetchRequested: handleSuggestionsFetchRequested,\r\n    onSuggestionsClearRequested: handleSuggestionsClearRequested,\r\n    getSuggestionValue,\r\n    renderSuggestion,\r\n  };\r\n\r\n  return (\r\n \r\n    <div className={classes.root} >\r\n        {constructCinemasSuggestions()}\r\n\r\n    <form className={classes.root} autoComplete=\"off\">\r\n      <FormControl className={classes.formControl}>\r\n          \r\n        <Autosuggest \r\n        {...autosuggestProps}\r\n        inputProps={{\r\n        //   style: {display : 'inline'},\r\n          classes,\r\n          id: 'react-autosuggest-simple',\r\n          label: 'Cinema',\r\n          placeholder: 'Searh a cinema',\r\n          value: state.single,\r\n          onChange: handleChange('single'),\r\n        }}\r\n        theme={{\r\n          container: classes.container,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        // style = {{display: 'inline'}}\r\n        renderSuggestionsContainer={options => (\r\n          <Paper {...options.containerProps} square>\r\n            {options.children}\r\n          </Paper>\r\n        )}\r\n        />\r\n    </FormControl>\r\n    \r\n    <FormControl className={classes.formControl}>\r\n        <Select\r\n          value={values.movie}\r\n          onChange={handleSelectChange}\r\n          name=\"age\"\r\n          displayEmpty\r\n          className={classes.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\" disabled>\r\n            Select\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        \r\n      </FormControl>\r\n    </form>\r\n      \r\n     \r\n    </div>\r\n\r\n\r\n\r\n    \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}