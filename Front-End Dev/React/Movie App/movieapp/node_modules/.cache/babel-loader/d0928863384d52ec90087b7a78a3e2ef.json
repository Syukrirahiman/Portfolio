{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/PlanToMeet.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\nclass PlanToMeet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planid: 222222,\n      result_arr: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {}\n\n  handleSubmit(event) {}\n\n  displayDetail() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.planid);\n  }\n\n  getData() {\n    const queryString = require('query-string');\n\n    const parsed = queryString.parse(this.props.location.search);\n    console.log(parsed.id);\n    this.setState({\n      planid: parsed.id\n    }, () => {\n      this.getDataFromPhp();\n    });\n  }\n\n  getDataFromPhp() {\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var result = JSON.parse(this.responseText);\n        console.log(result);\n        that.setState({\n          result_arr: result\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/retrieve.php?id=\" + that.state.planid, true);\n    request.send();\n  }\n\n}\n\nexport default PlanToMeet;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/PlanToMeet.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Form","MDBCardImage","Redirect","PlanToMeet","Component","constructor","props","state","planid","result_arr","handleChange","bind","handleSubmit","componentDidMount","getData","event","displayDetail","bold","fontWeight","center","textAlign","render","console","log","queryString","require","parsed","parse","location","search","id","setState","getDataFromPhp","that","request","XMLHttpRequest","onreadystatechange","readyState","status","result","JSON","responseText","open","send"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,GAAtC,EAA2CC,GAA3C,EAAgDC,MAAhD,EAAwDC,IAAxD,QAAoE,iBAApE,C,CACA;;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAGA,MAAMC,UAAN,SAAyBV,KAAK,CAACW,SAA/B,CAAyC;AAGrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL;AAEH;;AAEDJ,EAAAA,YAAY,CAACK,KAAD,EAAQ,CAGnB;;AAEDH,EAAAA,YAAY,CAACG,KAAD,EAAO,CAElB;;AAGDC,EAAAA,aAAa,GAAG;AACZ,UAAMC,IAAI,GAAG;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAIA,UAAMC,MAAM,GAAG;AACXC,MAAAA,SAAS,EAAE;AADA,KAAf;AAKH;;AAGDC,EAAAA,MAAM,GAAG;AAGLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKA,KAAL,CAAWC,MAAjB,CADJ;AAKH;;AAIDM,EAAAA,OAAO,GAAG;AAEN,UAAMU,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AACA,UAAMC,MAAM,GAAGF,WAAW,CAACG,KAAZ,CAAkB,KAAKrB,KAAL,CAAWsB,QAAX,CAAoBC,MAAtC,CAAf;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACI,EAAnB;AAEA,SAAKC,QAAL,CAAc;AACVvB,MAAAA,MAAM,EAAEkB,MAAM,CAACI;AADL,KAAd,EAEG,MAAK;AACJ,WAAKE,cAAL;AACH,KAJD;AASH;;AAEDA,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;;AAEAD,IAAAA,OAAO,CAACE,kBAAR,GAA6B,YAAY;AACrC,UAAI,KAAKC,UAAL,IAAmB,CAAnB,IAAwB,KAAKC,MAAL,IAAe,GAA3C,EAAgD;AAC5C,YAAIC,MAAM,GAAGC,IAAI,CAACb,KAAL,CAAW,KAAKc,YAAhB,CAAb;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AACAN,QAAAA,IAAI,CAACF,QAAL,CAAc;AACVtB,UAAAA,UAAU,EAAE8B;AADF,SAAd;AAGH;AACJ,KARD;;AASAL,IAAAA,OAAO,CAACQ,IAAR,CAAa,KAAb,EAAoB,8CAA4CT,IAAI,CAAC1B,KAAL,CAAWC,MAA3E,EAAmF,IAAnF;AACA0B,IAAAA,OAAO,CAACS,IAAR;AACH;;AAvFoC;;AA2FzC,eAAexC,UAAf","sourcesContent":["import React from 'react';\n\n\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\n\nclass PlanToMeet extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            planid: 222222,\n            result_arr: [],\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n\n    }\n\n    handleChange(event) {\n\n\n    }\n\n    handleSubmit(event){\n        \n    }\n\n\n    displayDetail() {\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n\n\n    }\n\n\n    render() {\n    \n\n        console.log(this.state);\n\n        return (\n            <div>{this.state.planid}</div>\n\n        )\n\n    }\n\n\n\n    getData() {\n         \n        const queryString = require('query-string');\n        const parsed = queryString.parse(this.props.location.search);\n        console.log(parsed.id);\n\n        this.setState({\n            planid: parsed.id\n        }, () =>{\n            this.getDataFromPhp();\n        });\n\n   \n\n\n    }\n\n    getDataFromPhp(){\n        var that = this;\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var result = JSON.parse(this.responseText);\n                console.log(result);\n                that.setState({\n                    result_arr: result,\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/retrieve.php?id=\"+that.state.planid, true);\n        request.send();\n    }\n\n}\n\nexport default PlanToMeet;"]},"metadata":{},"sourceType":"module"}