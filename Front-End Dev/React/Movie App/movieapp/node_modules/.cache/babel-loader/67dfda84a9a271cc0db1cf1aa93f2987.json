{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Maps.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow, DirectionsRenderer } from 'react-google-maps'; // import { Polyline } from 'react-google-maps';\n\nimport Marker2 from './Marker2';\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          icon: {\n            url: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png'\n          },\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"yea\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      stores: [{\n        latitude: 47.359423,\n        longitude: -122.021071\n      }, {\n        latitude: 47.2052192687988,\n        longitude: -121.988426208496\n      }, {\n        latitude: 47.6307081,\n        longitude: -122.1434325\n      }, {\n        latitude: 47.3084488,\n        longitude: -122.2140121\n      }, {\n        latitude: 47.5524695,\n        longitude: -122.0425407\n      }],\n      directions: '',\n      origin: {\n        lat: 47.359423,\n        lng: -122.021071\n      },\n      destination: {\n        lat: 48.00,\n        lng: -122.00\n      }\n    };\n  }\n\n  getDirection() {\n    const google = window.google;\n    const directionsService = new google.maps.DirectionsService();\n    const origin = this.state.origin;\n    const destination = {\n      lat: 48.00,\n      lng: -122.00\n    };\n    directionsService.route({\n      origin: origin,\n      destination: destination,\n      travelMode: google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK) {\n        this.setState({\n          directions: result\n        });\n      } else {\n        console.error(\"error fetching directions \".concat(result));\n      }\n    });\n    return React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100%'\n    };\n    const GoogleMapExample = withGoogleMap(props => React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      defaultZoom: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: 48.00,\n        lng: -122.00\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), this.displayMarkers(), this.getDirection()));\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(GoogleMapExample, {\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"500px\",\n          width: '1000px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM'\n})(MapContainer);","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Maps.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","MDBCardImage","Map","GoogleApiWrapper","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","DirectionsRenderer","Marker2","MapContainer","Component","constructor","props","displayMarkers","state","stores","map","store","index","url","lat","latitude","lng","longitude","console","log","directions","origin","destination","getDirection","google","window","directionsService","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","error","render","mapStyles","width","height","GoogleMapExample","display","justifyContent","alignItems","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { MDBCardImage } from \"mdbreact\";\n\nimport { Map, GoogleApiWrapper} from 'google-maps-react';\n\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n  DirectionsRenderer,\n\n\n\n} from 'react-google-maps';\n// import { Polyline } from 'react-google-maps';\nimport Marker2 from './Marker2';\n\n\nclass MapContainer extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stores: [\n      { latitude: 47.359423, longitude: -122.021071 },\n      { latitude: 47.2052192687988, longitude: -121.988426208496 },\n      { latitude: 47.6307081, longitude: -122.1434325 },\n      { latitude: 47.3084488, longitude: -122.2140121 },\n      { latitude: 47.5524695, longitude: -122.0425407 }],\n      directions: '',\n      origin: { lat: 47.359423, lng: -122.021071 },\n      destination: { lat: 48.00, lng: -122.00  },\n\n\n\n    }\n  }\n\n\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker\n        icon={{ url: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png' }}\n\n        key={index} id={index} position={{\n          lat: store.latitude,\n          lng: store.longitude\n        }}\n        onClick={() => console.log(\"yea\")} />\n    })\n  }\n\n  getDirection(){\n\n    const google = window.google\n\n    const directionsService = new google.maps.DirectionsService();\n\n    const origin = this.state.origin;\n    const destination = { lat: 48.00, lng: -122.00  };\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n    \n    return <DirectionsRenderer\n          directions={this.state.directions}\n        />\n\n  }\n\n  render() {\n\n\n\n    const mapStyles = {\n      width: '100%',\n      height: '100%',\n    };\n\n    \n\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 47.444, lng: -122.176 }}\n        defaultZoom={8}\n\n      >\n\n        <Marker position={{ lat: 48.00, lng: -122.00 }} />\n        {this.displayMarkers()}\n        {this.getDirection()}\n        \n      </GoogleMap>\n    ));\n\n\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        {/* <Map\n          google={this.props.google}\n          zoom={8}\n          style={mapStyles}\n          initialCenter={{ lat: 47.444, lng: -122.176 }}\n        >\n          <Marker position={{ lat: 48.00, lng: -122.00 }} />\n          {this.displayMarkers()}\n        </Map> */}\n\n\n\n        <GoogleMapExample\n          containerElement={<div style={{ height: `500px`, width: '1000px' }} />}\n          mapElement={<div style={{ height: `100%`, width: '100%' }} />}\n        />\n\n\n      </div>\n\n\n    );\n  }\n\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDeW9x56y1K5r3sJHkMn5I6gQ4ohLsIeMM'\n})(MapContainer);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}