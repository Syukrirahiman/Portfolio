{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/PlanToMeet.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nclass PlanToMeet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planid: this.props.location.state.planid,\n      result_arr: [],\n      name: '',\n      participant: '',\n      participantExists: false,\n      showForm: false,\n      cinema: '',\n      movie: '',\n      showtimeSelect: '',\n      showResult: false,\n      resultVote: [],\n      participants: [],\n      apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n      movieDetails: '',\n      cinemaDetails: '',\n      redirectToDirection: false,\n      redirectionToReview: false,\n      error: false,\n      revote: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSubmitVote = this.handleSubmitVote.bind(this);\n    this.handleRevote = this.handleRevote.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDataFromPhp();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"hey\");\n    var planid = this.state.planid;\n    var name = this.state.name;\n    var params = \"planid=\" + planid + \"&name=\" + name;\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var participantObj = JSON.parse(this.responseText);\n        console.log(participantObj);\n\n        if (participantObj.showtimeVoted != null) {\n          //participant has already voted\n          that.setState({\n            participant: participantObj,\n            participantExists: true\n          });\n        } else {\n          var participantObj = JSON.parse(this.responseText);\n          console.log(participantObj);\n          that.setState({\n            participant: participantObj,\n            showForm: true\n          });\n        }\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/addparticipant.php?\" + params, true);\n    request.send();\n  }\n\n  handleSubmitVote(event) {\n    event.preventDefault();\n    console.log(\"hey2\");\n    var planid = this.state.planid;\n    var name = this.state.name;\n    var selectedShowtime = encodeURI(this.state.showtimeSelect);\n    console.log(selectedShowtime);\n    var params = \"planid=\" + planid + \"&name=\" + name + \"&selectedShowtime=\" + selectedShowtime;\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var voteObj = JSON.parse(this.responseText);\n        console.log(voteObj);\n        that.setState({\n          participant: voteObj,\n          revote: false\n        }, () => {\n          that.getParticipants();\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/submitvote.php?\" + params, true);\n    request.send();\n  }\n\n  handleRevote(event) {\n    event.preventDefault();\n    this.setState({\n      revote: true\n    });\n  }\n\n  getUpdatedResult() {\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var result = JSON.parse(this.responseText);\n        console.log(result);\n        that.setState({\n          result_arr: result\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/retrievebyid.php?planid=\" + that.state.planid, true);\n    request.send();\n  }\n\n  getParticipants() {\n    var planid = this.state.planid;\n    var params = \"planid=\" + planid;\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var participantsObj = JSON.parse(this.responseText);\n        console.log(participantsObj);\n        that.setState({\n          participants: participantsObj,\n          showResult: true\n        }, () => {\n          that.getUpdatedResult();\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/retrieveparticipants.php?\" + params, true);\n    request.send();\n  }\n\n  getParticipantsWithoutUpdatingResult() {\n    var planid = this.state.planid;\n    var params = \"planid=\" + planid;\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var participantsObj = JSON.parse(this.responseText);\n        console.log(participantsObj);\n        that.setState({\n          participants: participantsObj\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/retrieveparticipants.php?\" + params, true);\n    request.send();\n  }\n\n  checkVoter(showtime, participant) {\n    if (showtime == participant.showtimeVoted) {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, participant.name);\n    }\n  }\n\n  displayResult() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"100%\",\n      // textAlign: 'center',\n      paddingTop: \"30px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Result for Plan ID: \", this.state.planid), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"You are logged in as '\", this.state.name, \"'. You have voted for \", this.printDate(this.state.participant.showtimeVoted)), this.displayMovieCinemaDetails(), React.createElement(\"p\", {\n      style: bold,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Votes Result:\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.state.participants.map((value, index) => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, this.displayShowtimeVote(value)) //    <p>{value.name} has voted for {this.printDate(value.showtimeVoted)} </p> \n    ))), React.createElement(Col, {\n      sm: 6,\n      style: {\n        marginTop: \"50px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Showtime Result\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"S/No\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Showtime\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Voter(s)\"), React.createElement(\"th\", {\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"No. of vote(s)\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, this.state.result_arr.map((value, index) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, this.printDate(value.showtime)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, this.state.participants.map((value2, index2) => React.createElement(\"span\", {\n      id: index2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.checkVoter(value.showtime, value2))))), React.createElement(\"td\", {\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, value.counter))))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })));\n  }\n\n  displayMovieCinemaDetails() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"95%\",\n      // textAlign: 'center',\n      paddingTop: \"-80px\"\n    };\n    var movieDetails = this.state.movieDetails;\n    var cinemaDetails = this.state.cinemaDetails;\n    return React.createElement(Jumbotron, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Container, {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(MDBCardImage, {\n      className: \"img-fluid pb-3\",\n      src: movieDetails.poster_image_thumbnail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: bold,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Movie Title \")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, this.state.movie), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: bold,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Cinema \")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, this.state.cinema), this.displayTimeslotResult())), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(Row, {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/reviews\",\n        state: {\n          selected_movie: this.state.movieDetails\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"View Review\"))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/getdirections\",\n        state: {\n          destination_value: this.state.cinemaDetails.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Get Direction\")))), React.createElement(Row, {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      name: \"revote\",\n      onClick: this.handleRevote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Revote\")))));\n  }\n\n  displayTimeslotResult() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    var timeslotResults = this.state.result_arr;\n    var highestCount = timeslotResults[0].counter;\n    var result = new Array(timeslotResults[0]);\n\n    for (let i = 1; i < timeslotResults.length; i++) {\n      if (timeslotResults[i].counter == highestCount) {\n        result.push(timeslotResults[i]);\n      } else if (timeslotResults[i].counter > highestCount) {\n        highestCount = timeslotResults[i].counter;\n        result = new Array(timeslotResults[i]);\n      }\n    }\n\n    console.log(result);\n\n    if (result.length > 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Highest timeslots voted are: \"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, result.map((value, index) => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, this.printDate(value.showtime)) //    <p>{value.name} has voted for {this.printDate(value.showtimeVoted)} </p> \n      )));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Highest timeslot voted is:\"), \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, this.printDate(result[0].showtime)));\n    }\n  }\n\n  displayShowtimeVote(participant) {\n    return participant.name + \" has voted for \" + this.printDate(participant.showtimeVoted);\n  }\n\n  displayForm() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"50%\",\n      textAlign: 'center',\n      paddingTop: \"30px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Logged in as: \", this.state.name), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, \"Cinema\"), React.createElement(Form.Control, {\n      value: this.state.result_arr[0].cinema,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Movie\"), React.createElement(Form.Control, {\n      value: this.state.result_arr[0].movie,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"Select Showtime\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"showtimeSelect\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, this.state.result_arr.map((value, index) => React.createElement(\"option\", {\n      value: value.showtime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, this.printDate(value.showtime)))))), React.createElement(\"div\", {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      name: \"vote\",\n      onClick: this.handleSubmitVote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"Submit Vote\")))));\n  }\n\n  printDate(stringDate) {\n    var date = new Date(stringDate); // console.log((date.getMonth()+1) + '/' + date.getDate() + '/' +  date.getFullYear())\n\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    stringDate = \"Date: \" + (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + \", Time: \" + strTime;\n    return stringDate;\n  }\n\n  getTotalCounts() {\n    var result_arr = this.state.result_arr;\n    var totalCount = parseInt(result_arr[0].counter);\n    console.log(totalCount);\n\n    for (let i = 1; i < result_arr.length; i++) {\n      totalCount += parseInt(result_arr[i].counter);\n      console.log(totalCount);\n    }\n\n    console.log(totalCount);\n    return totalCount;\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.state.result_arr.length);\n\n    if (this.state.error) {\n      window.alert('Please enter a valid Plan ID!');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        push: true,\n        from: \"/\",\n        to: {\n          pathname: '/plan'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }));\n    }\n\n    if (this.state.revote) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, this.displayForm());\n    }\n\n    if (this.state.showResult || this.state.participantExists) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, this.displayResult());\n    }\n\n    if (this.state.showForm) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, this.displayForm());\n    }\n\n    if (this.state.result_arr.length > 0) {\n      const centralize = {\n        margin: \"auto\",\n        width: \"80%\",\n        // textAlign: 'center',\n        marginTop: \"50px\"\n      };\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        style: centralize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, \"Vote for \", this.state.result_arr[0].movie, \"'s showtimes at \", this.state.result_arr[0].cinema), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"Enter Name to vote\"), React.createElement(Form.Control, {\n        name: \"name\",\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        as: Col,\n        controlId: \"formGridPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"danger\",\n        type: \"submit\",\n        name: \"name\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    });\n  }\n\n  getDataFromPhp() {\n    var that = this;\n    var request = new XMLHttpRequest();\n    console.log(this.state.planid);\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        var result = JSON.parse(this.responseText);\n        console.log(result);\n\n        if (result.length == 0) {\n          that.setState({\n            error: true\n          });\n        } else {\n          that.setState({\n            result_arr: result,\n            showtimeSelect: result[0].showtime,\n            movie: result[0].movie,\n            cinema: result[0].cinema\n          }, () => {\n            that.getMovieDetails();\n            that.getCinemaDetails();\n            that.getParticipantsWithoutUpdatingResult();\n          });\n        }\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/retrievebyid.php?planid=\" + that.state.planid, true);\n    request.send();\n  }\n\n  getCinemaDetails() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/cinemas/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      var cinema_Arr = resp.cinemas; // console.log(cinema_Arr)\n\n      for (let i = 0; i < cinema_Arr.length; i++) {\n        // console.log(cinema_Arr[i].name)\n        if (this.state.cinema.toLowerCase() == cinema_Arr[i].name.toLowerCase()) {\n          this.setState({\n            cinemaDetails: cinema_Arr[i]\n          });\n        }\n      }\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  getMovieDetails() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \" https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      var movie_Arr = resp.movies;\n\n      for (let i = 0; i < movie_Arr.length; i++) {\n        if (this.state.movie == movie_Arr[i].title) {\n          this.setState({\n            movieDetails: movie_Arr[i]\n          });\n        }\n      }\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n}\n\nexport default PlanToMeet;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/PlanToMeet.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Form","MDBCardImage","Redirect","Link","PlanToMeet","Component","constructor","props","state","planid","location","result_arr","name","participant","participantExists","showForm","cinema","movie","showtimeSelect","showResult","resultVote","participants","apikeyIS","movieDetails","cinemaDetails","redirectToDirection","redirectionToReview","error","revote","handleChange","bind","handleSubmit","handleSubmitVote","handleRevote","componentDidMount","getDataFromPhp","event","target","value","setState","preventDefault","console","log","params","that","request","XMLHttpRequest","onreadystatechange","readyState","status","participantObj","JSON","parse","responseText","showtimeVoted","open","send","selectedShowtime","encodeURI","voteObj","getParticipants","getUpdatedResult","result","participantsObj","getParticipantsWithoutUpdatingResult","checkVoter","showtime","displayResult","bold","fontWeight","center","textAlign","centralize","margin","width","paddingTop","printDate","displayMovieCinemaDetails","map","index","displayShowtimeVote","marginTop","value2","index2","counter","poster_image_thumbnail","displayTimeslotResult","pathname","selected_movie","destination_value","timeslotResults","highestCount","Array","i","length","push","displayForm","stringDate","date","Date","hours","getHours","minutes","getMinutes","ampm","strTime","getMonth","getDate","getFullYear","getTotalCounts","totalCount","parseInt","render","window","alert","getMovieDetails","getCinemaDetails","xhr","urlCinema","addEventListener","resp","cinema_Arr","cinemas","toLowerCase","movie_Arr","movies","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { MDBCardImage } from \"mdbreact\";\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\n\n\nclass PlanToMeet extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            planid: this.props.location.state.planid,\n            result_arr: [],\n            name: '',\n            participant: '',\n            participantExists: false,\n            showForm: false,\n            cinema: '',\n            movie: '',\n            showtimeSelect: '',\n            showResult: false,\n            resultVote: [],\n            participants: [],\n            apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n            movieDetails: '',\n            cinemaDetails: '',\n            redirectToDirection: false,\n            redirectionToReview: false,\n            error: false,\n            revote: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSubmitVote = this.handleSubmitVote.bind(this);\n        this.handleRevote = this.handleRevote.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDataFromPhp();\n\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n\n\n        this.setState({\n            [name]: value,\n        });\n\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(\"hey\");\n        var planid = this.state.planid;\n        var name = this.state.name;\n        var params = \"planid=\" + planid + \"&name=\" + name;\n\n\n        var that = this;\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var participantObj = JSON.parse(this.responseText);\n                console.log(participantObj)\n                if (participantObj.showtimeVoted != null) { //participant has already voted\n                    that.setState({\n                        participant: participantObj,\n                        participantExists: true,\n\n                    })\n\n                } else {\n                    var participantObj = JSON.parse(this.responseText);\n                    console.log(participantObj);\n                    that.setState({\n                        participant: participantObj,\n                        showForm: true,\n                    })\n\n                }\n\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/addparticipant.php?\" + params, true);\n        request.send();\n\n    }\n\n    handleSubmitVote(event) {\n        event.preventDefault();\n        console.log(\"hey2\")\n        var planid = this.state.planid;\n        var name = this.state.name;\n        var selectedShowtime = encodeURI(this.state.showtimeSelect);\n        console.log(selectedShowtime);\n        var params = \"planid=\" + planid + \"&name=\" + name + \"&selectedShowtime=\" + selectedShowtime;\n\n\n        var that = this;\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var voteObj = JSON.parse(this.responseText);\n                console.log(voteObj);\n                that.setState({\n                    participant: voteObj,\n                    revote: false,\n                }, () => {\n                    that.getParticipants();\n                });\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/submitvote.php?\" + params, true);\n        request.send();\n\n    }  \n\n\n    handleRevote(event){\n        event.preventDefault();\n        this.setState({\n            revote: true,\n        })\n    }\n\n    getUpdatedResult() {\n        var that = this;\n\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var result = JSON.parse(this.responseText);\n                console.log(result);\n                that.setState({\n                    result_arr: result,\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/retrievebyid.php?planid=\" + that.state.planid, true);\n        request.send();\n    }\n\n\n    getParticipants() {\n        var planid = this.state.planid;\n        var params = \"planid=\" + planid;\n\n        var that = this;\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var participantsObj = JSON.parse(this.responseText);\n                console.log(participantsObj);\n                that.setState({\n                    participants: participantsObj,\n                    showResult: true,\n                }, () => {\n                    that.getUpdatedResult();\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/retrieveparticipants.php?\" + params, true);\n        request.send();\n\n\n    }\n\n    getParticipantsWithoutUpdatingResult() {\n        var planid = this.state.planid;\n        var params = \"planid=\" + planid;\n\n        var that = this;\n        var request = new XMLHttpRequest();\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var participantsObj = JSON.parse(this.responseText);\n                console.log(participantsObj);\n                that.setState({\n                    participants: participantsObj,\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/retrieveparticipants.php?\" + params, true);\n        request.send();\n\n    }\n\n    checkVoter(showtime, participant) {\n        if (showtime == participant.showtimeVoted) {\n            return (<li>{participant.name}</li>\n            )\n        }\n\n    }\n\n\n    displayResult() {\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"100%\",\n            // textAlign: 'center',\n            paddingTop: \"30px\"\n        };\n\n\n        return (\n            <div>\n\n                <Container style={centralize}>\n\n                    <Row>\n                        <Col sm={6}>\n                            <h1 >Result for Plan ID: {this.state.planid}</h1>\n                            <p >You are logged in as '{this.state.name}'. You have voted for {this.printDate(this.state.participant.showtimeVoted)}</p>\n                            {this.displayMovieCinemaDetails()}\n                            <p style={bold}>Votes Result:</p>\n                            <ul>\n                                {this.state.participants.map((value, index) => (\n                                    <li>{this.displayShowtimeVote(value)}</li>\n                                    //    <p>{value.name} has voted for {this.printDate(value.showtimeVoted)} </p> \n                                ))}\n                            </ul>\n\n\n                        </Col>\n                        <Col sm={6} style={{ marginTop: \"50px\", textAlign: \"center\" }}>\n                            <h3>Showtime Result</h3>\n                            <br></br>\n                            <Table striped bordered hover variant=\"dark\"  >\n                                <thead>\n                                    <tr>\n                                        <th>S/No</th>\n                                        <th>Showtime</th>\n                                        <th>Voter(s)</th>\n                                        <th style={center}>No. of vote(s)</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.result_arr.map((value, index) => (\n\n                                        <tr>\n                                            <td>{index + 1}</td>\n                                            <td >{this.printDate(value.showtime)}</td>\n                                            <td>\n\n                                                <ul>\n\n                                                    {this.state.participants.map((value2, index2) => (\n                                                        <span id={index2}>{this.checkVoter(value.showtime, value2)}</span>\n                                                    ))}\n\n                                                </ul>\n\n                                            </td>\n                                            <td style={center}>{value.counter}</td>\n\n                                        </tr>\n                                    ))}\n                                </tbody>\n\n                            </Table>\n\n                        </Col>\n\n\n                    </Row>\n\n\n                    <br></br>\n\n                </Container>\n\n            </div>\n        );\n\n\n    }\n\n    displayMovieCinemaDetails() {\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"95%\",\n            // textAlign: 'center',\n            paddingTop: \"-80px\",\n        };\n        var movieDetails = this.state.movieDetails;\n        var cinemaDetails = this.state.cinemaDetails;\n\n        return (\n            <Jumbotron fluid>\n                <Container style={centralize}>\n\n                    <Row>\n                        <Col sm={4}>\n                            <MDBCardImage\n                                className=\"img-fluid pb-3\"\n                                src={movieDetails.poster_image_thumbnail}\n                            />\n                        </Col>\n                        <Col sm={8}>\n                            <p><span style={bold}>Movie Title </span></p>\n                            <p>{this.state.movie}</p>\n                            <p><span style={bold}>Cinema </span></p>\n                            <p>{this.state.cinema}</p>\n                            {this.displayTimeslotResult()}\n\n                        </Col>\n\n\n                    </Row>\n                    <br></br>\n\n                    <Row style={centralize}>\n                        <Col>\n                            <Link to={{\n                                pathname: \"/reviews\",\n                                state: {\n                                    selected_movie: this.state.movieDetails,\n                                }\n                            }} >\n                                <button type=\"button\" className=\"btn btn-danger\">View Review</button>\n                            </Link>\n\n                        </Col>\n\n                        <Col>\n\n                            <Link to={{\n                                pathname: \"/getdirections\",\n                                state: {\n                                    destination_value: this.state.cinemaDetails.location,\n                                }\n                            }} >\n                                <button type=\"button\" className=\"btn btn-danger\">Get Direction</button>\n                            </Link>\n\n                        </Col>\n\n\n                    </Row>\n\n                    <Row style={centralize}>\n           \n                        <Col xs={12}>\n                        <Button variant=\"danger\" type=\"submit\" name=\"revote\" onClick={this.handleRevote}>\n                                Revote\n                        </Button>\n                        </Col>\n               \n                    </Row>\n                </Container>\n            </Jumbotron>\n\n        )\n\n\n    }\n\n    displayTimeslotResult() {\n\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        var timeslotResults = this.state.result_arr;\n        var highestCount = timeslotResults[0].counter;\n        var result = new Array(timeslotResults[0]);\n        for (let i = 1; i < timeslotResults.length; i++) {\n            if (timeslotResults[i].counter == highestCount) {\n                result.push(timeslotResults[i]);\n            } else if (timeslotResults[i].counter > highestCount) {\n                highestCount = timeslotResults[i].counter;\n                result = new Array(timeslotResults[i]);\n            }\n        }\n\n        console.log(result);\n\n        if (result.length > 1) {\n            return (\n                <div>\n                    <p style={bold}>Highest timeslots voted are: </p>\n                    <ul>\n                        {result.map((value, index) => (\n                            <li>{this.printDate(value.showtime)}</li>\n                            //    <p>{value.name} has voted for {this.printDate(value.showtimeVoted)} </p> \n                        ))}\n                    </ul>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <p><span style={bold}>Highest timeslot voted is:</span> </p>\n                    <p>{this.printDate(result[0].showtime)}</p>\n                </div>\n            )\n        }\n    }\n\n    displayShowtimeVote(participant) {\n\n        return participant.name + \" has voted for \" + this.printDate(participant.showtimeVoted);\n    }\n\n    displayForm() {\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"50%\",\n            textAlign: 'center',\n            paddingTop: \"30px\"\n        };\n        return (\n            <div>\n\n                <Container>\n                    <p>Logged in as: {this.state.name}</p>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>Cinema</Form.Label>\n                                <Form.Control value={this.state.result_arr[0].cinema} disabled />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                                <Form.Label>Movie</Form.Label>\n                                <Form.Control value={this.state.result_arr[0].movie} disabled />\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridState\">\n                                <Form.Label>Select Showtime</Form.Label>\n                                <Form.Control as=\"select\" name=\"showtimeSelect\" onChange={this.handleChange}>\n\n                                    {this.state.result_arr.map((value, index) => (\n\n                                        <option value={value.showtime}>{this.printDate(value.showtime)}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n\n\n                        <div style={centralize}>\n\n                            <Button variant=\"danger\" type=\"submit\" name=\"vote\" onClick={this.handleSubmitVote}>\n                                Submit Vote\n                        </Button>\n                        </div>\n\n                    </Form>\n                </Container>\n\n            </div>\n        );\n\n\n\n\n    }\n\n    printDate(stringDate) {\n        var date = new Date(stringDate);\n        // console.log((date.getMonth()+1) + '/' + date.getDate() + '/' +  date.getFullYear())\n\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? '0' + minutes : minutes;\n        var strTime = hours + ':' + minutes + ' ' + ampm;\n        stringDate = \"Date: \" + (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + \", Time: \" + strTime;\n\n        return stringDate;\n\n    }\n\n    getTotalCounts() {\n\n        var result_arr = this.state.result_arr;\n\n        var totalCount = parseInt(result_arr[0].counter);\n        console.log(totalCount)\n\n        for (let i = 1; i < result_arr.length; i++) {\n            totalCount += parseInt(result_arr[i].counter);\n            console.log(totalCount)\n        }\n        console.log(totalCount)\n\n        return totalCount;\n\n    }\n\n\n\n\n\n    render() {\n        console.log(this.state);\n        console.log(this.state.result_arr.length);\n\n        if (this.state.error) {\n            window.alert('Please enter a valid Plan ID!');\n            \n            return (\n                <div>\n                    <Redirect push from='/' to={{\n                        pathname: '/plan',\n                    }} />\n                </div>\n            )\n        }\n\n        if(this.state.revote){\n            return (\n                <div>\n                    {this.displayForm()}\n                </div>\n            )\n\n        }\n\n        if (this.state.showResult || this.state.participantExists) {\n            return (\n                <div>\n                    {this.displayResult()}\n                </div>\n            )\n        }\n\n        if (this.state.showForm) {\n            return (\n                <div>\n                    {this.displayForm()}\n                </div>\n            )\n        }\n\n        if (this.state.result_arr.length > 0) {\n\n            const centralize = {\n                margin: \"auto\",\n                width: \"80%\",\n                // textAlign: 'center',\n                marginTop: \"50px\"\n            };\n\n            return (\n\n\n                <Jumbotron fluid style={centralize}>\n\n                    <Container>\n\n                        <h2>Vote for {this.state.result_arr[0].movie}'s showtimes at {this.state.result_arr[0].cinema}</h2>\n                        {/* <p>Share Plan ID: {this.state.planid} with your friends to let them vote as well!</p> */}\n\n\n\n                        <Form>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Enter Name to vote</Form.Label>\n                                    <Form.Control name=\"name\" type=\"text\" onChange={this.handleChange} />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\n\n                                </Form.Group>\n\n                            </Form.Row>\n                            <Button variant=\"danger\" type=\"submit\" name=\"name\" onClick={this.handleSubmit}>\n                                Submit\n                        </Button>\n\n                        </Form>\n\n                    </Container>\n                </Jumbotron>\n\n            )\n        }\n\n        return (\n            <div></div>\n\n        )\n\n    }\n\n\n    getDataFromPhp() {\n        var that = this;\n\n        var request = new XMLHttpRequest();\n\n        console.log(this.state.planid)\n\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                var result = JSON.parse(this.responseText);\n                console.log(result);\n                if (result.length == 0) {\n                    that.setState({\n                        error: true,\n                    })\n\n                } else {\n\n                    that.setState({\n                        result_arr: result,\n                        showtimeSelect: result[0].showtime,\n                        movie: result[0].movie,\n                        cinema: result[0].cinema,\n                    }, () => {\n                        that.getMovieDetails();\n                        that.getCinemaDetails();\n                        that.getParticipantsWithoutUpdatingResult();\n                    });\n\n                }\n\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/retrievebyid.php?planid=\" + that.state.planid, true);\n        request.send();\n\n    }\n\n\n    getCinemaDetails() {\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/cinemas/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            var cinema_Arr = resp.cinemas;\n            // console.log(cinema_Arr)\n            for (let i = 0; i < cinema_Arr.length; i++) {\n                // console.log(cinema_Arr[i].name)\n                if (this.state.cinema.toLowerCase() == cinema_Arr[i].name.toLowerCase()) {\n                    this.setState({\n                        cinemaDetails: cinema_Arr[i],\n                    });\n                }\n            }\n\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n    }\n\n    getMovieDetails() {\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \" https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            var movie_Arr = resp.movies;\n            for (let i = 0; i < movie_Arr.length; i++) {\n                if (this.state.movie == movie_Arr[i].title) {\n                    this.setState({\n                        movieDetails: movie_Arr[i],\n                    });\n                }\n            }\n\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n\n    }\n\n\n}\n\nexport default PlanToMeet;"]},"metadata":{},"sourceType":"module"}