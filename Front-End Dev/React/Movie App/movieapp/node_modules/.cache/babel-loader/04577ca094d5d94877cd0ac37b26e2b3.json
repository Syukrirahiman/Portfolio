{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Review.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass Review extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review_result: '',\n      movie_is_details: this.props.location.state.selected_movie,\n      imdb_id: '',\n      movie_omdb_details: {},\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n      //api key of international showtimes\n      apikeyOMDB: '9e790f8b'\n    }; // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.movie_is_details);\n    this.getIMDBId();\n  }\n\n  displayDetail() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n\n    if (this.state.movie_omdb_details.Title) {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3 float-left\",\n        src: this.state.movie_details.Poster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.movie_details.Title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Release date:\"), \"  \", this.state.movie_details.Released, \"  \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"IMDB Rating:\"), \"  \", this.state.movie_details.imdbRating, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Runtime:\"), \"  \", this.state.movie_details.Runtime, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Rated:\"), \"  \", this.state.movie_details.Rated, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Genre:\"), \"  \", this.state.movie_details.Genre, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Director:\"), \"  \", this.state.movie_details.Director, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Production:\"), \"  \", this.state.movie_details.Production, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Language:\"), \"  \", this.state.movie_details.Language, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Plot:\"), \" \", this.state.movie_details.Plot)))));\n    }\n  }\n\n  displayResult() {\n    if (this.state.review_result.rawReviews) {\n      return this.state.review_result.rawReviews[0].author;\n    }\n  }\n\n  render() {\n    // const test = this.getData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.displayDetail(), this.displayResult(), console.log(this.state.review_result));\n  }\n\n  getIMDBId() {\n    var movie_id = this.state.movie_is_details.id;\n    var xhr = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        imdb_id: resp.movie.imdb_id\n      }, () => {\n        this.getReviewResult();\n      });\n      var xhr2 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n      xhr2.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var resp = JSON.parse(xhr2.responseText);\n        this.setState({\n          movie_omdb_details: resp\n        });\n        console.log(this.state);\n      });\n      xhr2.open('GET', urlMovieDetails);\n      xhr2.send();\n    });\n    xhr.open('GET', urlmoviedetails);\n    xhr.send();\n  }\n\n  getReviewResult() {\n    var imdb_id = this.state.imdb_id;\n    console.log(imdb_id);\n    var results = \"nil\";\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        console.log(\"yo\");\n        var dataObj = JSON.parse(this.responseText);\n        console.log(dataObj);\n        results = dataObj;\n        that.setState({\n          review_result: results\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/review.php?imdb_id=\" + imdb_id, true);\n    request.send();\n  }\n\n}\n\nexport default Review;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Review.js"],"names":["React","axios","Table","Jumbotron","Container","Row","Col","Button","MDBCardImage","Review","Component","constructor","props","state","review_result","movie_is_details","location","selected_movie","imdb_id","movie_omdb_details","apikeyIS","apikeyOMDB","componentDidMount","console","log","getIMDBId","displayDetail","bold","fontWeight","center","textAlign","Title","movie_details","Poster","Released","imdbRating","Runtime","Rated","Genre","Director","Production","Language","Plot","displayResult","rawReviews","author","render","movie_id","id","xhr","XMLHttpRequest","urlmoviedetails","addEventListener","resp","JSON","parse","responseText","setState","movie","getReviewResult","xhr2","urlMovieDetails","open","send","results","that","request","onreadystatechange","readyState","status","dataObj"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass Review extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            review_result: '',\n            movie_is_details: this.props.location.state.selected_movie,\n            imdb_id: '',\n            movie_omdb_details: {},\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK', //api key of international showtimes\n            apikeyOMDB: '9e790f8b',\n        };\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(this.state.movie_is_details)\n        this.getIMDBId();\n    }\n\n    displayDetail(){\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n\n        if (this.state.movie_omdb_details.Title) {\n\n\n            return (\n\n                <Jumbotron fluid>\n\n                    <Container>\n                        <Row>\n                            <Col>\n\n\n                                <MDBCardImage\n                                    className=\"img-fluid pb-3 float-left\"\n                                    src={this.state.movie_details.Poster}\n                                />\n\n                            </Col>\n                            <Col xs={7}>\n\n                                <h1>{this.state.movie_details.Title}</h1>\n\n                                <p><span style={bold}>Release date:</span>  {this.state.movie_details.Released}  </p>\n                                <p> <span style={bold}>IMDB Rating:</span>  {this.state.movie_details.imdbRating} </p>\n                                <p> <span style={bold}>Runtime:</span>  {this.state.movie_details.Runtime} </p>\n                                <p> <span style={bold}>Rated:</span>  {this.state.movie_details.Rated} </p>\n                                <p> <span style={bold}>Genre:</span>  {this.state.movie_details.Genre} </p>\n                                <p> <span style={bold}>Director:</span>  {this.state.movie_details.Director} </p>\n                                <p> <span style={bold}>Production:</span>  {this.state.movie_details.Production} </p>\n                                <p> <span style={bold}>Language:</span>  {this.state.movie_details.Language} </p>\n\n                                <p><span style={bold}>Plot:</span> {this.state.movie_details.Plot}</p>\n\n\n                            </Col>\n\n\n                        </Row>\n\n                    </Container>\n                </Jumbotron>\n\n\n            )\n        }\n    }\n\n    displayResult() {\n        if (this.state.review_result.rawReviews) {\n            return this.state.review_result.rawReviews[0].author;\n        }\n    }\n    render() {\n\n        // const test = this.getData;\n        return (\n\n            <div>\n                {this.displayDetail()}\n                {this.displayResult()}\n                {console.log(this.state.review_result)}\n                {/* <h1>{this.state.name}</h1> */}\n            </div>\n\n        )\n\n    }\n\n    getIMDBId(){\n        var movie_id = this.state.movie_is_details.id;\n        var xhr = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                imdb_id: resp.movie.imdb_id,\n            },()=>{\n                this.getReviewResult();\n            });\n\n            var xhr2 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n            xhr2.addEventListener('load', () => {\n                // update the state of the component with the result here\n\n\n                var resp = JSON.parse(xhr2.responseText);\n                this.setState({\n                    movie_omdb_details: resp,\n                });\n\n                console.log(this.state);\n            })\n            xhr2.open('GET', urlMovieDetails)\n            xhr2.send()\n\n        })\n        xhr.open('GET', urlmoviedetails)\n        xhr.send()\n    }\n\n    getReviewResult() {\n        var imdb_id = this.state.imdb_id;\n        console.log(imdb_id);\n        var results = \"nil\";\n        var that = this;\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                console.log(\"yo\")\n                var dataObj = JSON.parse(this.responseText);\n                console.log(dataObj);\n                results = dataObj;\n                that.setState({\n                    review_result: results\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/review.php?imdb_id=\"+imdb_id, true);\n        request.send();\n\n\n\n    }\n\n}\n\nexport default Review;"]},"metadata":{},"sourceType":"module"}