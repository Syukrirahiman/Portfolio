{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/FormPlan.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\n\nclass FormPlan extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cinema: this.props.location.state.cinema,\n      movie_id: this.props.location.state.movie_id,\n      result: [],\n      cinema_id: '',\n      city_id: '',\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n      apikeyOMDB: '9e790f8b',\n      imdbid: '',\n      movie_details: {\n        Title: ''\n      },\n      dateFrom: '',\n      dateTo: '',\n      noOfParticipants: '',\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var results = \"nil\";\n    var dateFrom = this.state.dateFrom;\n    var dateTo = this.state.dateTo;\n    var showtimes = this.state.result;\n    this.generateShowtimes(dateFrom, dateTo, showtimes); // var that = this;\n    // var request = new XMLHttpRequest();\n    // var params = \"cinema=\"+this.state.cinema+\"&cinemaId=\"+this.state.cinema_id+\"&dateFrom\"+this.state.\n    // request.onreadystatechange = function () {\n    //     if (this.readyState == 4 && this.status == 200) {\n    //         console.log(\"yo\")\n    //         var dataObj = JSON.parse(this.responseText);\n    //         console.log(dataObj);\n    //         results = dataObj;\n    //         that.setState({\n    //             redirect: true,\n    //         })\n    //     }\n    // }\n    // request.open(\"GET\", \"http://localhost/Project/review.php?\", true);\n    // request.send();\n  }\n\n  generateShowtimes(dateFrom, dateTo, showtimes) {\n    var from = new Date(dateFrom);\n    var to = new Date(dateTo); // console.log((date.getMonth()+1) + '/' + date.getDate() + '/' +  date.getFullYear())\n\n    console.log(from);\n    console.log(to);\n    console.log(showtimes);\n\n    for (let i = 0; i < showtimes.length; i++) {\n      var showtime = showtimes[i].start_at;\n      showtime = new Date(showtime);\n\n      if (showtime.getDate() <= to.getDate() && showtime.getDate() >= from.getDate()) {\n        console.log(\"in between: \" + showtime);\n      }\n    } // var hours = date.getHours();\n    // var minutes = date.getMinutes();\n    // var ampm = hours >= 12 ? 'pm' : 'am';\n    // hours = hours % 12;\n    // hours = hours ? hours : 12; // the hour '0' should be '12'\n    // minutes = minutes < 10 ? '0' + minutes : minutes;\n    // var strTime = hours + ':' + minutes + ' ' + ampm;\n    // stringDate = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + \" Time: \" + strTime;\n    // return stringDate;\n\n  }\n\n  displayDetail() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n\n    if (this.state.movie_details.Title) {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3 float-left\",\n        src: this.state.movie_details.Poster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.state.movie_details.Title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Release date:\"), \"  \", this.state.movie_details.Released, \"  \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"IMDB Rating:\"), \"  \", this.state.movie_details.imdbRating, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Runtime:\"), \"  \", this.state.movie_details.Runtime, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Rated:\"), \"  \", this.state.movie_details.Rated, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Genre:\"), \"  \", this.state.movie_details.Genre, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Director:\"), \"  \", this.state.movie_details.Director, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Production:\"), \"  \", this.state.movie_details.Production, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Language:\"), \"  \", this.state.movie_details.Language, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Plot:\"), \" \", this.state.movie_details.Plot))), React.createElement(\"div\", {\n        className: \"table1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.movie_details.Title, \" showtimes at \", this.state.cinema, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Timeslot\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.result.map((value, index) => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.printDate(value.start_at)), React.createElement(\"td\", {\n        style: center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-light\",\n        value: value.booking_link,\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Book Now\")))))))));\n    }\n  }\n\n  getMinDate() {\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n\n    var yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    today = yyyy + '-' + mm + '-' + dd;\n    return today;\n  }\n\n  render() {\n    const centralize = {\n      margin: \"auto\",\n      width: \"50%\",\n      textAlign: 'center',\n      paddingTop: \"30px\"\n    };\n    console.log(this.state);\n    return React.createElement(Jumbotron, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Cinema\"), React.createElement(Form.Control, {\n      value: this.state.cinema,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Movie\"), React.createElement(Form.Control, {\n      value: this.state.movie_details.Title,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"dateFrom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Period you're planning to watch: From\"), React.createElement(Form.Control, {\n      type: \"date\",\n      placeholder: \"\",\n      name: \"dateFrom\",\n      min: this.getMinDate(),\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"dateTo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"To\"), React.createElement(Form.Control, {\n      type: \"date\",\n      placeholder: \"\",\n      min: this.getMinDate(),\n      name: \"dateTo\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      controlId: \"formGridAddress2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Amount of participants (including you)\"), React.createElement(Form.Control, {\n      type: \"number\",\n      min: \"1\",\n      placeholder: \"1\",\n      name: \"noOfParticipants\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: centralize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Generate Link\")))));\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    var cinema_name = this.state.cinema;\n    let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + this.state.apikeyIS;\n    var movie_id = this.state.movie_id;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n\n      for (let i = 0; i < resp.cinemas.length; i++) {\n        var cinema = resp.cinemas[i];\n\n        if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\n          this.setState({\n            cinema_id: cinema.id,\n            city_id: cinema.city_id\n          });\n        }\n      }\n\n      console.log(this.state);\n      var xhr2 = new XMLHttpRequest();\n      var city_id = this.state.city_id;\n      console.log(city_id);\n      console.log(movie_id); //get showtimes\n\n      let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\n      xhr2.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var result_arr = [];\n        var resp = JSON.parse(xhr2.responseText);\n        console.log(this.state.cinema_id);\n        console.log(movie_id);\n\n        for (let i = 0; i < resp.showtimes.length; i++) {\n          var showtime = resp.showtimes[i]; // console.log(showtime);\n\n          var showtimeDateFormat = new Date(showtime);\n          var dateNow = Date.now(); // if(showtimeDateFormat > dateNow){\n\n          if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n            result_arr.push(showtime);\n          } // }\n\n        }\n\n        console.log(result_arr);\n        this.setState({\n          result: result_arr\n        });\n      });\n      xhr2.open('GET', urlShowtimes);\n      xhr2.send();\n      console.log(this.state);\n    });\n    xhr.open('GET', urlCinemas);\n    xhr.send(); // get movie details\n\n    var xhr3 = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    xhr3.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr3.responseText);\n      this.setState({\n        imdbid: resp.movie.imdb_id\n      });\n      console.log(this.state.imdbid);\n      var xhr4 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdbid + \"&apikey=\" + this.state.apikeyOMDB;\n      xhr4.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var resp = JSON.parse(xhr4.responseText);\n        this.setState({\n          movie_details: resp\n        });\n        console.log(this.state);\n      });\n      xhr4.open('GET', urlMovieDetails);\n      xhr4.send();\n    });\n    xhr3.open('GET', urlmoviedetails);\n    xhr3.send();\n  }\n\n  displayShowtimes() {\n    // this.getData();\n    let r = this.state.result;\n    var test = '';\n    var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\n    console.log(r);\n\n    for (let i = 0; i < r.length; i++) {\n      result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\n      test += i + 1 + \" \" + r[i].start_at + \" \";\n    }\n\n    result += \"</table>\"; // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\n\n    return result; // this.document.getElementById(\"showtime\").innerHTML = result;\n  }\n\n}\n\nexport default FormPlan;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/FormPlan.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Form","MDBCardImage","FormPlan","Component","constructor","props","state","cinema","location","movie_id","result","cinema_id","city_id","apikeyIS","apikeyOMDB","imdbid","movie_details","Title","dateFrom","dateTo","noOfParticipants","redirect","handleChange","bind","handleSubmit","componentDidMount","getData","event","target","name","value","setState","preventDefault","results","showtimes","generateShowtimes","from","Date","to","console","log","i","length","showtime","start_at","getDate","displayDetail","bold","fontWeight","center","textAlign","Poster","Released","imdbRating","Runtime","Rated","Genre","Director","Production","Language","Plot","map","index","printDate","booking_link","getMinDate","today","dd","mm","getMonth","yyyy","getFullYear","render","centralize","margin","width","paddingTop","xhr","XMLHttpRequest","cinema_name","urlCinemas","addEventListener","resp","JSON","parse","responseText","cinemas","toLowerCase","id","xhr2","urlShowtimes","result_arr","showtimeDateFormat","dateNow","now","push","open","send","xhr3","urlmoviedetails","movie","imdb_id","xhr4","urlMovieDetails","displayShowtimes","r","test"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport { Table, Jumbotron, Container, Row, Col, Button, Form } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\nimport { MDBCardImage } from \"mdbreact\";\n\n\nclass FormPlan extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cinema: this.props.location.state.cinema,\n            movie_id: this.props.location.state.movie_id,\n            result: [],\n            cinema_id: '',\n            city_id: '',\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n            apikeyOMDB: '9e790f8b',\n            imdbid: '',\n            movie_details: { Title: '' },\n            dateFrom: '',\n            dateTo: '',\n            noOfParticipants: '',\n            redirect: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n\n    }\n\n    handleChange(event) {\n\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n\n\n        this.setState({\n            [name]: value,\n        });\n\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        var results = \"nil\";\n        var dateFrom = this.state.dateFrom;\n        var dateTo = this.state.dateTo;\n        var showtimes = this.state.result;\n\n        this.generateShowtimes(dateFrom, dateTo, showtimes);\n\n    \n        // var that = this;\n        // var request = new XMLHttpRequest();\n        // var params = \"cinema=\"+this.state.cinema+\"&cinemaId=\"+this.state.cinema_id+\"&dateFrom\"+this.state.\n\n        // request.onreadystatechange = function () {\n        //     if (this.readyState == 4 && this.status == 200) {\n        //         console.log(\"yo\")\n        //         var dataObj = JSON.parse(this.responseText);\n        //         console.log(dataObj);\n        //         results = dataObj;\n        //         that.setState({\n        //             redirect: true,\n        //         })\n        //     }\n        // }\n        // request.open(\"GET\", \"http://localhost/Project/review.php?\", true);\n        // request.send();\n    }\n\n    generateShowtimes(dateFrom, dateTo, showtimes) {\n\n\n        var from = new Date(dateFrom);\n        var to = new Date(dateTo);\n        // console.log((date.getMonth()+1) + '/' + date.getDate() + '/' +  date.getFullYear())\n        console.log(from)\n        console.log(to)\n        console.log(showtimes)\n\n        for(let i = 0; i<showtimes.length; i++){\n            var showtime = showtimes[i].start_at;\n            showtime = new Date(showtime)\n            if((showtime.getDate() <= to.getDate() && showtime.getDate() >= from.getDate())){\n                console.log(\"in between: \"+showtime)\n            }\n            \n        }\n\n        // var hours = date.getHours();\n        // var minutes = date.getMinutes();\n        // var ampm = hours >= 12 ? 'pm' : 'am';\n        // hours = hours % 12;\n        // hours = hours ? hours : 12; // the hour '0' should be '12'\n        // minutes = minutes < 10 ? '0' + minutes : minutes;\n        // var strTime = hours + ':' + minutes + ' ' + ampm;\n        // stringDate = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + \" Time: \" + strTime;\n\n        // return stringDate;\n\n    }\n\n    displayDetail() {\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n\n        if (this.state.movie_details.Title) {\n\n\n            return (\n\n                <Jumbotron fluid>\n\n                    <Container>\n                        <Row>\n                            <Col>\n\n\n                                <MDBCardImage\n                                    className=\"img-fluid pb-3 float-left\"\n                                    src={this.state.movie_details.Poster}\n                                />\n\n                            </Col>\n                            <Col xs={7}>\n\n                                <h1>{this.state.movie_details.Title}</h1>\n\n                                <p><span style={bold}>Release date:</span>  {this.state.movie_details.Released}  </p>\n                                <p> <span style={bold}>IMDB Rating:</span>  {this.state.movie_details.imdbRating} </p>\n                                <p> <span style={bold}>Runtime:</span>  {this.state.movie_details.Runtime} </p>\n                                <p> <span style={bold}>Rated:</span>  {this.state.movie_details.Rated} </p>\n                                <p> <span style={bold}>Genre:</span>  {this.state.movie_details.Genre} </p>\n                                <p> <span style={bold}>Director:</span>  {this.state.movie_details.Director} </p>\n                                <p> <span style={bold}>Production:</span>  {this.state.movie_details.Production} </p>\n                                <p> <span style={bold}>Language:</span>  {this.state.movie_details.Language} </p>\n\n                                <p><span style={bold}>Plot:</span> {this.state.movie_details.Plot}</p>\n\n\n                            </Col>\n\n\n                        </Row>\n                        <div className=\"table1\">\n                            <h3>{this.state.movie_details.Title} showtimes at {this.state.cinema} </h3>\n                            <br></br>\n\n                            <Table striped bordered hover variant=\"dark\"  >\n                                <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Timeslot</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.result.map((value, index) => (\n                                        <tr>\n                                            <td>\n                                                {index + 1}\n                                            </td>\n                                            <td colSpan=\"2\">{this.printDate(value.start_at)}</td>\n                                            <td style={center}><Button variant=\"outline-light\" value={value.booking_link} onClick={this.handleChange}>Book Now</Button></td>\n                                        </tr>\n                                    ))}\n\n                                </tbody>\n                            </Table>\n                        </div>\n\n\n                    </Container>\n                </Jumbotron>\n\n\n            )\n        }\n\n\n    }\n\n    getMinDate() {\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth() + 1; //January is 0!\n        var yyyy = today.getFullYear();\n        if (dd < 10) {\n            dd = '0' + dd\n        }\n        if (mm < 10) {\n            mm = '0' + mm\n        }\n\n        today = yyyy + '-' + mm + '-' + dd;\n\n        return today;\n    }\n\n    render() {\n        const centralize = {\n            margin: \"auto\",\n            width: \"50%\",\n            textAlign: 'center',\n            paddingTop: \"30px\"\n        };\n\n        console.log(this.state);\n        return (\n            <Jumbotron fluid>\n                <Container>\n                    <Form>\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridEmail\">\n                                <Form.Label>Cinema</Form.Label>\n                                <Form.Control value={this.state.cinema} disabled />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\n                                <Form.Label>Movie</Form.Label>\n                                <Form.Control value={this.state.movie_details.Title} disabled />\n                            </Form.Group>\n                        </Form.Row>\n                        {/* <Form.Label>Enter period you're planning to watch</Form.Label> */}\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"dateFrom\">\n                                <Form.Label>Period you're planning to watch: From</Form.Label>\n                                <Form.Control type=\"date\" placeholder=\"\" name=\"dateFrom\" min={this.getMinDate()} onChange={this.handleChange} />\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"dateTo\">\n                                <Form.Label>To</Form.Label>\n                                <Form.Control type=\"date\" placeholder=\"\" min={this.getMinDate()} name=\"dateTo\" onChange={this.handleChange}/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"formGridAddress2\">\n                            <Form.Label>Amount of participants (including you)</Form.Label>\n                            <Form.Control type=\"number\" min=\"1\" placeholder=\"1\" name=\"noOfParticipants\" onChange={this.handleChange}/>\n                        </Form.Group>\n\n                        <div style={centralize}>\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handleSubmit}>\n                                Generate Link\n                        </Button>\n                        </div>\n                    </Form>\n                </Container>\n            </Jumbotron>\n\n\n\n        )\n\n    }\n\n\n\n    getData() {\n        var xhr = new XMLHttpRequest()\n        var cinema_name = this.state.cinema;\n        let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + this.state.apikeyIS;\n        var movie_id = this.state.movie_id;\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            for (let i = 0; i < resp.cinemas.length; i++) {\n                var cinema = resp.cinemas[i];\n                if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\n                    this.setState({\n                        cinema_id: cinema.id,\n                        city_id: cinema.city_id,\n                    });\n                }\n\n            }\n\n            console.log(this.state);\n\n            var xhr2 = new XMLHttpRequest()\n            var city_id = this.state.city_id;\n\n\n            console.log(city_id)\n            console.log(movie_id)\n\n            //get showtimes\n            let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\n            xhr2.addEventListener('load', () => {\n                // update the state of the component with the result here\n                var result_arr = [];\n                var resp = JSON.parse(xhr2.responseText);\n                console.log(this.state.cinema_id)\n                console.log(movie_id)\n                for (let i = 0; i < resp.showtimes.length; i++) {\n                    var showtime = resp.showtimes[i];\n                    // console.log(showtime);\n                    var showtimeDateFormat = new Date(showtime);\n                    var dateNow = Date.now();\n                    // if(showtimeDateFormat > dateNow){\n\n\n                    if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n                        result_arr.push(showtime);\n                    }\n                    // }\n\n                }\n\n                console.log(result_arr);\n\n                this.setState({\n                    result: result_arr,\n                });\n\n            })\n            xhr2.open('GET', urlShowtimes)\n            xhr2.send()\n\n            console.log(this.state);\n\n\n\n        })\n        xhr.open('GET', urlCinemas)\n        xhr.send()\n\n\n\n\n\n        // get movie details\n        var xhr3 = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n\n        xhr3.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr3.responseText);\n            this.setState({\n                imdbid: resp.movie.imdb_id,\n            });\n\n            console.log(this.state.imdbid);\n\n            var xhr4 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdbid + \"&apikey=\" + this.state.apikeyOMDB;\n            xhr4.addEventListener('load', () => {\n                // update the state of the component with the result here\n\n\n                var resp = JSON.parse(xhr4.responseText);\n                this.setState({\n                    movie_details: resp,\n                });\n\n                console.log(this.state);\n            })\n            xhr4.open('GET', urlMovieDetails)\n            xhr4.send()\n\n        })\n        xhr3.open('GET', urlmoviedetails)\n        xhr3.send()\n\n\n\n\n\n\n\n\n\n\n    }\n\n    displayShowtimes() {\n\n        // this.getData();\n        let r = this.state.result;\n        var test = '';\n        var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\n        console.log(r);\n        for (let i = 0; i < r.length; i++) {\n            result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\n            test += (i + 1) + \" \" + r[i].start_at + \" \";\n        }\n        result += \"</table>\";\n\n        // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\n\n        return result;\n\n        // this.document.getElementById(\"showtime\").innerHTML = result;\n    }\n}\n\nexport default FormPlan;"]},"metadata":{},"sourceType":"module"}