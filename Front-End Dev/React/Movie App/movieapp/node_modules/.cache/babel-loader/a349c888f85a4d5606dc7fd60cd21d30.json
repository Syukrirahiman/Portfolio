{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/NowShowing.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n// import { MDBCardImage} from \"mdbreact\";\n\nimport { Redirect } from 'react-router';\n\nclass NowShowing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n      apikeyOMDB: '9e790f8b',\n      now_showing_movie_arr: [],\n      selected_movie: '',\n      redirect: false,\n      omdb_details_arr: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const movie = this.state.omdb_details_arr[value];\n    this.setState({\n      selected_movie: movie,\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      console.log(this.state);\n      console.log(this.state.selected_movie);\n      return React.createElement(Redirect, {\n        push: true,\n        from: \"/\",\n        to: {\n          pathname: '/reviews',\n          state: {\n            selected_movie: this.state.selected_movie\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n    return React.createElement(\"div\", {\n      className: \"table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Movie\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.omdb_details_arr.map((value, index) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: value.Poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), value.Title), React.createElement(\"td\", {\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-light\",\n      value: index,\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"View Review\")))))));\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        now_showing_movie_arr: resp.movies\n      }, () => {\n        this.getOMDBDetails();\n      });\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  getOMDBDetails() {\n    var now_showing_arr = this.state.now_showing_movie_arr;\n    result = [];\n\n    for (let i = 0; i < now_showing_arr.length; i++) {\n      var movie = now_showing_arr[i];\n      this.getDetails(movie);\n    }\n  }\n\n  getDetails(movie) {\n    var movie_omdb_details = '';\n    var movie_id = movie.id;\n    var xhr = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    var omdb_details_arr = this.state.omdb_details_arr;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      var imdb_id = resp.movie.imdb_id; // console.log(imdb_id)\n\n      var xhr2 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n      xhr2.addEventListener('load', () => {\n        var resp = JSON.parse(xhr2.responseText);\n        movie_omdb_details = resp; // console.log(movie_omdb_details)\n        // return movie_omdb_details;\n\n        omdb_details_arr.push(movie_omdb_details);\n        this.setState({\n          omdb_details_arr: omdb_details_arr\n        });\n      });\n      xhr2.open('GET', urlMovieDetails);\n      xhr2.send();\n    });\n    xhr.open('GET', urlmoviedetails);\n    xhr.send(); // return movie_omdb_details;\n  }\n\n}\n\nexport default NowShowing;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/NowShowing.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Redirect","NowShowing","Component","constructor","props","state","apikeyIS","apikeyOMDB","now_showing_movie_arr","selected_movie","redirect","omdb_details_arr","handleChange","bind","componentDidMount","getData","event","target","value","movie","setState","render","console","log","pathname","bold","fontWeight","center","textAlign","map","index","Poster","Title","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","movies","getOMDBDetails","open","send","now_showing_arr","result","i","length","getDetails","movie_omdb_details","movie_id","id","urlmoviedetails","imdb_id","xhr2","urlMovieDetails","push"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\n// import { MDBCardImage} from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\n\nclass NowShowing extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n            apikeyOMDB: '9e790f8b',\n            now_showing_movie_arr: [],\n            selected_movie: '',\n            redirect: false,\n            omdb_details_arr: [],\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n\n    }\n\n    handleChange(event) {\n\n        const target = event.target;\n        const value = target.value;\n        const movie = this.state.omdb_details_arr[value]\n\n        this.setState({\n            selected_movie: movie,\n            redirect: true,\n        });\n\n    }\n\n\n\n    render() {\n\n        if (this.state.redirect) {\n            console.log(this.state);\n            console.log(this.state.selected_movie);\n            return (\n                <Redirect push from='/' to={{\n                    pathname: '/reviews',\n                    state: {\n                        selected_movie: this.state.selected_movie,\n                    }\n                }} />\n            )\n\n        }\n\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n        return (\n\n            <div className=\"table1\">\n                <Table striped bordered hover variant=\"dark\"  >\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Movie</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.omdb_details_arr.map((value, index) => (\n                            <tr>\n                                <td>\n                                    {index + 1}\n                                </td>\n                                <td colSpan=\"2\">\n                                    <img src={value.Poster} />\n\n\n                                    {/* <MDBCardImage\n                                className=\"img-fluid pb-3 float-left\"\n                                src={value.poster_image_thumbnail}/> */}\n\n\n                                    {value.Title}</td>\n                                <td style={center}><Button variant=\"outline-light\" value={index} onClick={this.handleChange}>View Review</Button></td>\n                            </tr>\n                        ))}\n\n                    </tbody>\n                </Table>\n            </div>\n\n        )\n\n\n\n    }\n\n\n\n    getData() {\n\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                now_showing_movie_arr: resp.movies,\n            }, () => {\n                this.getOMDBDetails();\n            });\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n\n\n    }\n\n    getOMDBDetails(){\n        var now_showing_arr = this.state.now_showing_movie_arr;\n        result = [];\n\n        for(let i = 0; i<now_showing_arr.length; i++){\n            var movie = now_showing_arr[i];\n            this.getDetails(movie);\n\n\n        }\n    }\n\n\n\n    getDetails(movie) {\n        var movie_omdb_details = '';\n        var movie_id = movie.id;\n        var xhr = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n        var omdb_details_arr = this.state.omdb_details_arr;\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            var imdb_id = resp.movie.imdb_id\n            // console.log(imdb_id)\n\n            var xhr2 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n            xhr2.addEventListener('load', () => {\n                var resp = JSON.parse(xhr2.responseText);\n                movie_omdb_details = resp;\n                // console.log(movie_omdb_details)\n                // return movie_omdb_details;\n       \n                omdb_details_arr.push(movie_omdb_details);\n              \n\n                this.setState({\n                    omdb_details_arr: omdb_details_arr,\n                })\n\n            })\n            xhr2.open('GET', urlMovieDetails)\n            xhr2.send()\n\n        })\n        xhr.open('GET', urlmoviedetails)\n        xhr.send()\n\n        // return movie_omdb_details;\n    }\n\n\n\n}\n\nexport default NowShowing;"]},"metadata":{},"sourceType":"module"}