{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Slider.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Carousel, Button, Jumbotron, Col, Row, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass RecommendMovies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n      apikeyOMDB: '9e790f8b',\n      movie_arr: [],\n      redirect: false,\n      selected_movie: '',\n      top_rated_movies: [],\n      current_omdb_details: '',\n      toptreshhold: 6\n    }; // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const carouselitem = {\n      width: \"100%\",\n      height: 600,\n      backgroundColor: \"rgb(249, 249, 249)\"\n    };\n    const centralize = {\n      margin: \"auto\",\n      width: \"100%\",\n      textAlign: 'center' // paddingTop: \"20px\"\n\n    };\n    const font = {\n      color: \"black\",\n      paddingTop: \"20px\"\n    };\n    const image = {\n      // width: 50,\n      height: 350\n    };\n    console.log(this.state);\n\n    if (this.state.top_rated_movies.length > 5) {\n      var topRatedArr = this.state.top_rated_movies;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Container, {\n        style: centralize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Top Rated Movies\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[0].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, topRatedArr[0].Title)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[1].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, topRatedArr[1].Title)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[2].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, topRatedArr[2].Title)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[3].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, topRatedArr[3].Title)), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3\",\n        src: topRatedArr[4].Poster,\n        style: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"figcaption\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, topRatedArr[4].Title))))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    });\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        movie_arr: resp.movies\n      }, () => {\n        this.getTopRatedMovies();\n      });\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  getTopRatedMovies() {\n    var movie_arr = this.state.movie_arr;\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movie = movie_arr[i];\n      console.log(this.state.top_rated_movies.length);\n\n      if (this.state.top_rated_movies.length > 5) {\n        break;\n      }\n\n      this.getIMDBIDetails(movie);\n    } // this.setState({\n    //     top_rated_movies: result,\n    // })\n    // console.log(result)\n\n  }\n\n  getIMDBIDetails(movie) {\n    var movie_omdb_details = 'hey';\n    var movie_id = movie.id;\n    var xhr = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    var that = this;\n    var top_rated_movies = this.state.top_rated_movies;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      var imdb_id = resp.movie.imdb_id; // console.log(imdb_id)\n\n      var xhr2 = new XMLHttpRequest(); //get movie details from imdb\n\n      let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n      xhr2.addEventListener('load', () => {\n        var resp = JSON.parse(xhr2.responseText);\n        movie_omdb_details = resp; // console.log(movie_omdb_details)\n        // return movie_omdb_details;\n\n        if (movie_omdb_details.imdbRating) {\n          if (movie_omdb_details.imdbRating >= this.state.toptreshhold) {\n            top_rated_movies.push(movie_omdb_details);\n          }\n        }\n\n        this.setState({\n          top_rated_movies: top_rated_movies\n        });\n      });\n      xhr2.open('GET', urlMovieDetails);\n      xhr2.send();\n    });\n    xhr.open('GET', urlmoviedetails);\n    xhr.send(); // return movie_omdb_details;\n  }\n\n}\n\nexport default RecommendMovies;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/RecommendMovies.js"],"names":["React","ReactDOM","Navbar","Carousel","Button","Jumbotron","Col","Row","Container","Link","MDBCardImage","RecommendMovies","Component","constructor","props","state","apikeyIS","apikeyOMDB","movie_arr","redirect","selected_movie","top_rated_movies","current_omdb_details","toptreshhold","componentDidMount","getData","render","carouselitem","width","height","backgroundColor","centralize","margin","textAlign","font","color","paddingTop","image","console","log","length","topRatedArr","Poster","Title","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","setState","movies","getTopRatedMovies","open","send","i","movie","getIMDBIDetails","movie_omdb_details","movie_id","id","urlmoviedetails","that","imdb_id","xhr2","urlMovieDetails","imdbRating","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Slider.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Carousel, Button, Jumbotron, Col, Row, Container } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { MDBCardImage } from \"mdbreact\";\n\nclass RecommendMovies extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK',\n            apikeyOMDB: '9e790f8b',\n            movie_arr: [],\n            redirect: false,\n            selected_movie: '',\n            top_rated_movies: [],\n            current_omdb_details: '',\n            toptreshhold: 6,\n        };\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    render() {\n\n        const carouselitem = {\n            width: \"100%\",\n            height: 600,\n            backgroundColor: \"rgb(249, 249, 249)\",\n        };\n\n        const centralize = {\n            margin: \"auto\",\n            width: \"100%\",\n            textAlign: 'center',\n            // paddingTop: \"20px\"\n        };\n\n        const font = {\n            color: \"black\",\n            paddingTop: \"20px\",\n        }\n\n        const image = {\n            // width: 50,\n            height: 350\n        };\n\n        console.log(this.state);\n\n        if (this.state.top_rated_movies.length > 5) {\n            var topRatedArr  = this.state.top_rated_movies;\n            return (\n                <div>\n                    <Jumbotron fluid>\n                        <Container style={centralize}>\n                            <h2 >Top Rated Movies</h2>\n                            <br></br>\n                            <Row>\n                                <Col>\n\n                                    <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[0].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>{topRatedArr[0].Title}</figcaption>\n                                    \n                                </Col>\n\n                                <Col>\n\n                                    <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[1].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>{topRatedArr[1].Title}</figcaption>\n                                </Col>\n\n                                <Col>\n\n                                    <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[2].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>{topRatedArr[2].Title}</figcaption>\n                                </Col>\n\n                                <Col>\n\n                                    <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[3].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>{topRatedArr[3].Title}</figcaption>\n                                </Col>\n\n                                <Col>\n\n                                    <MDBCardImage\n                                        className=\"img-fluid pb-3\"\n                                        src={topRatedArr[4].Poster}\n                                        style={image}\n                                    />\n                                    <figcaption>{topRatedArr[4].Title}</figcaption>\n                                </Col>\n\n\n                            </Row>\n                        </Container>\n                    </Jumbotron>\n                </div>\n            )\n        }\n\n        return (\n            <div></div>\n\n        )\n\n    }\n\n    getData() {\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                movie_arr: resp.movies,\n            }, () => {\n                this.getTopRatedMovies();\n            });\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n    }\n\n    getTopRatedMovies() {\n        var movie_arr = this.state.movie_arr;\n\n        for (let i = 0; i < movie_arr.length; i++) {\n            var movie = movie_arr[i];\n            console.log(this.state.top_rated_movies.length)\n            if (this.state.top_rated_movies.length > 5) {\n                break;\n            }\n            this.getIMDBIDetails(movie);\n\n        }\n\n        // this.setState({\n        //     top_rated_movies: result,\n        // })\n\n        // console.log(result)\n\n    }\n\n\n    getIMDBIDetails(movie) {\n        var movie_omdb_details = 'hey';\n        var movie_id = movie.id;\n        var xhr = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n        var that = this;\n        var top_rated_movies = this.state.top_rated_movies;\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            var imdb_id = resp.movie.imdb_id\n            // console.log(imdb_id)\n\n            var xhr2 = new XMLHttpRequest()\n\n            //get movie details from imdb\n            let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + imdb_id + \"&apikey=\" + this.state.apikeyOMDB;\n            xhr2.addEventListener('load', () => {\n                var resp = JSON.parse(xhr2.responseText);\n                movie_omdb_details = resp;\n                // console.log(movie_omdb_details)\n                // return movie_omdb_details;\n                if (movie_omdb_details.imdbRating) {\n                    if (movie_omdb_details.imdbRating >= this.state.toptreshhold) {\n                        top_rated_movies.push(movie_omdb_details);\n                    }\n                }\n\n                this.setState({\n                    top_rated_movies: top_rated_movies,\n                })\n\n            })\n            xhr2.open('GET', urlMovieDetails)\n            xhr2.send()\n\n        })\n        xhr.open('GET', urlmoviedetails)\n        xhr.send()\n\n        // return movie_omdb_details;\n    }\n\n}\n\nexport default RecommendMovies;"]},"metadata":{},"sourceType":"module"}