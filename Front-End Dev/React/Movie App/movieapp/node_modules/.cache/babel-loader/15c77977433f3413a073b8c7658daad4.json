{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Review.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Review extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review_result: null,\n      movie_is_details: this.props.location.state.selected_movie,\n      imdb_id: '',\n      apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK' //api key of international showtimes\n\n    }; // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.movie_is_details);\n    this.getIMDBId();\n  }\n\n  displayResult() {\n    if (this.state.result.rawReviews) {\n      return this.state.result.rawReviews[0].author;\n    }\n  }\n\n  render() {\n    // const test = this.getData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.displayResult(), console.log(this.state.result));\n  }\n\n  getIMDBId() {\n    var movie_id = this.state.movie_is_details.id;\n    var xhr = new XMLHttpRequest();\n    let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        imdb_id: resp.movie.imdb_id\n      }, () => {\n        this.getReviewResult();\n      });\n    });\n    xhr.open('GET', urlmoviedetails);\n    xhr.send();\n  }\n\n  getr() {\n    var imdb_id = this.state.imdb_id;\n    console.log(imdb_id);\n    var results = \"nil\";\n    var that = this;\n    var request = new XMLHttpRequest();\n\n    request.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        console.log(\"yo\");\n        var dataObj = JSON.parse(this.responseText);\n        console.log(dataObj);\n        results = dataObj;\n        that.setState({\n          result: results\n        });\n      }\n    };\n\n    request.open(\"GET\", \"http://localhost/Project/review.php?imdb_id=\" + imdb_id, true);\n    request.send();\n  }\n\n}\n\nexport default Review;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Review.js"],"names":["React","axios","Review","Component","constructor","props","state","review_result","movie_is_details","location","selected_movie","imdb_id","apikeyIS","componentDidMount","console","log","getIMDBId","displayResult","result","rawReviews","author","render","movie_id","id","xhr","XMLHttpRequest","urlmoviedetails","addEventListener","resp","JSON","parse","responseText","setState","movie","getReviewResult","open","send","getr","results","that","request","onreadystatechange","readyState","status","dataObj"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,IADN;AAETC,MAAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWI,QAAX,CAAoBH,KAApB,CAA0BI,cAFnC;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,QAAQ,EAAE,kCAJD,CAIqC;;AAJrC,KAAb,CAFe,CAQf;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWE,gBAAvB;AACA,SAAKQ,SAAL;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKX,KAAL,CAAWY,MAAX,CAAkBC,UAAtB,EAAkC;AAC9B,aAAO,KAAKb,KAAL,CAAWY,MAAX,CAAkBC,UAAlB,CAA6B,CAA7B,EAAgCC,MAAvC;AACH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AAEL;AACA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,aAAL,EADL,EAEKH,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWY,MAAvB,CAFL,CAFJ;AAUH;;AAEDF,EAAAA,SAAS,GAAE;AACP,QAAIM,QAAQ,GAAG,KAAKhB,KAAL,CAAWE,gBAAX,CAA4Be,EAA3C;AACA,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACA,QAAIC,eAAe,GAAG,sDAAsDJ,QAAtD,GAAiE,yBAAjE,GAA6F,KAAKhB,KAAL,CAAWM,QAA9H;AAEAY,IAAAA,GAAG,CAACG,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AAC/B;AACA,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,YAAf,CAAX;AACA,WAAKC,QAAL,CAAc;AACVrB,QAAAA,OAAO,EAAEiB,IAAI,CAACK,KAAL,CAAWtB;AADV,OAAd,EAEE,MAAI;AACF,aAAKuB,eAAL;AACH,OAJD;AAMH,KATD;AAUAV,IAAAA,GAAG,CAACW,IAAJ,CAAS,KAAT,EAAgBT,eAAhB;AACAF,IAAAA,GAAG,CAACY,IAAJ;AACH;;AAEDC,EAAAA,IAAI,GAAG;AACH,QAAI1B,OAAO,GAAG,KAAKL,KAAL,CAAWK,OAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAI2B,OAAO,GAAG,KAAd;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,OAAO,GAAG,IAAIf,cAAJ,EAAd;;AACAe,IAAAA,OAAO,CAACC,kBAAR,GAA6B,YAAY;AACrC,UAAI,KAAKC,UAAL,IAAmB,CAAnB,IAAwB,KAAKC,MAAL,IAAe,GAA3C,EAAgD;AAC5C7B,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,YAAI6B,OAAO,GAAGf,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAd;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY6B,OAAZ;AACAN,QAAAA,OAAO,GAAGM,OAAV;AACAL,QAAAA,IAAI,CAACP,QAAL,CAAc;AACVd,UAAAA,MAAM,EAAEoB;AADE,SAAd;AAGH;AACJ,KAVD;;AAWAE,IAAAA,OAAO,CAACL,IAAR,CAAa,KAAb,EAAoB,iDAA+CxB,OAAnE,EAA4E,IAA5E;AACA6B,IAAAA,OAAO,CAACJ,IAAR;AAIH;;AA/EgC;;AAmFrC,eAAelC,MAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass Review extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            review_result: null,\n            movie_is_details: this.props.location.state.selected_movie,\n            imdb_id: '',\n            apikeyIS: '5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK', //api key of international showtimes\n        };\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(this.state.movie_is_details)\n        this.getIMDBId();\n    }\n\n    displayResult() {\n        if (this.state.result.rawReviews) {\n            return this.state.result.rawReviews[0].author;\n        }\n    }\n    render() {\n\n        // const test = this.getData;\n        return (\n\n            <div>\n                {this.displayResult()}\n                {console.log(this.state.result)}\n                {/* <h1>{this.state.name}</h1> */}\n            </div>\n\n        )\n\n    }\n\n    getIMDBId(){\n        var movie_id = this.state.movie_is_details.id;\n        var xhr = new XMLHttpRequest();\n        let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n\n        xhr.addEventListener('load', () => {\n            // update the state of the component with the result here\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                imdb_id: resp.movie.imdb_id,\n            },()=>{\n                this.getReviewResult();\n            });\n\n        })\n        xhr.open('GET', urlmoviedetails)\n        xhr.send()\n    }\n\n    getr() {\n        var imdb_id = this.state.imdb_id;\n        console.log(imdb_id);\n        var results = \"nil\";\n        var that = this;\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                console.log(\"yo\")\n                var dataObj = JSON.parse(this.responseText);\n                console.log(dataObj);\n                results = dataObj;\n                that.setState({\n                    result: results\n                })\n            }\n        }\n        request.open(\"GET\", \"http://localhost/Project/review.php?imdb_id=\"+imdb_id, true);\n        request.send();\n\n\n\n    }\n\n}\n\nexport default Review;"]},"metadata":{},"sourceType":"module"}