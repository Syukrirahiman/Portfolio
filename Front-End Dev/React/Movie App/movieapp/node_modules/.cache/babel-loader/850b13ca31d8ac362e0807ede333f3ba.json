{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/NowShowing.js\";\nimport React from 'react';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n// import { MDBCardImage} from \"mdbreact\";\n\nimport { Redirect } from 'react-router';\n\nclass NowShowing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n      movie_arr: [],\n      selected_movie: '',\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const movie = this.state.movie_arr[value];\n    this.setState({\n      selected_movie: movie,\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      console.log(this.state);\n      console.log(this.state.selected_movie);\n      return React.createElement(Redirect, {\n        push: true,\n        from: \"/\",\n        to: {\n          pathname: '/reviews',\n          state: {\n            selected_movie: this.state.selected_movie\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    }\n\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n    return React.createElement(\"div\", {\n      className: \"table1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Movie\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.movie_arr.map((value, index) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, index + 1), React.createElement(\"td\", {\n      colSpan: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: value.poster_image_thumbnail,\n      onError: e => {\n        e.target.onerror = null;\n        e.target.src = \"./img/noposter.jpg\";\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), value.title), React.createElement(\"td\", {\n      style: center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-light\",\n      value: index,\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"View Review\")))))));\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n    xhr.addEventListener('load', () => {\n      var resp = JSON.parse(xhr.responseText);\n      this.setState({\n        movie_arr: resp.movies\n      }, () => {\n        this.checkTitleNull();\n      });\n    });\n    xhr.open('GET', urlCinema);\n    xhr.send();\n  }\n\n  checkTitleNull() {\n    var movie_arr = this.state.movie_arr;\n    var result = new Array();\n\n    for (let i = 0; i < movie_arr.length; i++) {\n      var movie = movie_arr[i];\n\n      if (movie.title != null) {\n        result.push(movie);\n      }\n    }\n\n    this.setState({\n      movie_arr: result\n    });\n  }\n\n}\n\nexport default NowShowing;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/NowShowing.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","Redirect","NowShowing","Component","constructor","props","state","apikeyIS","movie_arr","selected_movie","redirect","handleChange","bind","componentDidMount","getData","event","target","value","movie","setState","render","console","log","pathname","bold","fontWeight","center","textAlign","map","index","poster_image_thumbnail","e","onerror","src","title","xhr","XMLHttpRequest","urlCinema","addEventListener","resp","JSON","parse","responseText","movies","checkTitleNull","open","send","result","Array","i","length","push"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\n// import Button from '@material-ui/core/Button';\n// import { MDBCardImage} from \"mdbreact\";\nimport { Redirect } from 'react-router';\n\n\nclass NowShowing extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n            movie_arr: [],\n            selected_movie: '',\n            redirect: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getData();\n\n    }\n\n    handleChange(event) {\n\n        const target = event.target;\n        const value = target.value;\n        const movie = this.state.movie_arr[value]\n\n        this.setState({\n            selected_movie: movie,\n            redirect: true,\n        });\n\n    }\n\n    \n\n\n    render() {\n\n        if (this.state.redirect) {\n            console.log(this.state);\n            console.log(this.state.selected_movie);\n            return (\n                <Redirect push from='/' to={{\n                    pathname: '/reviews',\n                    state: {\n                        selected_movie: this.state.selected_movie,\n                    }\n                }} />\n            )\n\n        }\n\n        const bold = {\n            fontWeight: 'bold',\n        };\n\n        const center = {\n            textAlign: 'center',\n        };\n        return (\n\n            <div className=\"table1\">\n                <Table striped bordered hover variant=\"dark\"  >\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Movie</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.movie_arr.map((value, index) => (\n                            <tr>\n                                <td>\n                                    {index + 1}\n                                </td>\n                                <td colSpan=\"2\">\n                                    <img  src={value.poster_image_thumbnail} onError={(e)=>{e.target.onerror = null; e.target.src=\"./img/noposter.jpg\"}}/>\n                                    \n\n                                    {value.title}</td>\n                                <td style={center}><Button variant=\"outline-light\" value={index} onClick={this.handleChange}>View Review</Button></td>\n                            </tr>\n                        ))}\n\n                    </tbody>\n                </Table>\n            </div>\n\n        )\n\n\n\n    }\n\n\n\n    getData() {\n\n        var xhr = new XMLHttpRequest();\n        let urlCinema = \"https://api.internationalshowtimes.com/v4/movies/?countries=SG&apikey=\" + this.state.apikeyIS;\n        xhr.addEventListener('load', () => {\n            var resp = JSON.parse(xhr.responseText);\n            this.setState({\n                movie_arr: resp.movies,\n            }, () => {\n                this.checkTitleNull()\n            });\n        })\n\n        xhr.open('GET', urlCinema);\n        xhr.send();\n\n\n    }\n\n    checkTitleNull(){\n        var movie_arr = this.state.movie_arr;\n        var result = new Array();\n        for(let i = 0; i <movie_arr.length; i++){\n            var movie = movie_arr[i];\n            if(movie.title != null){\n                result.push(movie)\n            }\n        }\n\n        this.setState({\n            movie_arr: result,\n        })\n    }\n\n\n}\n\nexport default NowShowing;"]},"metadata":{},"sourceType":"module"}