{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\Showtimes.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Showtimes.css'; // const cinema = this.props.location.state.cinema;\n// const movie_id = this.props.location.state.movie_id\n\nclass Showtimes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubscriptionChange = dataSource => {\n      var xhr = new XMLHttpRequest();\n      var cinema_name = this.state.cinema;\n      let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n      xhr.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var resp = JSON.parse(xhr.responseText);\n\n        for (let i = 0; i < resp.cinemas.length; i++) {\n          var cinema = resp.cinemas[i];\n\n          if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\n            this.setState({\n              cinema_id: cinema.id,\n              city_id: cinema.city_id\n            });\n          }\n        }\n\n        console.log(this.state);\n      });\n      xhr.open('GET', urlCinemas);\n      xhr.send();\n      var xhr2 = new XMLHttpRequest();\n      var city_id = this.state.city_id;\n      var movie_id = this.state.movie_id;\n      let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n      xhr2.addEventListener('load', () => {\n        // update the state of the component with the result here\n        var result_arr = [];\n        var resp = JSON.parse(xhr2.responseText);\n        console.log(this.state.cinema_id);\n        console.log(movie_id);\n\n        for (let i = 0; i < resp.showtimes.length; i++) {\n          var showtime = resp.showtimes[i]; // console.log(showtime);\n\n          if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n            result_arr.push(showtime);\n          }\n        }\n\n        console.log(result_arr);\n        this.setState({\n          result: result_arr\n        });\n      });\n      xhr2.open('GET', urlShowtimes);\n      xhr2.send();\n      console.log(this.state);\n    };\n\n    this.state = {\n      cinema: this.props.location.state.cinema,\n      movie_id: this.props.location.state.movie_id,\n      result: [],\n      cinema_id: '',\n      city_id: ''\n    };\n  }\n\n  componentDidMount() {\n    // Event listeners are only safe to add after mount,\n    // So they won't leak if mount is interrupted or errors.\n    this.props.dataSource.subscribe(this.handleSubscriptionChange); // External values could change between render and mount,\n    // In some cases it may be important to handle this case.\n\n    if (this.state.subscribedValue !== this.props.dataSource.value) {\n      this.setState({\n        subscribedValue: this.props.dataSource.value\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dataSource.unsubscribe(this.handleSubscriptionChange);\n  }\n\n  render() {\n    // this.displayShowtimes()\n    return React.createElement(\"div\", {\n      id: \"showtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.cinema), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.movie_id), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.cinema_id), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.city_id), React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: this.displayShowtimes()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) // this.displayShowtimes()\n    ; // this.displayShowtimes()\n  }\n\n  displayShowtimes() {\n    // this.getData();\n    let r = this.state.result;\n    var test = '';\n    var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\n    console.log(r);\n\n    for (let i = 0; i < r.length; i++) {\n      result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\n      test += i + 1 + \" \" + r[i].start_at + \" \";\n    }\n\n    result += \"</table>\"; // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\n\n    return result;\n    this.document.getElementById(\"showtime\").innerHTML = result;\n  }\n\n}\n\nexport default Showtimes;","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/Showtimes.js"],"names":["React","ReactDOM","Showtimes","Component","constructor","props","handleSubscriptionChange","dataSource","xhr","XMLHttpRequest","cinema_name","state","cinema","urlCinemas","addEventListener","resp","JSON","parse","responseText","i","cinemas","length","toLowerCase","name","setState","cinema_id","id","city_id","console","log","open","send","xhr2","movie_id","urlShowtimes","result_arr","showtimes","showtime","push","result","location","componentDidMount","subscribe","subscribedValue","value","componentWillUnmount","unsubscribe","render","__html","displayShowtimes","r","test","start_at","document","getElementById","innerHTML"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,iBAAP,C,CAEA;AACA;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkEnBC,wBAlEmB,GAkEQC,UAAU,IAAI;AACrC,UAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACA,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,MAA7B;AACA,UAAIC,UAAU,GAAG,4FAAjB;AACAL,MAAAA,GAAG,CAACM,gBAAJ,CAAqB,MAArB,EAA6B,MAAM;AAC/B;AACA,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,YAAf,CAAX;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,OAAL,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC1C,cAAIP,MAAM,GAAGG,IAAI,CAACK,OAAL,CAAaD,CAAb,CAAb;;AACA,cAAIT,WAAW,CAACY,WAAZ,MAA6BV,MAAM,CAACW,IAAP,CAAYD,WAAZ,EAAjC,EAA4D;AACxD,iBAAKE,QAAL,CAAc;AACVC,cAAAA,SAAS,EAAEb,MAAM,CAACc,EADR;AAEVC,cAAAA,OAAO,EAAEf,MAAM,CAACe;AAFN,aAAd;AAIH;AAEJ;;AAEDC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AAEH,OAhBD;AAiBAH,MAAAA,GAAG,CAACsB,IAAJ,CAAS,KAAT,EAAgBjB,UAAhB;AACAL,MAAAA,GAAG,CAACuB,IAAJ;AAEA,UAAIC,IAAI,GAAG,IAAIvB,cAAJ,EAAX;AACA,UAAIkB,OAAO,GAAG,KAAKhB,KAAL,CAAWgB,OAAzB;AACA,UAAIM,QAAQ,GAAG,KAAKtB,KAAL,CAAWsB,QAA1B;AAGA,UAAIC,YAAY,GAAG,kEAAkEP,OAAlE,GAA4E,YAA5E,GAA2FM,QAA3F,GAAsG,0CAAzH;AACAD,MAAAA,IAAI,CAAClB,gBAAL,CAAsB,MAAtB,EAA8B,MAAM;AAChC;AACA,YAAIqB,UAAU,GAAG,EAAjB;AACA,YAAIpB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWe,IAAI,CAACd,YAAhB,CAAX;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWc,SAAvB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;;AACA,aAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACqB,SAAL,CAAef,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,cAAIkB,QAAQ,GAAGtB,IAAI,CAACqB,SAAL,CAAejB,CAAf,CAAf,CAD4C,CAE5C;;AACA,cAAIkB,QAAQ,CAACZ,SAAT,IAAsB,KAAKd,KAAL,CAAWc,SAAjC,IAA8CY,QAAQ,CAACJ,QAAT,IAAqBA,QAAvE,EAAiF;AAC7EE,YAAAA,UAAU,CAACG,IAAX,CAAgBD,QAAhB;AACH;AAGJ;;AAEDT,QAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;AAEA,aAAKX,QAAL,CAAc;AACVe,UAAAA,MAAM,EAAEJ;AADE,SAAd;AAIH,OAtBD;AAuBAH,MAAAA,IAAI,CAACF,IAAL,CAAU,KAAV,EAAiBI,YAAjB;AACAF,MAAAA,IAAI,CAACD,IAAL;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AAIH,KA9HkB;;AAEf,SAAKA,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKP,KAAL,CAAWmC,QAAX,CAAoB7B,KAApB,CAA0BC,MADzB;AAETqB,MAAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWmC,QAAX,CAAoB7B,KAApB,CAA0BsB,QAF3B;AAGTM,MAAAA,MAAM,EAAE,EAHC;AAITd,MAAAA,SAAS,EAAE,EAJF;AAKTE,MAAAA,OAAO,EAAE;AALA,KAAb;AAOH;;AAEDc,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA,SAAKpC,KAAL,CAAWE,UAAX,CAAsBmC,SAAtB,CACI,KAAKpC,wBADT,EAHgB,CAOhB;AACA;;AACA,QACI,KAAKK,KAAL,CAAWgC,eAAX,KACA,KAAKtC,KAAL,CAAWE,UAAX,CAAsBqC,KAF1B,EAGE;AACE,WAAKpB,QAAL,CAAc;AACVmB,QAAAA,eAAe,EAAE,KAAKtC,KAAL,CAAWE,UAAX,CAAsBqC;AAD7B,OAAd;AAGH;AAEJ;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKxC,KAAL,CAAWE,UAAX,CAAsBuC,WAAtB,CACE,KAAKxC,wBADP;AAGD;;AAGHyC,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKpC,KAAL,CAAWC,MAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWsB,QAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKtB,KAAL,CAAWc,SAAhB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWgB,OAAhB,CAJJ,EAUI;AAAK,MAAA,uBAAuB,EAAE;AAAEqB,QAAAA,MAAM,EAAE,KAAKC,gBAAL;AAAV,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CAgBI;AAhBJ,KAFK,CAuBL;AACH;;AAkEDA,EAAAA,gBAAgB,GAAG;AAEf;AACA,QAAIC,CAAC,GAAG,KAAKvC,KAAL,CAAW4B,MAAnB;AACA,QAAIY,IAAI,GAAG,EAAX;AACA,QAAIZ,MAAM,GAAG,+CAAb;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYqB,CAAZ;;AACA,SAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,CAAC,CAAC7B,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AAC/BoB,MAAAA,MAAM,IAAI,cAAcpB,CAAC,GAAG,CAAlB,IAAuB,WAAvB,GAAqC+B,CAAC,CAAC/B,CAAD,CAAD,CAAKiC,QAA1C,GAAqD,YAA/D;AACAD,MAAAA,IAAI,IAAKhC,CAAC,GAAG,CAAL,GAAU,GAAV,GAAgB+B,CAAC,CAAC/B,CAAD,CAAD,CAAKiC,QAArB,GAAgC,GAAxC;AACH;;AACDb,IAAAA,MAAM,IAAI,UAAV,CAXe,CAaf;;AAEA,WAAOA,MAAP;AAEA,SAAKc,QAAL,CAAcC,cAAd,CAA6B,UAA7B,EAAyCC,SAAzC,GAAqDhB,MAArD;AACH;;AApJmC;;AAuJxC,eAAerC,SAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Showtimes.css'\r\n\r\n// const cinema = this.props.location.state.cinema;\r\n// const movie_id = this.props.location.state.movie_id\r\n\r\n\r\nclass Showtimes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cinema: this.props.location.state.cinema,\r\n            movie_id: this.props.location.state.movie_id,\r\n            result: [],\r\n            cinema_id: '',\r\n            city_id: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Event listeners are only safe to add after mount,\r\n        // So they won't leak if mount is interrupted or errors.\r\n        this.props.dataSource.subscribe(\r\n            this.handleSubscriptionChange\r\n        );\r\n\r\n        // External values could change between render and mount,\r\n        // In some cases it may be important to handle this case.\r\n        if (\r\n            this.state.subscribedValue !==\r\n            this.props.dataSource.value\r\n        ) {\r\n            this.setState({\r\n                subscribedValue: this.props.dataSource.value,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dataSource.unsubscribe(\r\n          this.handleSubscriptionChange\r\n        );\r\n      }\r\n    \r\n\r\n    render() {\r\n        // this.displayShowtimes()\r\n        return (\r\n            <div id=\"showtime\">\r\n                <h1>{this.state.cinema}</h1>\r\n                <h1>{this.state.movie_id}</h1>\r\n                <h1>{this.state.cinema_id}</h1>\r\n                <h1>{this.state.city_id}</h1>\r\n\r\n\r\n                {/* <div id=\"showtime\"></div> */}\r\n                {/* {this.displayShowtimes()} */}\r\n\r\n                <div dangerouslySetInnerHTML={{ __html: this.displayShowtimes() }} />\r\n\r\n\r\n            </div>\r\n\r\n            // this.displayShowtimes()\r\n\r\n        )\r\n\r\n\r\n        // this.displayShowtimes()\r\n    }\r\n\r\n\r\n\r\n    handleSubscriptionChange = dataSource => {\r\n        var xhr = new XMLHttpRequest()\r\n        var cinema_name = this.state.cinema;\r\n        let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n        xhr.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var resp = JSON.parse(xhr.responseText);\r\n            for (let i = 0; i < resp.cinemas.length; i++) {\r\n                var cinema = resp.cinemas[i];\r\n                if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\r\n                    this.setState({\r\n                        cinema_id: cinema.id,\r\n                        city_id: cinema.city_id,\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            console.log(this.state);\r\n\r\n        })\r\n        xhr.open('GET', urlCinemas)\r\n        xhr.send()\r\n\r\n        var xhr2 = new XMLHttpRequest()\r\n        var city_id = this.state.city_id;\r\n        var movie_id = this.state.movie_id;\r\n\r\n\r\n        let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n        xhr2.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var result_arr = [];\r\n            var resp = JSON.parse(xhr2.responseText);\r\n            console.log(this.state.cinema_id)\r\n            console.log(movie_id)\r\n            for (let i = 0; i < resp.showtimes.length; i++) {\r\n                var showtime = resp.showtimes[i];\r\n                // console.log(showtime);\r\n                if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\r\n                    result_arr.push(showtime);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            console.log(result_arr);\r\n\r\n            this.setState({\r\n                result: result_arr,\r\n            });\r\n\r\n        })\r\n        xhr2.open('GET', urlShowtimes)\r\n        xhr2.send()\r\n\r\n        console.log(this.state);\r\n\r\n\r\n\r\n    }\r\n\r\n    displayShowtimes() {\r\n\r\n        // this.getData();\r\n        let r = this.state.result;\r\n        var test = '';\r\n        var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\r\n        console.log(r);\r\n        for (let i = 0; i < r.length; i++) {\r\n            result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\r\n            test += (i + 1) + \" \" + r[i].start_at + \" \";\r\n        }\r\n        result += \"</table>\";\r\n\r\n        // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\r\n\r\n        return result;\r\n\r\n        this.document.getElementById(\"showtime\").innerHTML = result;\r\n    }\r\n}\r\n\r\nexport default Showtimes;"]},"metadata":{},"sourceType":"module"}