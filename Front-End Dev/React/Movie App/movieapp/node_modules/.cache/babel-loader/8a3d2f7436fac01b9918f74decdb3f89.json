{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\Showtimes.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport './Showtimes.css'; // const cinema = this.props.location.state.cinema;\n// const movie_id = this.props.location.state.movie_id\n\nclass Showtimes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cinema: this.props.location.state.cinema,\n      movie_id: this.props.location.state.movie_id,\n      result: [],\n      cinema_id: '',\n      city_id: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const StyledTableCell = withStyles(theme => ({\n      head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white\n      },\n      body: {\n        fontSize: 14\n      }\n    }))(TableCell);\n    const StyledTableRow = withStyles(theme => ({\n      root: {\n        '&:nth-of-type(odd)': {\n          backgroundColor: theme.palette.background.default\n        }\n      }\n    }))(TableRow);\n\n    function createData(name, calories, fat, carbs, protein) {\n      return {\n        name,\n        calories,\n        fat,\n        carbs,\n        protein\n      };\n    }\n\n    const rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n    const useStyles = makeStyles(theme => ({\n      root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n        overflowX: 'auto'\n      },\n      table: {\n        minWidth: 700\n      }\n    }));\n    const classes = useStyles(); // this.displayShowtimes()\n\n    return React.createElement(\"div\", {\n      id: \"showtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.cinema), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.movie_id), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.cinema_id), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.city_id), React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: this.displayShowtimes()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })) // this.displayShowtimes()\n    ; // this.displayShowtimes()\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    var cinema_name = this.state.cinema;\n    let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n\n      for (let i = 0; i < resp.cinemas.length; i++) {\n        var cinema = resp.cinemas[i];\n\n        if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\n          this.setState({\n            cinema_id: cinema.id,\n            city_id: cinema.city_id\n          });\n        }\n      }\n\n      console.log(this.state);\n    });\n    xhr.open('GET', urlCinemas);\n    xhr.send();\n    var xhr2 = new XMLHttpRequest();\n    var city_id = this.state.city_id;\n    var movie_id = this.state.movie_id;\n    let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n    xhr2.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var result_arr = [];\n      var resp = JSON.parse(xhr2.responseText);\n      console.log(this.state.cinema_id);\n      console.log(movie_id);\n\n      for (let i = 0; i < resp.showtimes.length; i++) {\n        var showtime = resp.showtimes[i]; // console.log(showtime);\n\n        if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n          result_arr.push(showtime);\n        }\n      }\n\n      console.log(result_arr);\n      this.setState({\n        result: result_arr\n      });\n    });\n    xhr2.open('GET', urlShowtimes);\n    xhr2.send();\n    console.log(this.state);\n  }\n\n  displayShowtimes() {\n    // this.getData();\n    let r = this.state.result;\n    var test = ''; // var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\n\n    var result = \"<Paper className={classes.root}><Table className={classes.table} aria-label='customized table'><TableHead><TableRow>\";\n    result += \"<StyledTableCell>S/No</StyledTableCell>\";\n    result += \" <StyledTableCell>Showtime</StyledTableCell>\";\n    console.log(r);\n\n    for (let i = 0; i < r.length; i++) {\n      result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\n      test += i + 1 + \" \" + r[i].start_at + \" \";\n    }\n\n    result += \"</table>\"; // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\n\n    return result; // this.document.getElementById(\"showtime\").innerHTML = result;\n  }\n\n}\n\nexport default Showtimes;","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/Showtimes.js"],"names":["React","ReactDOM","withStyles","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Showtimes","Component","constructor","props","state","cinema","location","movie_id","result","cinema_id","city_id","componentDidMount","getData","render","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","default","createData","name","calories","fat","carbs","protein","rows","useStyles","width","marginTop","spacing","overflowX","table","minWidth","classes","__html","displayShowtimes","xhr","XMLHttpRequest","cinema_name","urlCinemas","addEventListener","resp","JSON","parse","responseText","i","cinemas","length","toLowerCase","setState","id","console","log","open","send","xhr2","urlShowtimes","result_arr","showtimes","showtime","push","r","test","start_at"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport './Showtimes.css'\r\n\r\n// const cinema = this.props.location.state.cinema;\r\n// const movie_id = this.props.location.state.movie_id\r\n\r\n\r\nclass Showtimes extends React.Component {\r\n    \r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cinema: this.props.location.state.cinema,\r\n            movie_id: this.props.location.state.movie_id,\r\n            result: [],\r\n            cinema_id: '',\r\n            city_id: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const StyledTableCell = withStyles(theme => ({\r\n            head: {\r\n              backgroundColor: theme.palette.common.black,\r\n              color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n              fontSize: 14,\r\n            },\r\n          }))(TableCell);\r\n          \r\n          const StyledTableRow = withStyles(theme => ({\r\n            root: {\r\n              '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.background.default,\r\n              },\r\n            },\r\n          }))(TableRow);\r\n          \r\n          function createData(name, calories, fat, carbs, protein) {\r\n            return { name, calories, fat, carbs, protein };\r\n          }\r\n          \r\n          const rows = [\r\n            createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n            createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n            createData('Eclair', 262, 16.0, 24, 6.0),\r\n            createData('Cupcake', 305, 3.7, 67, 4.3),\r\n            createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n          ];\r\n          \r\n          const useStyles = makeStyles(theme => ({\r\n            root: {\r\n              width: '100%',\r\n              marginTop: theme.spacing(3),\r\n              overflowX: 'auto',\r\n            },\r\n            table: {\r\n              minWidth: 700,\r\n            },\r\n          }));\r\n\r\n          const classes = useStyles();\r\n\r\n        // this.displayShowtimes()\r\n        return (\r\n            <div id =\"showtime\">\r\n                <h1>{this.state.cinema}</h1>\r\n                <h1>{this.state.movie_id}</h1>\r\n                <h1>{this.state.cinema_id}</h1>\r\n                <h1>{this.state.city_id}</h1>\r\n\r\n\r\n                {/* <div id=\"showtime\"></div> */}\r\n                {/* {this.displayShowtimes()} */}\r\n\r\n                <div dangerouslySetInnerHTML={{__html:this.displayShowtimes()}}/>\r\n\r\n                \r\n            </div>\r\n\r\n            // this.displayShowtimes()\r\n\r\n        )\r\n       \r\n\r\n        // this.displayShowtimes()\r\n    }\r\n\r\n\r\n\r\n    getData() {\r\n        var xhr = new XMLHttpRequest()\r\n        var cinema_name = this.state.cinema;\r\n        let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n        xhr.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var resp = JSON.parse(xhr.responseText);\r\n            for (let i = 0; i < resp.cinemas.length; i++) {\r\n                var cinema = resp.cinemas[i];\r\n                if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\r\n                    this.setState({\r\n                        cinema_id: cinema.id,\r\n                        city_id: cinema.city_id,\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            console.log(this.state);\r\n\r\n        })\r\n        xhr.open('GET', urlCinemas)\r\n        xhr.send()\r\n\r\n        var xhr2 = new XMLHttpRequest()\r\n        var city_id = this.state.city_id;\r\n        var movie_id = this.state.movie_id;\r\n\r\n\r\n        let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n        xhr2.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var result_arr = [];\r\n            var resp = JSON.parse(xhr2.responseText);\r\n            console.log(this.state.cinema_id)\r\n            console.log(movie_id)\r\n            for (let i = 0; i < resp.showtimes.length; i++) {\r\n                var showtime = resp.showtimes[i];\r\n                // console.log(showtime);\r\n                if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\r\n                    result_arr.push(showtime);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            console.log(result_arr);\r\n\r\n            this.setState({\r\n                result: result_arr,\r\n            });\r\n\r\n        })\r\n        xhr2.open('GET', urlShowtimes)\r\n        xhr2.send()\r\n\r\n        console.log(this.state);\r\n\r\n\r\n\r\n    }\r\n\r\n    displayShowtimes() {\r\n\r\n        // this.getData();\r\n        let r = this.state.result;\r\n        var test = '';\r\n        // var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\r\n\r\n        var result = \"<Paper className={classes.root}><Table className={classes.table} aria-label='customized table'><TableHead><TableRow>\";\r\n        result +=  \"<StyledTableCell>S/No</StyledTableCell>\";\r\n        result += \" <StyledTableCell>Showtime</StyledTableCell>\"\r\n        console.log(r);\r\n        for (let i = 0; i < r.length; i++) {\r\n            result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\r\n            test += (i+1) +\" \"+ r[i].start_at +\" \";\r\n        }\r\n        result += \"</table>\";\r\n\r\n        // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\r\n\r\n        return result;\r\n\r\n        // this.document.getElementById(\"showtime\").innerHTML = result;\r\n    }\r\n}\r\n\r\nexport default Showtimes;"]},"metadata":{},"sourceType":"module"}