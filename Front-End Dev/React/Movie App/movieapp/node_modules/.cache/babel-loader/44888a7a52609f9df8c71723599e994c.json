{"ast":null,"code":"var _jsxFileName = \"/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Showtimes.js\";\nimport React from 'react';\nimport './Showtimes.css';\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap'; // import Button from '@material-ui/core/Button';\n\nimport { MDBCardImage } from \"mdbreact\";\n\nclass Showtimes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cinema: this.props.location.state.cinema,\n      movie_id: this.props.location.state.movie_id,\n      result: [],\n      cinema_id: '',\n      city_id: '',\n      apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\n      apikeyOMDB: '9e790f8b',\n      imdbid: '',\n      movie_details: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    window.alert('We will bring you to ' + this.state.cinema + '\\'s website for booking. Thank you for using our service!');\n    window.location.href = value;\n  }\n\n  printDate(stringDate) {\n    var date = new Date(stringDate); // console.log((date.getMonth()+1) + '/' + date.getDate() + '/' +  date.getFullYear())\n\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    stringDate = date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear() + \" Time: \" + strTime;\n    return stringDate;\n  }\n\n  displayDetail() {\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const center = {\n      textAlign: 'center'\n    };\n\n    if (this.state.movie_details.Title) {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(MDBCardImage, {\n        className: \"img-fluid pb-3 float-left\",\n        src: this.state.movie_details.Poster,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.movie_details.Title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Release date:\"), \"  \", this.state.movie_details.Released, \"  \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"IMDB Rating:\"), \"  \", this.state.movie_details.imdbRating, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Runtime:\"), \"  \", this.state.movie_details.Runtime, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Rated:\"), \"  \", this.state.movie_details.Rated, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Genre:\"), \"  \", this.state.movie_details.Genre, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Director:\"), \"  \", this.state.movie_details.Director, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Production:\"), \"  \", this.state.movie_details.Production, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Language:\"), \"  \", this.state.movie_details.Language, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: bold,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Plot:\"), \" \", this.state.movie_details.Plot))), React.createElement(\"div\", {\n        className: \"table1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.movie_details.Title, \" showtimes at \", this.state.cinema, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        variant: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"#\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Timeslot\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.result.map((value, index) => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, index + 1), React.createElement(\"td\", {\n        colSpan: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.printDate(value.start_at)), React.createElement(\"td\", {\n        style: center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-light\",\n        value: value.booking_link,\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Book Now\")))))))));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"showtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.displayDetail());\n  }\n\n  getData() {\n    //in case api is down uncomment below (must choose amk hub)\n    var data = require('./backupjson/getallcinemas.json');\n\n    var city_id = this.state.city_id;\n\n    var data = require('./backupjson/formplanshowtimeterminatoramk.json');\n\n    var result_arr = [];\n    var cinema_id = \"66156\";\n    var movie_id = this.state.movie_id;\n\n    for (let i = 0; i < data.showtimes.length; i++) {\n      var showtime = data.showtimes[i];\n      var start_at = showtime.start_at;\n      var showtimeDateFormat = new Date(start_at);\n      var dateNow = Date.now();\n\n      if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n        if (showtimeDateFormat >= dateNow) {\n          result_arr.push(showtime);\n        }\n      } // }\n\n    }\n\n    console.log(result_arr);\n    this.setState({\n      result: result_arr\n    });\n    this.setState({\n      imdbid: \"tt6450804\"\n    }, () => {\n      var data = require('./backupjson/omdbterminatordetails.json');\n\n      this.setState({\n        movie_details: data\n      });\n    }); //api method\n    // var xhr = new XMLHttpRequest()\n    // var cinema_name = this.state.cinema;\n    // let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + this.state.apikeyIS;\n    // var movie_id = this.state.movie_id;\n    // xhr.addEventListener('load', () => {\n    //     // update the state of the component with the result here\n    //     var resp = JSON.parse(xhr.responseText);\n    //     for (let i = 0; i < resp.cinemas.length; i++) {\n    //         var cinema = resp.cinemas[i];\n    //         if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\n    //             this.setState({\n    //                 cinema_id: cinema.id,\n    //                 city_id: cinema.city_id,\n    //             });\n    //         }\n    //     }\n    //     console.log(this.state);\n    //     var xhr2 = new XMLHttpRequest()\n    //     var city_id = this.state.city_id;\n    //     console.log(city_id)\n    //     console.log(movie_id)\n    //     //get showtimes\n    //     let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\n    //     xhr2.addEventListener('load', () => {\n    //         // update the state of the component with the result here\n    //         var result_arr = [];\n    //         var resp = JSON.parse(xhr2.responseText);\n    //         console.log(this.state.cinema_id)\n    //         console.log(movie_id)\n    //         for (let i = 0; i < resp.showtimes.length; i++) {\n    //             var showtime = resp.showtimes[i];\n    //             var start_at = showtime.start_at;\n    //             var showtimeDateFormat = new Date(start_at);\n    //             var dateNow = Date.now();\n    //             if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n    //                 if (showtimeDateFormat >= dateNow){\n    //                     result_arr.push(showtime);\n    //                 }\n    //             }\n    //             // }\n    //         }\n    //         console.log(result_arr);\n    //         this.setState({\n    //             result: result_arr,\n    //         });\n    //     })\n    //     xhr2.open('GET', urlShowtimes)\n    //     xhr2.send()\n    //     console.log(this.state);\n    // })\n    // xhr.open('GET', urlCinemas)\n    // xhr.send()\n    // // get movie details\n    // var xhr3 = new XMLHttpRequest();\n    // let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\n    // xhr3.addEventListener('load', () => {\n    //     // update the state of the component with the result here\n    //     var resp = JSON.parse(xhr3.responseText);\n    //     this.setState({\n    //         imdbid: resp.movie.imdb_id,\n    //     });\n    //     console.log(this.state.imdbid);\n    //     var xhr4 = new XMLHttpRequest()\n    //     //get movie details from imdb\n    //     let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdbid + \"&apikey=\" + this.state.apikeyOMDB;\n    //     xhr4.addEventListener('load', () => {\n    //         // update the state of the component with the result here\n    //         var resp = JSON.parse(xhr4.responseText);\n    //         this.setState({\n    //             movie_details: resp,\n    //         });\n    //         console.log(this.state);\n    //     })\n    //     xhr4.open('GET', urlMovieDetails)\n    //     xhr4.send()\n    // })\n    // xhr3.open('GET', urlmoviedetails)\n    // xhr3.send()\n  }\n\n  displayShowtimes() {\n    // this.getData();\n    let r = this.state.result;\n    var test = '';\n    var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\n    console.log(r);\n\n    for (let i = 0; i < r.length; i++) {\n      result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\n      test += i + 1 + \" \" + r[i].start_at + \" \";\n    }\n\n    result += \"</table>\"; // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\n\n    return result; // this.document.getElementById(\"showtime\").innerHTML = result;\n  }\n\n}\n\nexport default Showtimes;","map":{"version":3,"sources":["/Users/syukrirahiman/OneDrive - Singapore Management University/React/movieapp/src/Showtimes.js"],"names":["React","Table","Jumbotron","Container","Row","Col","Button","MDBCardImage","Showtimes","Component","constructor","props","state","cinema","location","movie_id","result","cinema_id","city_id","apikeyIS","apikeyOMDB","imdbid","movie_details","handleChange","bind","componentDidMount","getData","event","target","value","window","alert","href","printDate","stringDate","date","Date","hours","getHours","minutes","getMinutes","ampm","strTime","getMonth","getDate","getFullYear","displayDetail","bold","fontWeight","center","textAlign","Title","Poster","Released","imdbRating","Runtime","Rated","Genre","Director","Production","Language","Plot","map","index","start_at","booking_link","render","data","require","result_arr","i","showtimes","length","showtime","showtimeDateFormat","dateNow","now","push","console","log","setState","displayShowtimes","r","test"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './Showtimes.css'\r\n\r\nimport { Table, Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\r\n// import Button from '@material-ui/core/Button';\r\nimport { MDBCardImage } from \"mdbreact\";\r\n\r\n\r\nclass Showtimes extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cinema: this.props.location.state.cinema,\r\n            movie_id: this.props.location.state.movie_id,\r\n            result: [],\r\n            cinema_id: '',\r\n            city_id: '',\r\n            apikeyIS: '7UiR6NYdJicQiXms2GOxJSqBddHXuivw',\r\n            apikeyOMDB: '9e790f8b',\r\n            imdbid: '',\r\n            movie_details: {},\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n\r\n        window.alert('We will bring you to ' + this.state.cinema + '\\'s website for booking. Thank you for using our service!');\r\n        window.location.href = value;\r\n\r\n    }\r\n\r\n    printDate(stringDate) {\r\n        var date = new Date(stringDate);\r\n        // console.log((date.getMonth()+1) + '/' + date.getDate() + '/' +  date.getFullYear())\r\n\r\n        var hours = date.getHours();\r\n        var minutes = date.getMinutes();\r\n        var ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        var strTime = hours + ':' + minutes + ' ' + ampm;\r\n        stringDate = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear() + \" Time: \" + strTime;\r\n\r\n        return stringDate;\r\n\r\n    }\r\n\r\n    displayDetail() {\r\n        const bold = {\r\n            fontWeight: 'bold',\r\n        };\r\n\r\n        const center = {\r\n            textAlign: 'center',\r\n        };\r\n\r\n        if (this.state.movie_details.Title) {\r\n\r\n\r\n            return (\r\n\r\n                <Jumbotron fluid>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n\r\n\r\n                                <MDBCardImage\r\n                                    className=\"img-fluid pb-3 float-left\"\r\n                                    src={this.state.movie_details.Poster}\r\n                                />\r\n\r\n                            </Col>\r\n                            <Col xs={7}>\r\n\r\n                                <h1>{this.state.movie_details.Title}</h1>\r\n\r\n                                <p><span style={bold}>Release date:</span>  {this.state.movie_details.Released}  </p>\r\n                                <p> <span style={bold}>IMDB Rating:</span>  {this.state.movie_details.imdbRating} </p>\r\n                                <p> <span style={bold}>Runtime:</span>  {this.state.movie_details.Runtime} </p>\r\n                                <p> <span style={bold}>Rated:</span>  {this.state.movie_details.Rated} </p>\r\n                                <p> <span style={bold}>Genre:</span>  {this.state.movie_details.Genre} </p>\r\n                                <p> <span style={bold}>Director:</span>  {this.state.movie_details.Director} </p>\r\n                                <p> <span style={bold}>Production:</span>  {this.state.movie_details.Production} </p>\r\n                                <p> <span style={bold}>Language:</span>  {this.state.movie_details.Language} </p>\r\n\r\n                                <p><span style={bold}>Plot:</span> {this.state.movie_details.Plot}</p>\r\n\r\n\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                        <div className=\"table1\">\r\n                            <h3>{this.state.movie_details.Title} showtimes at {this.state.cinema} </h3>\r\n                            <br></br>\r\n\r\n                            <Table striped bordered hover variant=\"dark\"  >\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Timeslot</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.result.map((value, index) => (\r\n                                        <tr>\r\n                                            <td>\r\n                                                {index + 1}\r\n                                            </td>\r\n                                            <td colSpan=\"2\">{this.printDate(value.start_at)}</td>\r\n                                            <td style={center}><Button variant=\"outline-light\" value={value.booking_link} onClick={this.handleChange}>Book Now</Button></td>\r\n                                        </tr>\r\n                                    ))}\r\n\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n\r\n\r\n                    </Container>\r\n                </Jumbotron>\r\n\r\n\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"showtime\">\r\n\r\n                {this.displayDetail()}\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    getData() {\r\n\r\n        //in case api is down uncomment below (must choose amk hub)\r\n\r\n        var data = require('./backupjson/getallcinemas.json');\r\n\r\n        var city_id = this.state.city_id;\r\n        var data = require('./backupjson/formplanshowtimeterminatoramk.json');\r\n        var result_arr = [];\r\n        var cinema_id = \"66156\";\r\n        var movie_id = this.state.movie_id;\r\n\r\n        for (let i = 0; i < data.showtimes.length; i++) {\r\n\r\n            var showtime = data.showtimes[i];\r\n            var start_at = showtime.start_at;\r\n            var showtimeDateFormat = new Date(start_at);\r\n            var dateNow = Date.now();\r\n\r\n            if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\r\n                if (showtimeDateFormat >= dateNow){\r\n                    result_arr.push(showtime);\r\n                }\r\n                \r\n            }\r\n            // }\r\n\r\n        }\r\n\r\n        console.log(result_arr);\r\n\r\n        this.setState({\r\n            result: result_arr,\r\n        });\r\n\r\n        this.setState({\r\n            imdbid: \"tt6450804\",\r\n        }, ()=>{\r\n            var data = require('./backupjson/omdbterminatordetails.json');\r\n            this.setState({\r\n                movie_details: data,\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //api method\r\n\r\n\r\n\r\n        // var xhr = new XMLHttpRequest()\r\n        // var cinema_name = this.state.cinema;\r\n        // let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=\" + this.state.apikeyIS;\r\n        // var movie_id = this.state.movie_id;\r\n        // xhr.addEventListener('load', () => {\r\n        //     // update the state of the component with the result here\r\n        //     var resp = JSON.parse(xhr.responseText);\r\n        //     for (let i = 0; i < resp.cinemas.length; i++) {\r\n        //         var cinema = resp.cinemas[i];\r\n        //         if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\r\n        //             this.setState({\r\n        //                 cinema_id: cinema.id,\r\n        //                 city_id: cinema.city_id,\r\n        //             });\r\n        //         }\r\n\r\n        //     }\r\n\r\n        //     console.log(this.state);\r\n\r\n        //     var xhr2 = new XMLHttpRequest()\r\n        //     var city_id = this.state.city_id;\r\n\r\n\r\n        //     console.log(city_id)\r\n        //     console.log(movie_id)\r\n\r\n        //     //get showtimes\r\n        //     let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=\" + this.state.apikeyIS;\r\n        //     xhr2.addEventListener('load', () => {\r\n        //         // update the state of the component with the result here\r\n        //         var result_arr = [];\r\n        //         var resp = JSON.parse(xhr2.responseText);\r\n        //         console.log(this.state.cinema_id)\r\n        //         console.log(movie_id)\r\n        //         for (let i = 0; i < resp.showtimes.length; i++) {\r\n        //             var showtime = resp.showtimes[i];\r\n        //             var start_at = showtime.start_at;\r\n        //             var showtimeDateFormat = new Date(start_at);\r\n        //             var dateNow = Date.now();\r\n        \r\n        //             if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\r\n        //                 if (showtimeDateFormat >= dateNow){\r\n        //                     result_arr.push(showtime);\r\n        //                 }\r\n                        \r\n        //             }\r\n        //             // }\r\n\r\n        //         }\r\n\r\n        //         console.log(result_arr);\r\n\r\n        //         this.setState({\r\n        //             result: result_arr,\r\n        //         });\r\n\r\n        //     })\r\n        //     xhr2.open('GET', urlShowtimes)\r\n        //     xhr2.send()\r\n\r\n        //     console.log(this.state);\r\n\r\n\r\n\r\n        // })\r\n        // xhr.open('GET', urlCinemas)\r\n        // xhr.send()\r\n\r\n\r\n\r\n\r\n\r\n        // // get movie details\r\n        // var xhr3 = new XMLHttpRequest();\r\n        // let urlmoviedetails = \"https://api.internationalshowtimes.com/v4/movies/\" + movie_id + \"?fields=imdb_id&apikey=\" + this.state.apikeyIS;\r\n\r\n        // xhr3.addEventListener('load', () => {\r\n        //     // update the state of the component with the result here\r\n        //     var resp = JSON.parse(xhr3.responseText);\r\n        //     this.setState({\r\n        //         imdbid: resp.movie.imdb_id,\r\n        //     });\r\n\r\n        //     console.log(this.state.imdbid);\r\n\r\n        //     var xhr4 = new XMLHttpRequest()\r\n\r\n        //     //get movie details from imdb\r\n        //     let urlMovieDetails = \"http://www.omdbapi.com/?i=\" + this.state.imdbid + \"&apikey=\" + this.state.apikeyOMDB;\r\n        //     xhr4.addEventListener('load', () => {\r\n        //         // update the state of the component with the result here\r\n\r\n\r\n        //         var resp = JSON.parse(xhr4.responseText);\r\n        //         this.setState({\r\n        //             movie_details: resp,\r\n        //         });\r\n\r\n        //         console.log(this.state);\r\n        //     })\r\n        //     xhr4.open('GET', urlMovieDetails)\r\n        //     xhr4.send()\r\n\r\n        // })\r\n        // xhr3.open('GET', urlmoviedetails)\r\n        // xhr3.send()\r\n\r\n\r\n\r\n    }\r\n\r\n    displayShowtimes() {\r\n\r\n        // this.getData();\r\n        let r = this.state.result;\r\n        var test = '';\r\n        var result = \"<table> <tr> <th>S/No</th> <th>Time</th></tr>\";\r\n        console.log(r);\r\n        for (let i = 0; i < r.length; i++) {\r\n            result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\r\n            test += (i + 1) + \" \" + r[i].start_at + \" \";\r\n        }\r\n        result += \"</table>\";\r\n\r\n        // return \"<div id  = 'showtime' dangerouslySetInnerHTML={{__html:\"+result+'}}></div>'\r\n\r\n        return result;\r\n\r\n        // this.document.getElementById(\"showtime\").innerHTML = result;\r\n    }\r\n}\r\n\r\nexport default Showtimes;"]},"metadata":{},"sourceType":"module"}