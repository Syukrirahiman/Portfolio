{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Syukri Rahiman\\\\React\\\\movieapp\\\\src\\\\Showtimes.js\";\nimport React from 'react'; // const cinema = this.props.location.state.cinema;\n// const movie_id = this.props.location.state.movie_id\n\nclass Showtimes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cinema: this.props.location.state.cinema,\n      movie_id: this.props.location.state.movie_id,\n      result: [],\n      cinema_id: '',\n      city_id: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    // this.displayShowtimes()\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.cinema), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.movie_id), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.cinema_id), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.city_id), React.createElement(\"div\", {\n      id: \"showtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })); // this.displayShowtimes()\n  }\n\n  getData() {\n    var xhr = new XMLHttpRequest();\n    var cinema_name = this.state.cinema;\n    let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var resp = JSON.parse(xhr.responseText);\n\n      for (let i = 0; i < resp.cinemas.length; i++) {\n        var cinema = resp.cinemas[i];\n\n        if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\n          this.setState({\n            cinema_id: cinema.id,\n            city_id: cinema.city_id\n          });\n        }\n      }\n\n      console.log(this.state);\n    });\n    xhr.open('GET', urlCinemas);\n    xhr.send();\n    var xhr2 = new XMLHttpRequest();\n    var city_id = this.state.city_id;\n    var movie_id = this.state.movie_id;\n    let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\n    xhr2.addEventListener('load', () => {\n      // update the state of the component with the result here\n      var result_arr = [];\n      var resp = JSON.parse(xhr2.responseText);\n      console.log(this.state.cinema_id);\n      console.log(movie_id);\n\n      for (let i = 0; i < resp.showtimes.length; i++) {\n        var showtime = resp.showtimes[i]; // console.log(showtime);\n\n        if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\n          result_arr.push(showtime);\n        }\n      }\n\n      console.log(result_arr);\n      this.setState({\n        result: result_arr\n      });\n    });\n    xhr2.open('GET', urlShowtimes);\n    xhr2.send();\n    console.log(this.state);\n  }\n\n  displayShowtimes() {\n    // this.getData();\n    let r = this.state.result;\n    var test = '';\n    var result = \"<table> <tr> <th>S/No</th> <th>Time</th>\";\n    console.log(r);\n\n    for (let i = 0; i < r.length; i++) {\n      result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\n      test += i + 1 + \" \" + r[i].start_at + \" \";\n    }\n\n    result += \"</table>\"; // return result;\n\n    this.document.getElementById(\"showtime\").innerHTML = result;\n  }\n\n}\n\nexport default Showtimes;","map":{"version":3,"sources":["C:/Users/Syukri Rahiman/React/movieapp/src/Showtimes.js"],"names":["React","Showtimes","Component","constructor","props","state","cinema","location","movie_id","result","cinema_id","city_id","componentDidMount","getData","render","xhr","XMLHttpRequest","cinema_name","urlCinemas","addEventListener","resp","JSON","parse","responseText","i","cinemas","length","toLowerCase","name","setState","id","console","log","open","send","xhr2","urlShowtimes","result_arr","showtimes","showtime","push","displayShowtimes","r","test","start_at","document","getElementById","innerHTML"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// const cinema = this.props.location.state.cinema;\r\n// const movie_id = this.props.location.state.movie_id\r\n\r\n\r\nclass Showtimes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cinema: this.props.location.state.cinema,\r\n            movie_id: this.props.location.state.movie_id,\r\n            result: [],\r\n            cinema_id: '',\r\n            city_id: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n\r\n    }\r\n\r\n    render() {\r\n        // this.displayShowtimes()\r\n        return (\r\n            <div>\r\n                <h1>{this.state.cinema}</h1>\r\n                <h1>{this.state.movie_id}</h1>\r\n                <h1>{this.state.cinema_id}</h1>\r\n                <h1>{this.state.city_id}</h1>\r\n\r\n\r\n                <div id=\"showtime\"></div>\r\n                {/* {this.displayShowtimes()} */}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n\r\n        // this.displayShowtimes()\r\n    }\r\n\r\n    getData() {\r\n        var xhr = new XMLHttpRequest()\r\n        var cinema_name = this.state.cinema;\r\n        let urlCinemas = \"https://api.internationalshowtimes.com/v4/cinemas/?apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n        xhr.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var resp = JSON.parse(xhr.responseText);\r\n            for (let i = 0; i < resp.cinemas.length; i++) {\r\n                var cinema = resp.cinemas[i];\r\n                if (cinema_name.toLowerCase() == cinema.name.toLowerCase()) {\r\n                    this.setState({\r\n                        cinema_id: cinema.id,\r\n                        city_id: cinema.city_id,\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            console.log(this.state);\r\n\r\n        })\r\n        xhr.open('GET', urlCinemas)\r\n        xhr.send()\r\n\r\n        var xhr2 = new XMLHttpRequest()\r\n        var city_id = this.state.city_id;\r\n        var movie_id = this.state.movie_id;\r\n\r\n\r\n        let urlShowtimes = \"https://api.internationalshowtimes.com/v4/showtimes?city_ids=\" + city_id + \"&movie_id=\" + movie_id + \"&apikey=5ogMBOJo2nty7v7YNku1eZkxHEAdEJMK\";\r\n        xhr2.addEventListener('load', () => {\r\n            // update the state of the component with the result here\r\n            var result_arr = [];\r\n            var resp = JSON.parse(xhr2.responseText);\r\n            console.log(this.state.cinema_id)\r\n            console.log(movie_id)\r\n            for (let i = 0; i < resp.showtimes.length; i++) {\r\n                var showtime = resp.showtimes[i];\r\n                // console.log(showtime);\r\n                if (showtime.cinema_id == this.state.cinema_id && showtime.movie_id == movie_id) {\r\n                    result_arr.push(showtime);\r\n                }\r\n\r\n\r\n            }\r\n\r\n            console.log(result_arr);\r\n\r\n            this.setState({\r\n                result: result_arr,\r\n            });\r\n\r\n        })\r\n        xhr2.open('GET', urlShowtimes)\r\n        xhr2.send()\r\n\r\n        console.log(this.state);\r\n\r\n\r\n\r\n    }\r\n\r\n    displayShowtimes() {\r\n\r\n        // this.getData();\r\n        let r = this.state.result;\r\n        var test = '';\r\n        var result = \"<table> <tr> <th>S/No</th> <th>Time</th>\";\r\n        console.log(r);\r\n        for (let i = 0; i < r.length; i++) {\r\n            result += \"<tr><td>\" + (i + 1) + \"</td><td>\" + r[i].start_at + \"</td></tr>\";\r\n            test += (i+1) +\" \"+ r[i].start_at +\" \";\r\n        }\r\n        result += \"</table>\";\r\n\r\n        // return result;\r\n\r\n        this.document.getElementById(\"showtime\").innerHTML = result;\r\n    }\r\n}\r\n\r\nexport default Showtimes;"]},"metadata":{},"sourceType":"module"}